
    TTTTTTTTTT  AAAAAAAAAA   BBBBBBB      LLLL        OOOOOOOOOO
    TTTTTTTTTT  AAA    AAA   BBBBBBBBB    LLLL        OOOOOOOOOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBBBBBB      LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBBBBBBBB    LLLLLLLLL   OOOOOOOOOO
       TTT      AAA    AAA   BBBBBBB      LLLLLLLLL   OOOOOOOOOO

 <TABLO  Version 6.5   January 2016>                                   





                     GEMPACK SOFTWARE
     << COPYRIGHT 1987-2016:  The Impact Project and KPSOFT >>
   
   

    +++  INFORMATION ABOUT THIS PRINT FILE  +++
   
 
 ! This file was created at 16:39:55 on 25-JUN-2017 by the program
 !  <TABLO  Version 6.5   January 2016>
 ! which accesses some of the routines in the GEMPACK software release
 !  <GEMPACK Release 11.4.003   January 2016>
 
 !     -------------------------------------------------------                
 !    !            GEMPACK Software System Licence            !               
 !    !  Source Code Licence for the GEMPACK Software System  !               
 !    !                 Licence No.  GFM-0048                 !               
 !    !          Licence for Release 11.4 of GEMPACK          !               
 !    !           Center for Global Trade Analysis            !               
 !    !         Department of Agricultural Economics          !               
 !    !                   Krannert Building                   !               
 !    !                   Purdue University                   !               
 !    !                    West Lafayette,                    !               
 !    !                   Indiana IN 47907                    !               
 !    !                          USA                          !               
 !     -------------------------------------------------------                
    

    +++  END OF INFORMATION ABOUT THIS PRINT FILE  +++

 ======================================================
           TABLO PORTABLE   
 ++> TABLO OPTIONS   ( --> indicates those in effect )
 ======================================================



      -----------                   ----------
  --> F1 CHECK                      L1 CHECK
      F2 CONDENSATION               L2 CONDENSATION
      F3 CODE GENERATION        --> L3 CODE GENERATION
      Mode
      ----
      INTERACTIVE
      BATCH
  --> UNSPECIFIED
 

 ==================================================
 ++> TABLO Input file is 'gtapv7.tab'
 ++> This Information file is 'gtapv7'
 ==================================================



 ******************************************************************************
 -1-
 -->                     Starting CHECK stage

 ******************************************************************************


      1   !<
      2       =============================
      3       Global Trade Analysis Project
      4       The GTAP Modeling Framework
      5       GTAP Model Version 7.0
      6       June 2017
      7       =============================
      8    
      9       For documentation see:
     10       Erwin L. Corong, Thomas W. Hertel, Robert A. McDougall, Marinos E. Tsigas,
     11       and Dominique van der Mensbrugghe. The Standard GTAP Model, Version 7.
     12       Journal of Global Economic Analysis, [S.l.], v.2, n.1, p. 1-119, june 2017.
     13       Available at:
     14       <https://jgea.org/resources/jgea/ojs/index.php/jgea/article/view/47>
     15       or
     16       http://dx.doi.org/10.21642/JGEA.020101AF.
     17    
     18       The GTAPv7 paper documents all the technical changes since the GTAP book and
     19       GTAP.TAB (version 6.2). For older documentation, see:
     20    
     21       (a) Hertel, T.W. and M.E. Tsigas, "Structure of the Standard GTAP Model",
     22       Chapter 2 in T.W. Hertel (editor) "Global Trade Analysis: Modeling and
     23       Applications", Cambridge University Press, 1997.
     24    
     25       (b) R.A. McDougall, "A New Regional Household Demand System for GTAP",
     26       GTAP Technical Paper #20, Center for Global Trade Analysis, Purdue
     27       University
     28    
     29       (c) Hertel T.W., K. Itakura and R.A. McDougall, GTAP.TAB(version 6.2)
     30    
     31    
     32       --------------------
     33       HISTORY of this file
     34       --------------------
     35       June 2017: Version 7.0 replaces GTAP.tab version 6.2
     36    
     37       ----------------------------------
     38       Overview of the GTAP.TAB Structure
     39       ----------------------------------
     40       Preliminaries:
     41           A-0. FILES
     42           A-1. SET definitions
     43           A-2. READ Base Data
     44           A-3. Key derivatives of Base Data
     45           A-4. Common COEFFICIENTS
     46           A-5. Common VARIABLES
     47    
     48       Equation Modules:
     49           1.  Firms
     50           2.  Commodity supply
     51           3.  Income distribution
     52           4.  Allocation of income across expenditure categories
     53           5.  Domestic final demand
     54           6.  Trade, goods market equilibrium and prices
     55           7.  Factor market equilibrium
     56           8.  Allocation of global saving
     57           9.  Tax revenue streams
     58          10.  Numeraire and Walras law
     59               ................................................
     60               Summary Indices (for use in welfare measurement)
     61               ................................................
     62               B-0. Variables and coefficients for summary indices
     63               B-1. Factor price indices
     64               B-2. Regional terms of trade (ToT)
     65               B-3. GDP indices (value, price and quantity)
     66               B-4. Aggregate trade indices (value, price and quantity)
     67               B-5. Trade balance indices
     68               B-6. Terms of trade (ToT) decomposition
     69          11.  Welfare measurement and decomposition
     70    
     71       Welfare summary and post-sim calculations:
     72          C. Welfare decomposition summary
     73          D. Volume changes (GTAPVol)
     74          E. Data balance checks
     75   >!
     76    
     77   !<
     78       ----------
     79       A-0. FILES
     80       ----------
     81   >!
     82    
     83   File
     84       GTAPSETS # file with set specification #;
     85   File
     86       GTAPDATA # file containing all Base Data #;
     87   File
     88       GTAPPARM # file containing behavioral parameters #;
     89   File (new)
     90       GTAPSUM # file containing data summary and accounting checks #;
     91    
     92   !<
     93       --------------------
     94       A-1. SET definitions
     95       --------------------
     96    
     97       Sets define relevant groupings of entities over which we will be performing
     98       operations in the model. SUBSETS are defined in order to facilitate
     99       summation over only a portion of a given group, e.g., margin commodities.
    100    
    101       The GTAP Model requires separate SET specification for activities and
    102       commodities because of multi-production possibilities--i.e., a single
    103       activity could produce multiple commodities (e.g., an agriculture activity
    104       producing multiple agricultural commodities), or for a commodity to be
    105       produced by multiple activities (e.g., electricity being produced by
    106       different generation activities).
    107    
    108       Although the standard GTAP Data Base has a diagonal 'make' matrix, it is
    109       possible to aggregate it such that the resulting aggregated
    110       database would have a non-diagonal 'make' matrix structure.
    111    
    112       Aide-Memoire for Sets and indices
    113       ---------------------------------
    114    
    115       Activities
    116       |-----------|
    117       |  ACTS(a)  |
    118       |-----------|
    119    
    120       Commodities
    121       |-----------------------|
    122       |        COMM(c)        |
    123       |-----------------------|
    124       |  MARG(m)  |  NMRG(n)  |
    125       |-----------------------|
    126    
    127       Endowments
    128       |---------------------------------------------------|
    129       |                      ENDW(e)                      |
    130       |---------------------------------------------------|
    131       |  ENDWF(e)  |  ENDWC(e)  |  ENDWM(e)  |  ENDWS(e)  |
    132       |---------------------------------------------------|
    133                    |              ENDWMS(e)               |
    134                    |--------------------------------------|
    135    
    136    
    137       Commodities and endowments
    138       |-----------------------|
    139       |        DEMD(d)        |
    140       |-----------------------|
    141       |  COMM(c)  |  ENDW(e)  |
    142       |-----------------------|
    143    
    144   >!
    145    
    146   Coefficient
    147       VERNUM # version of GTAP Data Base #;
    148   Read
    149       VERNUM from file GTAPDATA header "DVER";
    150   Update (change)
    151       VERNUM = 0.0; ! force it to be copied to update file !
    152    
    153   Set
    154       REG # regions #
    155       read elements from file GTAPSETS header "REG";
    156   Set
    157       COMM # commodities #
    158       read elements from file GTAPSETS header "COMM";
    159   Set
    160       MARG # margin commodities #
    161       read elements from file GTAPSETS header "MARG";
    162   Subset
    163       MARG is subset of COMM;
    164   Set
    165       NMRG # non-margin commodities # = COMM - MARG;
    166   Set
    167       ACTS # Activities #
    168       read elements from file GTAPSETS header "ACTS";
    169   Set
    170       ENDW # endowments #
    171       read elements from file GTAPSETS header "ENDW";
    172   Set !< The single element ENDWC set is defined for the sake of convenience >!
    173       ENDWC # capital endowment # (capital);
    174   Subset
    175       ENDWC is subset of ENDW;
    176   Set
    177       ENDWM # mobile endowments #
    178       read elements from file GTAPSETS header "ENDM";
    179   Subset
    180       ENDWM is subset of ENDW;
    181   Set
    182       ENDWS # sluggish endowment #
    183       read elements from file GTAPSETS header "ENDS";
    184   Subset
    185       ENDWS is subset of ENDW;
    186   Set
    187       ENDWMS # mobile and sluggish endowments # = ENDWM + ENDWS;
    188   Subset
    189       ENDWMS is subset of ENDW;
    190   Subset
    191       ENDWC is subset of ENDWMS;
    192   Set
    193       ENDWF # Sector-specific endowment # = ENDW - ENDWMS;
    194   Set
    195       DEMD # demanded commodities and endowments # = ENDW + COMM;
    196    
    197   !<
    198       -------------------
    199       A-2. READ Base Data
    200       -------------------
    201       We read in here almost all the base data, and define variables and
    202       coefficients associated with them. A few data arrays, namely: VKB,
    203       VTMFSD and DPARSUM are read in their respective modules.
    204    
    205       Data flows and prices are valued at: supplier(S)
    206                                            basic(B)
    207                                            producer(P)
    208                                            FOB exports
    209                                            CIF imports
    210    
    211       The READ statements are divided into six sections:
    212       Firms
    213       Commodity Supply
    214       Government Consumption
    215       Private Consumption
    216       Investment Consumption
    217       Saving
    218       Global Bank
    219       International Trade and Transport
    220    
    221       Since these are invariant for each solution of the model, they are termed
    222       coefficients. Coefficients are assigned upper case to distinguish them
    223       from variables (this is purely cosmetic, as GEMPACK is not case-sensitive).
    224       Variables in GEMPACK are assigned lower case labels to denote the fact that
    225       they are percentage changes. In some cases, original levels values for
    226       selected variables are defined to permit the user to compare post-simulation
    227       levels values across several simulations.
    228    
    229       The updating command indicates how the new level of the coefficient will
    230       be computed based on the previous solution of the linearized equations.
    231       Note that the notation used in the update commands is a shorthand for
    232       total differentials of these coefficient values.  Thus, w * v indicates
    233       that we want to take the total differential of W * V, plug in the
    234       calculated values of w and v, and add this to the base level in order to
    235       obtain a revised value for this product.
    236   >!
    237    
    238   !<
    239       Firms
    240       -----
    241   >!
    242    
    243   !<  Domestic intermediate purchases by firms at basic prices >!
    244   Variable (orig_level=1.0)(all,c,COMM)(all,r,REG)
    245       pds(c,r) # price of domestically supplied commodity c in region r #;
    246   Variable (orig_level=VDFB)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    247       qfd(c,a,r) # demand for domestic commodity c by activity a in region r #;
    248   Coefficient (ge 0)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    249       VDFB(c,a,r) # expenditure on domestic c by act. a in r at basic prices #;
    250   Read
    251       VDFB from file GTAPDATA header "VDFB";
    252   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    253       VDFB(c,a,r) = pds(c,r) * qfd(c,a,r);
    254    
    255   !<  Imported intermediate purchases by firms at basic prices >!
    256   Variable (orig_level=1.0)(all,c,COMM)(all,r,REG)
    257       pms(c,r) # price of aggregate commodity import bundle c in region r #;
    258   Variable (orig_level=VMFB)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    259       qfm(c,a,r) # imported commodity c for use by activity a in region r #;
    260   Coefficient (ge 0)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    261       VMFB(c,a,r) # expenditure on imported c by act. a in r at basic prices #;
    262   Read
    263       VMFB from file GTAPDATA header "VMFB";
    264   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    265       VMFB(c,a,r) = pms(c,r) * qfm(c,a,r);
    266    
    267   !<  Domestic intermediate purchases by firms at producer prices >!
    268   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    269       pfd(c,a,r) # price of domestic com. c purchased by act. a in region r #;
    270   Coefficient (ge 0)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    271       VDFP(c,a,r) # expenditure on dom. c by act. a in r at producer prices #;
    272   Read
    273       VDFP from file GTAPDATA header "VDFP";
    274   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    275       VDFP(c,a,r) = pfd(c,a,r) * qfd(c,a,r);
    276    
    277   !<  Imported intermediate purchases by firms at producer prices >!
    278   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    279       pfm(c,a,r) # price of imported com. c purchased by act. a in region r #;
    280   Coefficient (ge 0)(all,c,COMM)(all,a,ACTS)(all,r,REG)
    281       VMFP(c,a,r) # expenditure on imp. c by act. a in r at producer prices #;
    282   Read
    283       VMFP from file GTAPDATA header "VMFP";
    284   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    285       VMFP(c,a,r) = pfm(c,a,r) * qfm(c,a,r);
    286    
    287   !<  Endowment at supplier's (after income tax) prices >!
    288   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    289       pes(e,a,r) # supply (after income tax) price of e for use by a in r #;
    290   Variable (orig_level=EVOS)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
    291       qes(e,a,r) # supply of endowment e for use by activity a in region r #;
    292   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    293       EVOS(e,a,r) # value of e for use by a in r at supplier (after tax) prices #;
    294   Read
    295       EVOS from file GTAPDATA header "EVOS";
    296   Update (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    297       EVOS(e,a,r) = pes(e,a,r) * qes(e,a,r);
    298    
    299   !<  Endowments at basic (income tax inclusive) prices >!
    300   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    301       peb(e,a,r) # basic price of endowment e in act. a in region r #;
    302   Variable (orig_level=EVFB)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
    303       qfe(e,a,r) # demand for endowment e by act. a in region r #;
    304   Coefficient (ge 0)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
    305       EVFB(e,a,r) # expenditure on endowment e by act. a in r at basic prices #;
    306   Read
    307       EVFB from file GTAPDATA header "EVFB";
    308   Update (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    309       EVFB(e,a,r) = peb(e,a,r) * qfe(e,a,r);
    310    
    311   !<  Endowments at producer prices >!
    312   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    313       pfe(e,a,r) # price of endowment e purchased by activity a region r #;
    314   Coefficient (ge 0)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
    315       EVFP(e,a,r) # expenditure on endowment e by a in r at producer prices #;
    316   Read
    317       EVFP from file GTAPDATA header "EVFP";
    318   Update (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    319       EVFP(e,a,r) = pfe(e,a,r) * qfe(e,a,r);
    320    
    321   !<
    322       Commodity supply
    323       ----------------
    324   >!
    325    
    326   !<  'make' matrix at supplier's (i.e., output tax exclusive) prices >!
    327   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    328       ps(c,a,r) # supply price of commodity c produced by activity a in r #;
    329   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    330       qca(c,a,r) # supply of commodity c by activity a in r #;
    331   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
    332       MAKES(c,a,r) # 'make' matrix valued at supplier's prices #;
    333   Read
    334       MAKES from file GTAPDATA header "MAKS";
    335   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    336       MAKES(c,a,r) = ps(c,a,r)*qca(c,a,r);
    337    
    338   !<  'make' matrix at basic (i.e., output tax inclusive) prices >!
    339   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    340       pca(c,a,r) # basic price of commodity c produced by activity a in r #;
    341   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
    342       MAKEB(c,a,r) # 'make' matrix valued at basic prices #;
    343   Read
    344       MAKEB from file GTAPDATA header "MAKB";
    345   Update (all,c,COMM)(all,a,ACTS)(all,r,REG)
    346       MAKEB(c,a,r) = pca(c,a,r)*qca(c,a,r);
    347    
    348   !<
    349       Government consumption
    350       ----------------------
    351   >!
    352    
    353   !<  Domestic commodity purchases by government at basic prices >!
    354   Variable (orig_level=VDGB)(all,c,COMM)(all,r,REG)
    355       qgd(c,r) # government demand for domestic commodity c in region r #;
    356   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    357       VDGB(c,r) # government expenditure on domestic c in r at basic prices #;
    358   Read
    359       VDGB from file GTAPDATA header "VDGB";
    360   Update (all,c,COMM)(all,r,REG)
    361       VDGB(c,r) = pds(c,r) * qgd(c,r);
    362    
    363   !<  Imported commodity purchases by government at basic prices >!
    364   Variable (orig_level=VMGB)(all,c,COMM)(all,r,REG)
    365       qgm(c,r) # government demand for imported commodity c in region r #;
    366   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    367       VMGB(c,r) # government expenditure on imported c in r at basic prices #;
    368   Read
    369       VMGB from file GTAPDATA header "VMGB";
    370   Update (all,c,COMM)(all,r,REG)
    371       VMGB(c,r) = pms(c,r) * qgm(c,r);
    372    
    373   !<  Domestic commodity purchases by government at producer prices >!
    374   Variable (all,c,COMM)(all,r,REG)
    375       pgd(c,r) # price of domestic com. c purchased by government in region r #;
    376   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    377       VDGP(c,r) # government expenditure on dom. c in r at producer prices #;
    378   Read
    379       VDGP from file GTAPDATA header "VDGP";
    380   Update (all,c,COMM)(all,r,REG)
    381       VDGP(c,r) = pgd(c,r) * qgd(c,r);
    382    
    383   !<  Imported commodity purchases by government at producer prices >!
    384   Variable (all,c,COMM)(all,r,REG)
    385       pgm(c,r) # price of imported com. c purchased by government in region r #;
    386   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    387       VMGP(c,r) # government expenditure on imp. c in r at producer prices #;
    388   Read
    389       VMGP from file GTAPDATA header "VMGP";
    390   Update (all,c,COMM)(all,r,REG)
    391       VMGP(c,r) = pgm(c,r) * qgm(c,r);
    392    
    393   !<
    394       Private consumption
    395       -------------------
    396   >!
    397    
    398   !<  Domestic commodity purchases by priv. household at basic prices >!
    399   Variable (orig_level=VDPB)(all,c,COMM)(all,r,REG)
    400       qpd(c,r) # private household demand for domestic commodity c in region r #;
    401   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    402       VDPB(c,r) # private household expenditure on dom. c in r at basic prices #;
    403   Read
    404       VDPB from file GTAPDATA header "VDPB";
    405   Update (all,c,COMM)(all,r,REG)
    406       VDPB(c,r) = pds(c,r) * qpd(c,r);
    407    
    408   !<  Imported commodity purchases by priv. household at basic prices >!
    409   Variable (orig_level=VMPB)(all,c,COMM)(all,r,REG)
    410       qpm(c,r) # private household demand for imported commodity c in region r #;
    411   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    412       VMPB(c,r) # private household expenditure on imp. c in r at basic prices #;
    413   Read
    414       VMPB from file GTAPDATA header "VMPB";
    415   Update (all,c,COMM)(all,r,REG)
    416       VMPB(c,r)= pms(c,r) * qpm(c,r);
    417    
    418   !<  Domesticcommodity purchases by priv. household at producer prices >!
    419   Variable (all,c,COMM)(all,r,REG)
    420       ppd(c,r) # price of domestic com. c purchased by private household in r #;
    421   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    422       VDPP(c,r) # private hhld expenditure on dom. c in r at producer prices #;
    423   Read
    424       VDPP from file GTAPDATA header "VDPP";
    425   Update (all,c,COMM)(all,r,REG)
    426       VDPP(c,r) = ppd(c,r) * qpd(c,r);
    427    
    428   !<  Imported commodity purchases by priv. household at producer prices >!
    429   Variable (all,c,COMM)(all,r,REG)
    430       ppm(c,r) # price of imported com. c purchased by private household in r #;
    431   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    432       VMPP(c,r) # private hhld expenditure on imp. c in r at producer prices #;
    433   Read
    434       VMPP from file GTAPDATA header "VMPP";
    435   Update (all,c,COMM)(all,r,REG)
    436       VMPP(c,r) = ppm(c,r) * qpm(c,r);
    437    
    438   !<
    439       Investment consumption
    440       ----------------------
    441   >!
    442    
    443   !<  Domestic commodity purchases by investment agent at basic prices >!
    444   Variable (orig_level=VDIB)(all,c,COMM)(all,r,REG)
    445       qid(c,r) # investment demand for domestic commodity c in region r #;
    446   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    447       VDIB(c,r) # investment expenditure on domestic c in r at basic prices #;
    448   Read
    449       VDIB from file GTAPDATA header "VDIB";
    450   Update (all,c,COMM)(all,r,REG)
    451       VDIB(c,r) = pds(c,r) * qid(c,r);
    452    
    453   !<  Imported commodity purchases by investment agent at basic prices >!
    454   Variable (orig_level=VMIB)(all,c,COMM)(all,r,REG)
    455       qim(c,r) # investment demand for imported commodity c in region r #;
    456   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    457       VMIB(c,r) # investment expenditure on imported c in r at basic prices #;
    458   Read
    459       VMIB from file GTAPDATA header "VMIB";
    460   Update (all,c,COMM)(all,r,REG)
    461       VMIB(c,r) = pms(c,r) * qim(c,r);
    462    
    463   !<  Domestic commodity purchases by investment agent at producer prices >!
    464   Variable (all,c,COMM)(all,r,REG)
    465       pid(c,r) # price of domestic com. c purchased by investment agent in r #;
    466   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    467       VDIP(c,r) # investment expenditure on dom. c in r at producer prices #;
    468   Read
    469       VDIP from file GTAPDATA header "VDIP";
    470   Update (all,c,COMM)(all,r,REG)
    471       VDIP(c,r) = pid(c,r) * qid(c,r);
    472    
    473   !<  Imported commodity purchases by investment agent at producer prices >!
    474   Variable (all,c,COMM)(all,r,REG)
    475       pim(c,r) # price of imported com. c purchased by investment agent in r #;
    476   Coefficient (ge 0)(all,c,COMM)(all,r,REG)
    477       VMIP(c,r) # investment expenditure on imp. c in r at producer prices #;
    478   Read
    479       VMIP from file GTAPDATA header "VMIP";
    480   Update (all,c,COMM)(all,r,REG)
    481       VMIP(c,r) = pim(c,r) * qim(c,r);
    482    
    483   !<
    484       Saving
    485       ------
    486   >!
    487    
    488   Variable (all,r,REG)
    489       psave(r) # price of saving in region r #;
    490   Variable (all,r,REG)
    491       qsave(r) # regional demand for NET saving #;
    492   Coefficient (all,r,REG)
    493       SAVE(r) # NET saving in region r valued at producer prices #;
    494   Read
    495       SAVE from file GTAPDATA header "SAVE";
    496   Update (all,r,REG)
    497       SAVE(r) = psave(r) * qsave(r);
    498    
    499   !<
    500       Global bank
    501       -----------
    502   >!
    503    
    504   Variable (all,r,REG)
    505       pinv(r) # price index of investment goods #;
    506   Variable (all,r,REG)
    507       kb(r) # beginning-of-period capital stock in r #;
    508   Coefficient (ge 0)(all,r,REG)
    509       VDEP(r) # value of capital depeciation in r (exogenous) #;
    510   Read
    511       VDEP from file GTAPDATA header "VDEP";
    512   Update (all,r,REG)
    513       VDEP(r) = pinv(r) * kb(r);
    514   !<
    515       Value of capital depreciation is used to compute the (exogenous)
    516       depreciation rate and therefore does not appear in update.
    517   >!
    518    
    519   !<
    520       International trade
    521       -------------------
    522   >!
    523    
    524   !<  Exports at basic prices >!
    525   Variable (orig_level=VXSB)(all,c,COMM)(all,s,REG)(all,d,REG)
    526       qxs(c,s,d) # export sales of commodity c from source s to destination d #;
    527   Coefficient (ge 0)(all,c,COMM)(all,s,REG)(all,d,REG)
    528       VXSB(c,s,d)
    529       # value of exports of  c from s to d at basic prices (tradeables only) #;
    530   Read
    531       VXSB from file GTAPDATA header "VXSB";
    532   Update (all,c,COMM)(all,s,REG)(all,d,REG)
    533       VXSB(c,s,d) = pds(c,s) * qxs(c,s,d);
    534    
    535   !<  Exports at FOB (i.e., exports tax inclusive) prices >!
    536   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
    537       pfob(c,s,d) # FOB world price of com. c from source s to destination d #;
    538   Coefficient (ge 0)(all,c,COMM)(all,s,REG)(all,d,REG)
    539       VFOB(c,s,d)
    540       # value of exports of c from s to d at FOB prices (tradeables only) #;
    541   Read
    542       VFOB from file GTAPDATA header "VFOB";
    543   Update (all,c,COMM)(all,s,REG)(all,d,REG)
    544       VFOB(c,s,d) = pfob(c,s,d) * qxs(c,s,d);
    545    
    546   !<  Imports at CIF prices >!
    547   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
    548       pcif(c,s,d) # CIF world price of imported com. c from source s to dest. d #;
    549   Coefficient (ge 0)(all,c,COMM)(all,s,REG)(all,d,REG)
    550       VCIF(c,s,d)
    551       # value of imports of c from s to d at CIF prices (tradeables only) #;
    552   Read
    553       VCIF from file GTAPDATA header "VCIF";
    554   Update (all,c,COMM)(all,s,REG)(all,d,REG)
    555       VCIF(c,s,d) = pcif(c,s,d) * qxs(c,s,d);
    556    
    557   !<  Imports at basic (import tariff inclusive) prices >!
    558   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
    559       pmds(c,s,d) # price of imported c supplied by source region s to dest. d #;
    560   Coefficient (ge 0)(all,c,COMM)(all,s,REG)(all,d,REG)
    561       VMSB(c,s,d)
    562       # value of imports of c from s to d at domestic (basic) prices #;
    563   Read
    564       VMSB from file GTAPDATA header "VMSB";
    565   Update (all,c,COMM)(all,s,REG)(all,d,REG)
    566       VMSB(c,s,d) = pmds(c,s,d) * qxs(c,s,d);
    567    
    568   !<
    569       International transport margins
    570       -------------------------------
    571   >!
    572    
    573   Variable (orig_level=VST)(all,m,MARG)(all,r,REG)
    574       qst(m,r) # supply of margin m from region r for international transport #;
    575   Coefficient (ge 0)(all,m,MARG)(all,r,REG)
    576       VST(m,r)
    577       # value of exports of margin m from r for int'l transport at basic prices #;
    578   Read
    579       VST from file GTAPDATA header "VST";
    580   Update (all,m,MARG)(all,r,REG)
    581       VST(m,r) = pds(m,r) * qst(m,r);
    582    
    583   !<
    584       -------------------------------------
    585       A-3. Key derivatives of the Base Data
    586       -------------------------------------
    587    
    588       Key derivatives of the Base Data
    589       Regional expenditure and income
    590       Indirect tax receipts
    591       Miscellaneous coefficients and parameters
    592    
    593   >!
    594    
    595   !<  Intermediate and endowment expenditure by firms at producer prices >!
    596   Coefficient (all,d,DEMD)(all,a,ACTS)(all,r,REG)
    597       VFP(d,a,r) # expenditure on d by act. a in r valued at producer prices #;
    598   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    599       VFP(e,a,r) = EVFP(e,a,r);
    600   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
    601       VFP(c,a,r) = VDFP(c,a,r) + VMFP(c,a,r);
    602    
    603   !<  Value of output at supplier's prices >!
    604   Coefficient (all,a,ACTS)(all,r,REG)
    605       VOS(a,r) # output of act. a in r valued at supplier's prices #;
    606   Formula (all,a,ACTS)(all,r,REG)
    607       VOS(a,r) = sum{d,DEMD, VFP(d,a,r)};
    608    
    609   !<  Endowments >!
    610   Coefficient (all,e,ENDW)(all,r,REG)
    611       VES(e,r) # endowment supply in region r, at supplier's (after tax) prices #;
    612   Formula (all,e,ENDW)(all,r,REG)
    613       VES(e,r) = sum{a,ACTS, EVOS(e,a,r)};
    614    
    615   !< Commodity supply >!
    616   Coefficient (all,a,ACTS)(all,r,REG)
    617       MAKEBACT(a,r) # total output of activity a valued at basic prices #;
    618   Formula (all,a,ACTS)(all,r,REG)
    619       MAKEBACT(a,r) = sum{c,COMM, MAKEB(c,a,r)};
    620    
    621   Coefficient (all,c,COMM)(all,r,REG)
    622       MAKEBCOM(c,r) # supply of commodity c valued at basic prices #;
    623   Formula (all,c,COMM)(all,r,REG)
    624       MAKEBCOM(c,r) = sum{a,ACTS, MAKEB(c,a,r)};
    625    
    626   Coefficient (all,c,COMM)(all,r,REG)
    627       VDB(c,r) # domestic sales of c in r at basic prices (tradeables only) #;
    628   Formula (all,c,COMM)(all,r,REG)
    629       VDB(c,r) = VDPB(c,r) + VDGB(c,r) + VDIB(c,r) + sum{a,ACTS, VDFB(c,a,r)};
    630    
    631   !<  Commodity supply = Commodity demand >!
    632   Coefficient (all,c,COMM)(all,r,REG)
    633       VCB(c,r) # supply of commodity c in region r valued at basic prices #;
    634   Formula (all,c,COMM)(all,r,REG)
    635       VCB(c,r) = VDB(c,r) + sum{d,REG, VXSB(c,r,d)} + IF[c in MARG, VST(c,r)];
    636    
    637   !<
    638       Regional expenditure and income
    639       -------------------------------
    640    
    641       Regional income is allocated between private consumption expenditure,
    642       government consumption expenditure, and saving.
    643    
    644       Expenditure of Regional household
    645       .................................
    646    
    647                      Regional household(h.h.)
    648                       Expenditure = Income
    649                                _/|\_
    650                              _/  |  \_
    651                            _/    |    \_
    652                          _/      |      \_
    653                        _/        |        \_
    654              Private h.h.        |        Government h.h.
    655              ( PRIVEXP )         |          ( GOVEXP )
    656                 _/\_             |              _/\_  <---(CES: ESUBG)
    657               _/    \_           |            _/    \_
    658              /        \          |           /        \
    659           Domestic  Imported   Saving    Domestic    Imported
    660            Goods     Goods     ( SAVE )    Goods       Goods
    661           ( VDPP )  ( VMPP )              ( VDGP )    ( VMGP )
    662    
    663       Note: The coefficients at the ends of branches are
    664             Base Data, e.g., VDPP, SAVE.
    665   >!
    666    
    667   !< Government consumption expenditure, GOVEXP >!
    668   Coefficient (all,c,COMM)(all,r,REG)
    669       VGP(c,r) # government cons. expenditure on c in r at producer prices #;
    670   Formula (all,c,COMM)(all,r,REG)
    671       VGP(c,r) = VDGP(c,r) + VMGP(c,r);
    672   Coefficient (all,r,REG)
    673       GOVEXP(r) # aggregate government expenditure in region r #;
    674   Formula (all,r,REG)
    675       GOVEXP(r) = sum{c,COMM, VGP(c,r)};
    676    
    677   !< Private household consumption expenditure, PRIVEXP >!
    678   Coefficient (all,c,COMM)(all,r,REG)
    679       VPP(c,r) # private household expenditure on c in r at producer prices #;
    680   Formula (all,c,COMM)(all,r,REG)
    681       VPP(c,r) = VDPP(c,r) + VMPP(c,r);
    682   Coefficient (all,r,REG)
    683       PRIVEXP(r) # aggregate private consumption expenditure in region r #;
    684   Formula (all,r,REG)
    685       PRIVEXP(r) = sum{c,COMM, VPP(c,r)};
    686    
    687   !< Investment consumption expenditure >!
    688   Coefficient (all,c,COMM)(all,r,REG)
    689       VIP(c,r) # expenditure on investment c valued at producer prices #;
    690   Formula (all,c,COMM)(all,r,REG)
    691       VIP(c,r) = VDIP(c,r) + VMIP(c,r);
    692    
    693   !< Aggregate income = aggregate expenditure + saving >!
    694   Coefficient (all,r,REG)
    695       INCOME(r) # level of expenditure, which equals NET income in region r #;
    696   Formula (all,r,REG)
    697       INCOME(r) = PRIVEXP(r) + GOVEXP(r) + SAVE(r);
    698    
    699   !<
    700       Indirect tax receipts
    701       ---------------------
    702   >!
    703    
    704   !< Production tax revenue >!
    705   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
    706       PTAX(c,a,r) # revenue from tax on commodity c produced by activity a in r #;
    707   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
    708       PTAX(c,a,r) = MAKEB(c,a,r) - MAKES(c,a,r);
    709   Coefficient (all,r,REG)
    710       TAXROUT(r) # total revenue from production tax payments in region r #;
    711   Formula (all,r,REG)
    712       TAXROUT(r) = sum{c,COMM, sum{a,ACTS, PTAX(c,a,r)}};
    713    
    714   !< Government consumption tax revenue >!
    715   Coefficient (all,c,COMM)(all,r,REG)
    716       DGTAX(c,r) # tax revenue from gov't cons. of domestic c in region r #;
    717   Formula (all,c,COMM)(all,r,REG)
    718       DGTAX(c,r) = VDGP(c,r) - VDGB(c,r);
    719   Coefficient (all,c,COMM)(all,r,REG)
    720       MGTAX(c,r) # tax revenue from gov't consumption of imported c in region r #;
    721   Formula (all,c,COMM)(all,r,REG)
    722       MGTAX(c,r) = VMGP(c,r) - VMGB(c,r);
    723   Coefficient (all,r,REG)
    724       TAXRGC(r) # total revenue from government consumption tax payments in r #;
    725   Formula (all,r,REG)
    726       TAXRGC(r) = sum{c,COMM, DGTAX(c,r) + MGTAX(c,r)};
    727    
    728   !< Private household consumption tax revenue >!
    729   Coefficient (all,c,COMM)(all,r,REG)
    730       DPTAX(c,r) # tax revenue from priv. hhld cons. of domestic c in region r #;
    731   Formula (all,c,COMM)(all,r,REG)
    732       DPTAX(c,r) = VDPP(c,r) - VDPB(c,r);
    733   Coefficient (all,c,COMM)(all,r,REG)
    734       MPTAX(c,r) # tax revenue from priv. hhld cons. of imported c in region r #;
    735   Formula (all,c,COMM)(all,r,REG)
    736       MPTAX(c,r) = VMPP(c,r) - VMPB(c,r);
    737   Coefficient (all,r,REG)
    738       TAXRPC(r) # total revenue from priv. hhld consumption tax payments in r #;
    739   Formula (all,r,REG)
    740       TAXRPC(r) = sum{c,COMM, DPTAX(c,r) + MPTAX(c,r)};
    741    
    742   !< Investment consumption tax revenue >!
    743   Coefficient (all,c,COMM)(all,r,REG)
    744       DITAX(c,r) # tax revenue from investment cons. of domestic c in region r #;
    745   Formula (all,c,COMM)(all,r,REG)
    746       DITAX(c,r) = VDIP(c,r) - VDIB(c,r);
    747   Coefficient (all,c,COMM)(all,r,REG)
    748       MITAX(c,r) # tax revenue from investment cons. of imported c in region r #;
    749   Formula (all,c,COMM)(all,r,REG)
    750       MITAX(c,r) = VMIP(c,r) - VMIB(c,r);
    751   Coefficient (all,r,REG)
    752       TAXRIC(r) # total revenue from investment consumption tax payments in r #;
    753   Formula (all,r,REG)
    754       TAXRIC(r) = sum{c,COMM, DITAX(c,r) + MITAX(c,r)};
    755    
    756   !< Intermediate consumption tax revenue >!
    757   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
    758       DFTAX(c,a,r) # tax revenue from use of dom. intermediate c by act. a in r #;
    759   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
    760       DFTAX(c,a,r) = VDFP(c,a,r) - VDFB(c,a,r);
    761   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
    762       MFTAX(c,a,r) # tax revenue from use of imp. intermediate c by act. a in r #;
    763   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
    764       MFTAX(c,a,r) = VMFP(C,a,r) - VMFB(c,a,r);
    765   Coefficient (all,r,REG)
    766       TAXRIU(r) # total revenue from tax on intermediate goods usage in r #;
    767   Formula (all,r,REG)
    768       TAXRIU(r) = sum{c,COMM, sum{a,ACTS, DFTAX(c,a,r) + MFTAX(c,a,r)}};
    769    
    770   !< Endowment tax revenue >!
    771   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    772       ETAX(e,a,r) # tax revenue from use of endowment e by act. a in region r #;
    773   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    774       ETAX(e,a,r) = EVFP(e,a,r) - EVFB(e,a,r);
    775   Coefficient (all,r,REG)
    776       TAXRFU(r) # total revenue from use of factor/endowment e by act. a in r #;
    777   Formula (all,r,REG)
    778       TAXRFU(r) = sum{e,ENDW, sum{a,ACTS, ETAX(e,a,r)}};
    779    
    780   !< Endowment income tax revenue <!
    781   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    782       INCTAX(e,a,r) # tax revenue from endowment income tax in region r #;
    783   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    784       INCTAX(e,a,r) = EVFB(e,a,r) - EVOS(e,a,r);
    785    
    786   !< Exports tax revenue <!
    787   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
    788       XTAXD(c,s,d) # tax rev. from exports of c from source s to destination d #;
    789   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
    790       XTAXD(c,s,d) = VFOB(c,s,d) - VXSB(c,s,d);
    791   Coefficient (all,r,REG)
    792       TAXREXP(r) # total revenue from export tax payments in r #;
    793   Formula (all,s,REG)
    794       TAXREXP(s) = sum{c,COMM, sum{d,REG, XTAXD(c,s,d)}};
    795    
    796   !< Import tariff revenue >!
    797   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
    798       MTAX(c,s,d) # tax rev from imports of c from source s to destination d #;
    799   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
    800       MTAX(c,s,d) = VMSB(c,s,d) - VCIF(c,s,d);
    801   Coefficient (all,r,REG)
    802       TAXRIMP(r) # total revenue from import tax payments in r #;
    803   Formula (all,d,REG)
    804       TAXRIMP(d) = sum{c,COMM, sum{s,REG, MTAX(c,s,d)}};
    805    
    806   !<
    807       -----------------------------------
    808       A-4. Commom COEFFICIENTS/PARAMETERS
    809       -----------------------------------
    810       Common coefficients are defined as coefficients which are used in more
    811       than one module. For example, ESUBD(c,r) is used in the goverment household,
    812       private household, and firms modules.
    813   >!
    814    
    815   !< Regional investment expenditure >!
    816   Coefficient (all,r,REG)
    817       REGINV(r) # regional GROSS investment in r #;
    818   Formula (all,r,REG)
    819       REGINV(r) = sum{c,COMM, VIP(c,r)};
    820   Coefficient (all,r,REG)
    821       NETINV(r) # regional NET investment in region r #;
    822   Formula (all,r,REG)
    823       NETINV(r) = REGINV(r) - VDEP(r);
    824    
    825   !< Net global investment expenditure >!
    826   Coefficient
    827       GLOBINV # global expenditures on net investment #;
    828   Formula
    829       GLOBINV = sum{r,REG, NETINV(r)};
    830    
    831   !< Elasticity of cost with respect to utility from private consumption >!
    832   Coefficient (all,c,COMM)(all,r,REG)
    833       CONSHR(c,r) # share of private hhld consumption devoted to good c in r #;
    834   Formula (all,c,COMM)(all,r,REG)
    835       CONSHR(c,r) = VPP(c,r) / PRIVEXP(r);
    836    
    837   Coefficient (parameter)(all,c,COMM)(all,r,REG)
    838       INCPAR(c,r) # expansion parameter in the CDE minimum expenditure function #;
    839   Read
    840       INCPAR from file GTAPPARM header "INCP";
    841   Coefficient (all,r,REG)
    842       UELASPRIV(r)
    843       # elasticity of cost wrt utility from private consumption #;
    844   Formula (all,r,REG)
    845       UELASPRIV(r) = sum{c,COMM, CONSHR(c,r) * INCPAR(c,r)};
    846    
    847   !<  Domestic/imported Armington elasticity >!
    848   Coefficient (parameter)(all,c,COMM)(all,r,REG)
    849       ESUBD(c,r)
    850       # region-specific elast. of subst. for dom. and imp. goods for all agents #;
    851   Read
    852       ESUBD from file GTAPPARM header "ESBD";
    853   Assertion (all,c,COMM)(all,r,REG) ESUBD(c,r) ge 0;
    854    
    855   !<
    856       ---------------------
    857       A-5. Common VARIABLES
    858       ---------------------
    859    
    860       Common variables are defined as variables which are used in more than one
    861       module. For example, the variable y(r) is used in the Goverment
    862       Consumption, Private Consumption, Firms, Regional Household and
    863       Investment, Global Bank and Saving modules.
    864       Appendices, e.g., Summary Indices, are not included in this definition.
    865   >!
    866    
    867   Variable (all,r,REG)
    868       y(r) # regional household income in region r #;
    869   Variable (all,r,REG)
    870       pop(r) # regional population #;
    871    
    872   Variable (all,r,REG)
    873       pgov(r) # price index for gov't expenditure in region r #;
    874   Variable (all,r,REG)
    875       yg(r) # regional government consumption expenditure in region r #;
    876   Variable (all,r,REG)
    877       ug(r) # per capita utility from gov't expend. in region r #;
    878    
    879   Variable (all,r,REG)
    880       ppriv(r) # price index for priv. household cons. expenditure in region r #;
    881   Variable (all,r,REG)
    882       yp(r) # regional private consumption expenditure in region r #;
    883   Variable (all,r,REG)
    884       uepriv(r) # elasticity of cost wrt utility from private consumption #;
    885   Variable (all,r,REG)
    886       up(r) # per capita utility from private expend. in region r #;
    887    
    888   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
    889       to(c,a,r) # power of tax on com. c supplied by act. a in region r #;
    890   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
    891       tinc(e,a,r) # power of income tax on endowment e supplied to act. a in r #;
    892   Variable (all,e,ENDW)(all,r,REG)
    893       endwslack(e,r) # slack variable in endowment market clearing condition #;
    894   !<
    895       endwslack is exogenous, unless the user wishes to employ a partial
    896       equilibrium closure in which the price of one or more of the primary factors
    897       is fixed.
    898   >!
    899    
    900   Variable (orig_level=VMB)(all,c,COMM)(all,r,REG)
    901       qms(c,r) # aggregate imports of c in region r, basic price weights #;
    902   Variable
    903       globalcgds # global supply of capital goods for NET investment #;
    904   Variable
    905       pcgdswld # world average price of capital goods (net investment weights) #;
    906    
    907   !<
    908       ================
    909       Equation modules
    910       ================
    911       1.  Firms
    912       2.  Commodity supply
    913       3.  Income distribution
    914       4.  Allocation of income across expenditure categories
    915       5.  Domestic final demand
    916       6.  Trade, goods market equilibrium and prices
    917       7.  Factor market equilibrium
    918       8.  Allocation of global saving
    919       9.  Tax revenue streams
    920       10. Numeraire and Walras law
    921       11. Welfare measurement and decomposition
    922   >!
    923    
    924   !<
    925       --------
    926       1. Firms
    927       --------
    928    
    929       We now turn to the behavioral equations for firms. The following picture
    930       describes the firms production structure.
    931    
    932                                    qo(a,r)  [ao(a,r)]
    933                                    /\
    934                                   /  \  <----- CES[ESUBT]
    935                                  /    \
    936                                 /      \
    937                                /        \
    938               [ava(a,r)]  qva(a,r)     qint(a,r)  [aint(a,r)]
    939                           /|\            |
    940       CES[ESUBVA]----->  / | \           |  <------ CES[ESUBC]
    941                         /  |  \          |
    942                        /   |   \         |
    943                       /    |    \        |
    944                   Land  Labor  Capital  qfa(c,a,r)  [afa(c,a,r)]
    945                      qfe(e,a,r)          /\
    946                     [afe(e,a,r)]        /  \  <----- CES[ESUBD]
    947                                        /    \
    948                                       /      \
    949                                      /        \
    950                                  Domestic    Foreign
    951                                  qfd(c,a,r)  qfm(c,a,r)
    952    
    953       1-1. Top production nest
    954       1-2. Second level nests
    955       1-3. Sourcing of commodities by firms
    956       1-4. Technical change equations
    957   >!
    958    
    959   !<
    960       1-1. Top production nest
    961       ------------------------
    962   >!
    963    
    964   Variable (all,a,ACTS)(all,r,REG)
    965       po(a,r) # unit cost/revenue of activity a in region r #;
    966   Variable (all,a,ACTS)(all,r,REG)
    967       qo(a,r) # output of activity a in region r #;
    968   Variable (all,a,ACTS)(all,r,REG)
    969       ao(a,r) # output augmenting technical change by activity a in region r #;
    970   Variable (all,a,ACTS)(all,r,REG)
    971       pint(a,r) # Price of composite intermediate input c by activity a in r #;
    972   Variable (all,a,ACTS)(all,r,REG)
    973       qint(a,r) # Composite intermediate input c by activity a in r #;
    974   Variable (all,a,ACTS)(all,r,REG)
    975       aint(a,r) # Composite interm. input augmenting tech change by act. a in r #;
    976   Coefficient (parameter)(all,a,ACTS)(all,r,REG)
    977       ESUBT(a,r)
    978       # elast. of sub. bet. composite intermediate and factor inputs in prod'n #;
    979   Read
    980       ESUBT from file GTAPPARM header "ESBT";
    981   Assertion (all,a,ACTS)(all,r,REG) ESUBT(a,r) ge 0;
    982    
    983   Equation E_qint
    984   # sector demands for composite intermediate commodity inputs by act. a in r #
    985   (all,a,ACTS)(all,r,REG)
    986       qint(a,r)
    987           = - aint(a,r) + qo(a,r) - ao(a,r)
    988           - ESUBT(a,r) * [pint(a,r) - aint(a,r) - po(a,r) - ao(a,r)];
    989    
    990   Variable (all,a,ACTS)(all,r,REG)
    991       pva(a,r) # firms' price of value added in act. a of region r #;
    992   Variable (all,a,ACTS)(all,r,REG)
    993       qva(a,r) # value added in act. a of region r #;
    994   Variable (all,a,ACTS)(all,r,REG)
    995       ava(a,r) # value added augmenting tech change by act. a in region r #;
    996    
    997   Equation E_qva
    998   # sector demands for primary factor composite #
    999   (all,a,ACTS)(all,r,REG)
   1000       qva(a,r)
   1001           = -ava(a,r) + qo(a,r) - ao(a,r)
   1002           - ESUBT(a,r) * [pva(a,r) - ava(a,r) - po(a,r) - ao(a,r)];
   1003    
   1004   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1005       pfa(c,a,r) # firms' price for commodity c for use by act. a in r #;
   1006   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1007       qfa(c,a,r) # demand for commodity c for use by act. a in region r #;
   1008   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1009       afa(c,a,r) # composite intermed. inpt c augmenting tech ch. by act. a in r #;
   1010   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   1011       afe(e,a,r) # primary factor e augmenting tech change by act. a in r #;
   1012   Variable (all,a,ACTS)(all,r,REG)
   1013       profitslack(a,r) # slack variable in the zero profit equation #;
   1014   !<
   1015       profitslack is exogenous, unless the user wishes to specify output in a
   1016       given region exogenously.
   1017   >!
   1018    
   1019   Coefficient (all,d,DEMD)(all,a,ACTS)(all,r,REG)
   1020       STC(d,a,r) # share of input d in total costs of act. a in r #;
   1021   Zerodivide default 0.5;
   1022   Zerodivide (nonzero_by_zero) default 0.5;
   1023   Formula (all,d,DEMD)(all,a,ACTS)(all,r,REG)
   1024       STC(d,a,r) = VFP(d,a,r) / VOS(a,r);
   1025   Zerodivide off;
   1026    
   1027   Equation E_qo
   1028   # industry zero pure profits condition #
   1029   (all,a,ACTS)(all,r,REG)
   1030       po(a,r) + ao(a,r)
   1031           = sum{e,ENDW, STC(e,a,r) * [pfe(e,a,r) - afe(e,a,r) - ava(a,r)]}
   1032           + sum{c,COMM, STC(c,a,r) * [pfa(c,a,r) - afa(c,a,r) - aint(a,r)]}
   1033           + profitslack(a,r);
   1034   !<
   1035       E_qo defines industry zero pure profits condition. This condition
   1036       permits us to determine the endogenous output level for each sector,
   1037       except when profitslack is itself endogenous.
   1038   >!
   1039    
   1040   !<
   1041       1-2. Second level nest
   1042       ----------------------
   1043   >!
   1044    
   1045   Coefficient (parameter)(all,a,ACTS)(all,r,REG)
   1046       ESUBC(a,r)
   1047       # elasticity of substitution among intermediate inputs in production #;
   1048   Read
   1049       ESUBC from file GTAPPARM header "ESBC";
   1050   Assertion (all,a,ACTS)(all,r,REG) ESUBC(a,r) ge 0;
   1051    
   1052   Equation E_qfa
   1053   # industry demands for intermediate inputs c by act. a in region r #
   1054   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1055       qfa(c,a,r)
   1056           = - afa(c,a,r) + qint(a,r)
   1057           - ESUBC(a,r) * [pfa(c,a,r) - afa(c,a,r) - pint(a,r)];
   1058    
   1059   Coefficient (all,a,ACTS)(all,r,REG)
   1060       TINTCOM(a,r) # total intermediate commodity inputs of act. a in r #;
   1061   Formula (all,a,ACTS)(all,r,REG)
   1062       TINTCOM(a,r) = sum{c,COMM,VFP(c,a,r)};
   1063   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1064       INTSHR(c,a,r) # share of intermed. c in total com. inputs of act. a in r #;
   1065   Zerodivide default 0.5;
   1066   Zerodivide (nonzero_by_zero) default 0.5;
   1067   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1068       INTSHR(c,a,r) = VFP(c,a,r)/TINTCOM(a,r);
   1069   Zerodivide off;
   1070    
   1071   Equation E_pint
   1072   # price of composite intermediate commodity inputs by act. a in r #
   1073   (all,a,ACTS)(all,r,REG)
   1074       pint(a,r) = sum{c,COMM, INTSHR(c,a,r) * [pfa(c,a,r) - afa(c,a,r)]};
   1075   !<
   1076       E_pint defines the average price of intermediate input composite.
   1077   >!
   1078    
   1079   Coefficient (parameter)(all,a,ACTS)(all,r,REG)
   1080       ESUBVA(a,r)
   1081       # elast. of sub. among capital/labor/land in value added of activity a #;
   1082   Read
   1083       ESUBVA from file GTAPPARM header "ESBV";
   1084   Assertion (all,a,ACTS)(all,r,REG) ESUBVA(a,r) ge 0;
   1085    
   1086   Coefficient (all,a,ACTS)(all,r,REG)
   1087       VVA(a,r) # value added in act. a in region r #;
   1088   Formula (all,a,ACTS)(all,r,REG)
   1089       VVA(a,r) = sum{e,ENDW, VFP(e,a,r)};
   1090   Coefficient (all,e,ENDW)
   1091       DEFAULTVASHR(e) # zerodivide default for VASHR # ;
   1092   Formula (all,e,ENDW)
   1093       DEFAULTVASHR(e)
   1094           = sum{a,ACTS, sum{r,REG, VFP(e,a,r)}}
   1095           / sum{a,ACTS, sum{r,REG, VVA(a,r)}};
   1096   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   1097       VASHR(e,a,r) # share of e in total value added in act. a in r #;
   1098   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG: VVA(a,r) <> 0)
   1099       VASHR(e,a,r) = VFP(e,a,r) / VVA(a,r);
   1100   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG: VVA(a,r) = 0)
   1101       VASHR(e,a,r) = DEFAULTVASHR(e);
   1102    
   1103   Equation E_qfe
   1104   # demands for endowment commodities #
   1105   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   1106       qfe(e,a,r)
   1107           = - afe(e,a,r) + qva(a,r)
   1108           - ESUBVA(a,r) * [pfe(e,a,r) - afe(e,a,r) - pva(a,r)];
   1109    
   1110   Equation E_pva
   1111   # effective price of primary factor composite in each sector/region #
   1112   (all,a,ACTS)(all,r,REG)
   1113       pva(a,r) = sum{e,ENDW, VASHR(e,a,r) * [pfe(e,a,r) - afe(e,a,r)]};
   1114    
   1115   !<
   1116       1-3. Sourcing of commodities by firms
   1117       -------------------------------------
   1118   >!
   1119    
   1120   Equation E_qfd
   1121   # act. a demands for domestic good c #
   1122   (all,c,COMM)(all,a,ACTS)(all,s,REG)
   1123       qfd(c,a,s) = qfa(c,a,s) - ESUBD(c,s) * [pfd(c,a,s) - pfa(c,a,s)];
   1124    
   1125   Equation E_qfm
   1126   # act. a demands for composite import c #
   1127   (all,c,COMM)(all,a,ACTS)(all,s,REG)
   1128       qfm(c,a,s) = qfa(c,a,s) - ESUBD(c,s) * [pfm(c,a,s) - pfa(c,a,s)];
   1129    
   1130   Coefficient (all,c,COMM)(all,a,ACTS)(all,s,REG)
   1131       FMSHR(c,a,s) # share of firms' imports in dom. composite, purch. prices #;
   1132   Zerodivide default 0.5;
   1133   Formula (all,c,COMM)(all,a,ACTS)(all,s,REG)
   1134       FMSHR(c,a,s) = VMFP(c,a,s) / VFP(c,a,s);
   1135   Zerodivide off;
   1136    
   1137   Equation E_pfa
   1138   # industry price for composite commodities #
   1139   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1140       pfa(c,a,r) = [1 - FMSHR(c,a,r)] * pfd(c,a,r) + FMSHR(c,a,r) * pfm(c,a,r);
   1141    
   1142   !<
   1143       1-4. Technical change equations
   1144       -------------------------------
   1145   >!
   1146    
   1147   !< Hicks-neutral technical change shifters >!
   1148   Variable (all,a,ACTS)
   1149       aosec(a) # output tech change for act. a, worldwide #;
   1150   Variable (all,r,REG)
   1151       aoreg(r) # specific output tech change in region r #;
   1152   Variable (all,a,ACTS)(all,r,REG)
   1153       aoall(a,r) # output augmenting technical change in act. a of r #;
   1154   Equation E_ao
   1155   # sector/region specific average rate of output augmenting tech change #
   1156   (all,a,ACTS)(all,r,REG)
   1157       ao(a,r) = aosec(a) + aoreg(r) + aoall(a,r);
   1158    
   1159   !< Intermediate input technical change and shifters >!
   1160   Variable (all,c,COMM)
   1161       afcom(c) # intermediate tech change of input c, worldwide #;
   1162   Variable (all,a,ACTS)
   1163       afsec(a) # intermediate tech change of act. a, worldwide #;
   1164   Variable (all,r,REG)
   1165       afreg(r) # intermediate tech change in region r #;
   1166   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1167       afall(c,a,r) # intermediate input c augmenting tech change by act. a in r #;
   1168   Equation E_afa
   1169   # sector/region specific average rate of intermediates augmenting tech change #
   1170   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1171       afa(c,a,r) = afcom(c) + afsec(a) + afreg(r) + afall(c,a,r);
   1172    
   1173   !< Composite value-added technical change and shifters >!
   1174   Variable (all,a,ACTS)
   1175       avasec(a) # value added tech change for act. a, worldwide #;
   1176   Variable (all,r,REG)
   1177       avareg(r) # value added tech change in region r #;
   1178   Variable (all,a,ACTS)(all,r,REG)
   1179       avaall(a,r) # value added augmenting technical change in act. a of r #;
   1180   Equation E_ava
   1181   # sector/region specific average rate of value added augmenting tech change #
   1182   (all,a,ACTS)(all,r,REG)
   1183       ava(a,r) = avasec(a) + avareg(r) + avaall(a,r);
   1184    
   1185   !< Factor input technical change and shifters  >!
   1186   Variable (all,e,ENDW)
   1187       afecom(e) # factor input tech change of endwowment e, worldwide #;
   1188   Variable (all,a,ACTS)
   1189       afesec(a) # factor input tech change of act. a, worldwide #;
   1190   Variable (all,r,REG)
   1191       afereg(r) # factor input tech change in region r #;
   1192   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   1193       afeall(e,a,r) # primary factor e augmenting tech change for act. a in r #;
   1194   Equation E_afe
   1195   # sector/region specific average rate of prim. factor e augmenting tech change #
   1196   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   1197       afe(e,a,r) = afecom(e) + afesec(a) + afereg(r) + afeall(e,a,r);
   1198    
   1199   !< Composite intermediate input technical change and shifters >!
   1200   Variable (all,a,ACTS)
   1201       aintsec(a) # composite interm. input augmenting tech change, worldwide #;
   1202   Variable (all,r,REG)
   1203       aintreg(r) # composite interm. input augmenting tech change in region r #;
   1204   Variable (all,a,ACTS)(all,r,REG)
   1205       aintall(a,r) # comp. interm. input augmenting tech change of act. a in r #;
   1206   Equation E_aint
   1207   # sector/region specific Composite intermediate input augmenting tech change #
   1208   (all,a,ACTS)(all,r,REG)
   1209       aint(a,r) = aintsec(a) + aintreg(r) + aintall(a,r);
   1210    
   1211   !<
   1212       ---------------------
   1213       2-0. Commodity supply
   1214       ---------------------
   1215    
   1216       The following picture describes commodity supply and sourcing. On the supply
   1217       side, activities with multiple outputs are given a CET specification wherein
   1218       they maximize their total revenue stream subject to being on the constant
   1219       elasticity of transformation frontier. On the demand side, buyers of a
   1220       commodity produced by multiple activities wish to minimize the total cost
   1221       of supply subject to a CES preference function.
   1222    
   1223                                    qo(a,r)  [ao(a,r)]
   1224                                     |
   1225                  CET[ETRAQ] ----->  | 'make'
   1226                                     |
   1227                                  qca(c,a,r)
   1228                                     |
   1229                  CES[ESUBQ] ----->  |  'sourcing'
   1230                                     |
   1231                                   qc(c,r)
   1232   >!
   1233    
   1234   Coefficient (parameter)(all,a,ACTS)(all,r,REG)
   1235       ETRAQ(a,r)
   1236       # elasticity of transformation among commodities produced by act. a #;
   1237   Read
   1238       ETRAQ from file GTAPPARM header "ETRQ";
   1239   Assertion (all,a,ACTS)(all,r,REG) ETRAQ(a,r) lt 0;
   1240    
   1241   Coefficient (all,a,ACTS)(all,r,REG)
   1242       MAKESCOM(a,r) # pre-tax output of activity a in r #;
   1243   Formula (all,a,ACTS)(all,r,REG)
   1244       MAKESCOM(a,r) = sum{c,COMM, MAKES(c,a,r)};
   1245   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1246       MAKESACTSHR(c,a,r) # share of c and a in output of a at supplier prices #;
   1247   Zerodivide default 0.5;
   1248   Zerodivide (nonzero_by_zero) default 0.5;
   1249   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1250       MAKESACTSHR(c,a,r) = MAKES(c,a,r) / MAKESCOM(a,r);
   1251   Zerodivide off;
   1252    
   1253   Equation E_qca
   1254   # supply of commodities by act. a #
   1255   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1256       qca(c,a,r) = IF[MAKES(c,a,r) gt 0,
   1257                       qo(a,r) - ETRAQ(a,r) * [ps(c,a,r) - po(a,r)]];
   1258    
   1259   Equation E_po
   1260   # average unit (tax-exclusive) cost of output of act. a #
   1261   (all,a,ACTS)(all,r,REG)
   1262        po(a,r) = sum{c,COMM, MAKESACTSHR(c,a,r) * ps(c,a,r)};
   1263    
   1264   Equation E_ps
   1265   # links basic and supply price of commodity c produced by activity a in r #
   1266   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1267       pca(c,a,r) = ps(c,a,r) + to(c,a,r);
   1268   !<
   1269       E_ps links supplier/producer (pre-) and basic (post-tax) prices for firms.
   1270       This captures the effect of output taxes or subsidies.
   1271       Note: The power of activity tax, to, is commodity- and activity-specific.
   1272             to(c,a,r) > 1 in the case of a tax
   1273             to(c,a,r) < 1 in the case of a subsidy.
   1274   >!
   1275    
   1276   Variable (all,a,ACTS)(all,r,REG)
   1277       pb(a,r) # price index: basic (tax-inclusive) price of output of act. a #;
   1278   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1279       MAKEBACTSHR(c,a,r) # share of c and a in output of act. a at basic prices #;
   1280   Zerodivide default 0.5;
   1281   Zerodivide (nonzero_by_zero) default 0.5;
   1282   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1283       MAKEBACTSHR(c,a,r) = MAKEB(c,a,r) / MAKEBACT(a,r);
   1284   Zerodivide off;
   1285    
   1286   Equation E_pb
   1287   # price index: basic (tax-inclusive) price of output of act. a #
   1288   (all,a,ACTS)(all,r,REG)
   1289        pb(a,r) = sum{c,COMM, MAKEBACTSHR(c,a,r) * pca(c,a,r)};
   1290    
   1291   Coefficient (parameter)(all,c,COMM)(all,r,REG)
   1292       ESUBQ(c,r)
   1293       # 1/CES elast. for sourcing of commodity c produced by various activities #;
   1294   Formula (initial) (all,c,COMM)(all,r,REG)
   1295       ESUBQ(c,r) = 0.0; ! ie, Default 0.0 means perfect substitutes !
   1296   Read (ifheaderexists) ESUBQ from file GTAPPARM header "ESBQ";
   1297   Assertion (all,c,COMM)(all,r,REG) ESUBQ(c,r) ge 0;
   1298   !<
   1299       ESUBQ is 1/CES elasticity. ESUBQ=0.0 means that commodity c produced by 2
   1300       or more activities are perfect substitutes--i.e., each activity receives the
   1301       same price (i.e., the law of one price holds) for a given commodity.
   1302       In the equation E_pca below,  pca(c,a,r) = pds(c,r) if ESUBQ = 0.0
   1303       But this will not work well if two or more activities each only produce the
   1304       same good (e.g., CoalElec and NuclearElec each only produce electricity),
   1305       resulting in structurally singular matrix problems, especially under the
   1306       standard GTAP closure, where most factors used by these activitiesare
   1307       perfectly mobile. In such cases, capital could be set as a sluggish
   1308       factor (note: if ETRAE=-0.000001, capital becomes a sector-specific factor);
   1309       or alternatively, capital could be perfectfly mobile across sectors but with
   1310       ESUBQ set to allow for a degree of commodity sourcing differentiation
   1311       (i.e., commodity c produced by diff activities are imperfect substitutes).
   1312       For example, ESUBQ could be set to 0.5 giving an elasticity of substitution
   1313       of 2.0 = 1/ESUBQ = 1/0.5. Alternative values for ESUBQ could be defined by
   1314       the user in the parameter input file.
   1315   >!
   1316    
   1317   Variable (all,c,COMM)(all,r,REG)
   1318       qc(c,r) # total commodity supply in region r #;
   1319   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1320       MAKEBCOMSHR(c,a,r) # share of c by a in commodity supply at basic prices #;
   1321   Zerodivide default 0.5;
   1322   Zerodivide (nonzero_by_zero) default 0.5;
   1323   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1324       MAKEBCOMSHR(c,a,r) = MAKEB(c,a,r) / MAKEBCOM(c,r);
   1325   Zerodivide off;
   1326    
   1327   Equation E_pca
   1328   # CES allocation of commodity output by activity (ESUBQ(c,r) is 1/CES elast.) #
   1329   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1330       pca(c,a,r) = IF[MAKEB(c,a,r) gt 0,
   1331                       pds(c,r) - ESUBQ(c,r) * [qca(c,a,r) - qc(c,r)]];
   1332    
   1333   Equation E_qc
   1334   # market clearing condition for total commodity supply #
   1335   (all,c,COMM)(all,r,REG)
   1336        qc(c,r) = sum{a,ACTS, MAKEBCOMSHR(c,a,r) * qca(c,a,r)};
   1337    
   1338   !<
   1339       ------------------------
   1340       3-0. Income distribution
   1341       ------------------------
   1342   >!
   1343    
   1344   Variable (all,r,REG)
   1345       fincome(r) # factor income at basic prices net of depreciation #;
   1346   Coefficient (all,r,REG)
   1347       FY(r) # primary factor income in r net of depreciation #;
   1348   Formula (all,r,REG)
   1349       FY(r) = sum{e,ENDW, sum{a,ACTS, EVFB(e,a,r)}} - VDEP(r);
   1350    
   1351   Equation E_fincome
   1352   # factor income at basic prices net of depreciation #
   1353   (all,r,REG)
   1354       FY(r) * fincome(r)
   1355           = sum{e,ENDW, sum{a,ACTS, EVFB(e,a,r)*[peb(e,a,r) + qes(e,a,r)]}}
   1356           - VDEP(r)  * [pinv(r) + kb(r)];
   1357    
   1358   !< Computation of Regional Income >!
   1359   Variable (all,r,REG)
   1360       incomeslack(r) # slack variable in the expression for regional income #;
   1361       !< This is exogenous, unless the user wishes to fix regional income. >!
   1362   Variable (change)(all,r,REG)
   1363       del_indtaxr(r) # change in ratio of indirect taxes to INCOME in r #;
   1364   Coefficient (all,r,REG)
   1365       INDTAX(r) # indirect tax receipts in r #;
   1366   Formula (all,r,REG)
   1367       INDTAX(r) = TAXRPC(r) + TAXRGC(r) + TAXRIC(r) + TAXRIU(r) + TAXRFU(r)
   1368                 + TAXROUT(r) + TAXREXP(r) + TAXRIMP(r);
   1369    
   1370   Equation E_y
   1371   # regional income = sum of primary factor income and indirect tax receipts #
   1372   (all,r,REG)
   1373       INCOME(r) * y(r)
   1374           = FY(r) * fincome(r)
   1375           + 100.0 * INCOME(r) * del_indtaxr(r)
   1376           + INDTAX(r) * y(r)
   1377           + INCOME(r) * incomeslack(r);
   1378    
   1379   !<
   1380       -------------------------------------------------------
   1381       4-0. Allocation of income across expenditure categories
   1382       -------------------------------------------------------
   1383   >!
   1384    
   1385   Variable (all,r,REG)
   1386       uelas(r) # elasticity of cost of utility wrt utility #;
   1387   Variable (all,r,REG)
   1388       dpsave(r) # saving distribution parameter #;
   1389   Variable (all,r,REG)
   1390       dpgov(r) # government consumption distribution parameter #;
   1391   Variable (all,r,REG)
   1392       dppriv(r) # private consumption distribution parameter #;
   1393    
   1394   Equation E_qsave
   1395   # saving #
   1396   (all,r,REG)
   1397       psave(r) + qsave(r) - y(r) = uelas(r) + dpsave(r);
   1398    
   1399   Equation E_yg
   1400   # government consumption expenditure #
   1401   (all,r,REG)
   1402       yg(r) - y(r) = uelas(r) + dpgov(r);
   1403    
   1404   Equation E_yp
   1405   # private consumption expenditure #
   1406   (all,r,REG)
   1407       yp(r) - y(r) = -[uepriv(r) - uelas(r)] + dppriv(r);
   1408    
   1409   Variable (all,r,REG)
   1410       dpav(r) # average distribution parameter shift, for EV calc. #;
   1411   Coefficient (all,r,REG)
   1412       XSHRPRIV(r) # private expenditure share in regional income #;
   1413   Formula (all,r,REG)
   1414       XSHRPRIV(r) = PRIVEXP(r) / INCOME(r);
   1415   Coefficient (all,r,REG)
   1416       XSHRGOV(r) # government expenditure share in regional income #;
   1417   Formula (all,r,REG)
   1418       XSHRGOV(r) = GOVEXP(r) / INCOME(r);
   1419   Coefficient (all,r,REG)
   1420       XSHRSAVE(r) # saving share in regional income #;
   1421   Formula (all,r,REG)
   1422       XSHRSAVE(r) = SAVE(r) / INCOME(r);
   1423    
   1424   Equation E_uelas
   1425   # elasticity of cost of utility wrt utility #
   1426   (all,r,REG)
   1427       uelas(r) = XSHRPRIV(r) * uepriv(r) - dpav(r);
   1428    
   1429   Equation E_dpav
   1430   # average distribution parameter shift #
   1431   (all,r,REG)
   1432       dpav(r)
   1433           = XSHRPRIV(r) * dppriv(r)
   1434           + XSHRGOV(r)  * dpgov(r)
   1435           + XSHRSAVE(r) * dpsave(r);
   1436    
   1437   Variable (all,r,REG)
   1438       p(r) # price index for disposition of income by regional household #;
   1439    
   1440   Equation E_p
   1441   # price index for disposition of income by regional household #
   1442   (all,r,REG)
   1443       p(r) = XSHRPRIV(r) * ppriv(r) + XSHRGOV(r) * pgov(r)
   1444            + XSHRSAVE(r) * psave(r);
   1445    
   1446   Variable (all,r,REG)
   1447       au(r) # input-neutral shift in utility function #;
   1448   Variable (all,r,REG)
   1449       dpsum(r) # sum of the distribution parameters #;
   1450   Variable (all,r,REG)
   1451       u(r) # per capita utility from aggregate hhld expend. in region r #;
   1452   Coefficient (all,r,REG)
   1453       DPARSUM(r) # sum of distribution parameters #;
   1454   Read
   1455       DPARSUM from file GTAPDATA header "DPSM";
   1456   Update (all,r,REG)
   1457       DPARSUM(r) = dpsum(r);
   1458    
   1459   Coefficient (all,r,REG)
   1460       UTILELAS(r) # elasticity of cost of utility wrt utility #;
   1461   Formula (all,r,REG)
   1462       UTILELAS(r)
   1463           = [UELASPRIV(r) * XSHRPRIV(r) + XSHRGOV(r) + XSHRSAVE(r)] / DPARSUM(r);
   1464   Coefficient (all,r,REG)
   1465       DPARPRIV(r) # private consumption distribution parameter #;
   1466   Formula (all,r,REG)
   1467       DPARPRIV(r) = UELASPRIV(r) * XSHRPRIV(r) / UTILELAS(r);
   1468   Coefficient (all,r,REG)
   1469       DPARGOV(r) # government consumption distribution parameter #;
   1470   Formula (all,r,REG)
   1471       DPARGOV(r) = XSHRGOV(r) / UTILELAS(r);
   1472    
   1473   Coefficient (all,r,REG)
   1474       DPARSAVE(r) # saving distribution parameter #;
   1475   Formula (all,r,REG)
   1476       DPARSAVE(r) = XSHRSAVE(r) / UTILELAS(r);
   1477    
   1478   Coefficient (all,r,REG)
   1479       UTILPRIV(r) # utility from private consumption #;
   1480   Formula (initial)(all,r,REG)
   1481       UTILPRIV(r) = 1.0;
   1482   Update (all,r,REG)
   1483       UTILPRIV(r) = up(r);
   1484    
   1485   Coefficient (all,r,REG)
   1486       UTILGOV(r) # utility from government consumption #;
   1487   Formula (initial)(all,r,REG)
   1488       UTILGOV(r) = 1.0;
   1489   Update (all,r,REG)
   1490       UTILGOV(r) = ug(r);
   1491    
   1492   Coefficient (all,r,REG)
   1493       UTILSAVE(r) # utility from saving #;
   1494   Formula (initial)(all,r,REG)
   1495       UTILSAVE(r) = 1.0;
   1496   Update (change) (all,r,REG)
   1497       UTILSAVE(r) = [[qsave(r) - pop(r)] / 100] * UTILSAVE(r);
   1498    
   1499   Equation E_u
   1500   # regional household utility #
   1501   (all,r,REG)
   1502       u(r) = au(r) + DPARPRIV(r) * loge(UTILPRIV(r)) * dppriv(r)
   1503            + DPARGOV(r) * loge(UTILGOV(r)) * dpgov(r)
   1504            + DPARSAVE(r) * loge(UTILSAVE(r)) * dpsave(r)
   1505            + [1.0 / UTILELAS(r)] * [y(r) - pop(r) - p(r)];
   1506    
   1507   Equation E_dpsum
   1508   # sum of the distribution parameters #
   1509   (all,r,REG)
   1510       DPARSUM(r) * dpsum(r)
   1511           = DPARPRIV(r) * dppriv(r)
   1512           + DPARGOV(r) * dpgov(r)
   1513           + DPARSAVE(r) * dpsave(r);
   1514    
   1515   !<
   1516       --------------------------
   1517       5-0. Domestic final demand
   1518       --------------------------
   1519   >!
   1520    
   1521   !<
   1522       5-1. Private expenditures
   1523       -------------------------
   1524   >!
   1525    
   1526   !<  We first compute for the Allen Partials, Price and Income Elasticities
   1527       then derive Private household's Composite Demand >!
   1528   Coefficient (parameter)(all,c,COMM)(all,r,REG)
   1529       SUBPAR(c,r)
   1530       # substitution parameter in CDE minimum expenditure function #;
   1531   Read
   1532       SUBPAR from file GTAPPARM header "SUBP";
   1533   Coefficient (all,c,COMM)(all,r,REG)
   1534       ALPHA(c,r) # 1 - sub. parameter in the CDE minimum expenditure function #;
   1535   Formula (all,c,COMM)(all,r,REG)
   1536       ALPHA(c,r) = 1 - SUBPAR(c,r);
   1537   Coefficient (all,c,COMM)(all,k,COMM)(all,r,REG)
   1538       APE(c,k,r) # Allen partial elast. of sub. between composite c and k in r #;
   1539   Formula (all,c,COMM)(all,k,COMM)(all,r,REG)
   1540       APE(c,k,r)
   1541           = ALPHA(c,r) + ALPHA(k,r) - sum{n,COMM, CONSHR(n,r) * ALPHA(n,r)};
   1542   Formula (all,c,COMM)(all,r,REG)
   1543       APE(c,c,r)
   1544           = 2.0 * ALPHA(c,r)
   1545           - sum{n,COMM, CONSHR(n,r) * ALPHA(n,r)}
   1546           - ALPHA(c,r) / CONSHR(c,r);
   1547    
   1548   Coefficient (all,c,COMM)(all,r,REG)
   1549       EY(c,r) # income elast. of private hhld demand for c in r #;
   1550   Formula (all,c,COMM)(all,r,REG)
   1551       EY(c,r)
   1552           =   [1.0 / sum{n,COMM, CONSHR(n,r) * INCPAR(n,r)}]
   1553               * [INCPAR(c,r) * [1.0 - ALPHA(c,r)]
   1554                   + sum{n,COMM, CONSHR(n,r) * INCPAR(n,r) * ALPHA(n,r)}]
   1555           + [ALPHA(c,r) - sum{n,COMM, CONSHR(n,r) * ALPHA(n,r)}];
   1556    
   1557   Coefficient (all,c,COMM)(all,k,COMM)(all,r,REG)
   1558       EP(c,k,r)
   1559       # uncomp. elast. of private hhld demand for c wrt price of k in r #;
   1560   Formula (all,c,COMM)(all,k,COMM)(all,r,REG)
   1561       EP(c,k,r) = 0;
   1562   Formula (all,c,COMM)(all,k,COMM)(all,r,REG)
   1563       EP(c,k,r) = [APE(c,k,r) - EY(c,r)] * CONSHR(k,r);
   1564    
   1565   Variable (all,c,COMM)(all,r,REG)
   1566       ppa(c,r) # private consumption price for commodity c in region r #;
   1567   Variable (all,c,COMM)(all,r,REG)
   1568       qpa(c,r) # private hhld demand for commodity c in region r #;
   1569    
   1570   Equation E_qpa
   1571   # private consumption demands for composite commodities #
   1572   (all,c,COMM)(all,r,REG)
   1573       qpa(c,r) - pop(r)
   1574           = sum{k,COMM, EP(c,k,r) * ppa(k,r)} + EY(c,r) * [yp(r) - pop(r)];
   1575   !<
   1576       E_qpa defines private consumption demands for composite commodities.
   1577       Demand system is on a per capita basis. Here, yp(r) - pop(r) is % change in
   1578       per capita income.
   1579   >!
   1580    
   1581   !< Utility from Private Consumption >!
   1582   Coefficient (all,c,COMM)(all,r,REG)
   1583       XWCONSHR(c,r) # expansion-parameter-weighted consumption share #;
   1584   Formula (all,c,COMM)(all,r,REG)
   1585       XWCONSHR(c,r) = CONSHR(c,r) * INCPAR(c,r) / UELASPRIV(r);
   1586    
   1587   Equation E_uepriv
   1588   # elasticity of expenditure wrt utility from private consumption #
   1589   (all,r,REG)
   1590       uepriv(r) = sum{c,COMM, XWCONSHR(c,r) * [ppa(c,r) + qpa(c,r) - yp(r)]};
   1591    
   1592   Equation E_ppriv
   1593   # price index for private consumption expenditure #
   1594   (all,r,REG)
   1595       ppriv(r) = sum{c,COMM, CONSHR(c,r) * ppa(c,r)};
   1596    
   1597   Equation E_up
   1598   # computation of utility from private consumption in r #
   1599   (all,r,REG)
   1600       UELASPRIV(r) * up(r) = yp(r) - ppriv(r) - pop(r) ;
   1601   !<
   1602       E_up determines private consumption utility for a representative
   1603       household in region r, based on the per capita private expenditure
   1604       function.
   1605   >!
   1606    
   1607   Equation E_qpd
   1608   # private consumption demand for domestic goods #
   1609   (all,c,COMM)(all,r,REG)
   1610       qpd(c,r) = qpa(c,r) - ESUBD(c,r) * [ppd(c,r) - ppa(c,r)];
   1611    
   1612   !<  Composite Tradeables >!
   1613   Coefficient (all,c,COMM)(all,r,REG)
   1614       PMSHR(c,r) # share of imports in private hhld cons. at producer prices #;
   1615   Formula (all,c,COMM)(all,r,REG)
   1616       PMSHR(c,r) = VMPP(c,r) / VPP(c,r);
   1617    
   1618   Equation E_qpm
   1619   # private consumption demand for aggregate imports #
   1620   (all,c,COMM)(all,r,REG)
   1621       qpm(c,r) = qpa(c,r) - ESUBD(c,r) * [ppm(c,r) - ppa(c,r)];
   1622    
   1623   Equation E_ppa
   1624   # private consumption price for composite commodities #
   1625   (all,c,COMM)(all,r,REG)
   1626       ppa(c,r) = [1 - PMSHR(c,r)] * ppd(c,r) + PMSHR(c,r) * ppm(c,r);
   1627    
   1628   !<
   1629       5-2. Public expenditures
   1630       -------------------------
   1631   >!
   1632    
   1633   Variable (all,c,COMM)(all,r,REG)
   1634       pga(c,r) # government consumption price for commodity c in region r #;
   1635   Variable (all,c,COMM)(all,r,REG)
   1636       qga(c,r) # government hhld demand for commodity c in region r #;
   1637   Coefficient (parameter)(all,r,REG)
   1638       ESUBG(r)
   1639       # region-specific elast. of subst. for composite government consumption #;
   1640   Read
   1641       ESUBG from file GTAPPARM header "ESBG";
   1642   Assertion (all,r,REG) ESUBG(r) ge 0;
   1643    
   1644   Equation E_qga
   1645   # government consumption demands for composite commodities #
   1646   (all,c,COMM)(all,r,REG)
   1647       qga(c,r) = yg(r) - pgov(r) - ESUBG(r) * [pga(c,r) - pgov(r)];
   1648    
   1649   Equation E_pgov
   1650   # price index for aggregate gov't purchases #
   1651   (all,r,REG)
   1652       pgov(r) = sum{c,COMM, [VGP(c,r) / GOVEXP(r)] * pga(c,r)};
   1653    
   1654   Equation E_ug
   1655   # utility from government consumption in r #
   1656   (all,r,REG)
   1657       ug(r) = yg(r) - pgov(r) - pop(r);
   1658    
   1659   !<  Composite tradeables >!
   1660   Coefficient (all,c,COMM)(all,r,REG)
   1661       GMSHR(c,r) # share of imports for gov't hhld at producer prices #;
   1662   Formula (all,c,COMM)(all,r,REG)
   1663       GMSHR(c,r) = VMGP(c,r) / VGP(c,r);
   1664    
   1665   Equation E_qgd
   1666   # government consumption demand for domestic goods #
   1667   (all,c,COMM)(all,r,REG)
   1668       qgd(c,r) = qga(c,r) - ESUBD(c,r) * [pgd(c,r) - pga(c,r)];
   1669    
   1670   Equation E_qgm
   1671   # government consumption demand for aggregate imports #
   1672   (all,c,COMM)(all,r,REG)
   1673       qgm(c,r) = qga(c,r) - ESUBD(c,r) * [pgm(c,r) - pga(c,r)];
   1674    
   1675   Equation E_pga
   1676   # government consumption price for composite commodities #
   1677   (all,c,COMM)(all,r,REG)
   1678       pga(c,r) = [1 - GMSHR(c,r)] * pgd(c,r) + GMSHR(c,r) * pgm(c,r);
   1679    
   1680   !<
   1681       5-3. Investment expenditures
   1682       ----------------------------
   1683   >!
   1684    
   1685   Variable (all,c,COMM)(all,r,REG)
   1686       pia(c,r) # price of investment commodity in region r #;
   1687   Variable (all,c,COMM)(all,r,REG)
   1688       qia(c,r) # demand for investment commodity c in region r #;
   1689   Variable (all,r,REG)
   1690       qinv(r) # demand for investment/capital goods in region r #;
   1691    
   1692   Equation E_qia
   1693   # Top level (Leontief) demand for investment goods #
   1694   (all,c,COMM)(all,r,REG)
   1695       qia(c,r) = qinv(r);
   1696    
   1697   Equation E_pinv
   1698   # defines the price of investment #
   1699   (all,r,REG)
   1700       pinv(r) = sum{c,COMM, [VIP(c,r) / REGINV(r)] * pia(c,r)};
   1701    
   1702   Equation E_qid
   1703   # demand for domestic investment commodity c #
   1704   (all,c,COMM)(all,r,REG)
   1705       qid(c,r) = qia(c,r) - ESUBD(c,r) * [pid(c,r) - pia(c,r)];
   1706    
   1707   Equation E_qim
   1708   # demand for imported investment commodity c #
   1709   (all,c,COMM)(all,r,REG)
   1710       qim(c,r) = qia(c,r) - ESUBD(c,r) * [pim(c,r) - pia(c,r)];
   1711    
   1712   !<  Composite tradeables >!
   1713   Coefficient (all,c,COMM)(all,r,REG)
   1714       IMSHR(c,r) # share of imports for investment at producer prices #;
   1715   Formula (all,c,COMM)(all,r,REG)
   1716       IMSHR(c,r) = VMIP(c,r) / VIP(c,r);
   1717   Equation E_pia
   1718   # invesment price for composite commodities #
   1719   (all,c,COMM)(all,r,REG)
   1720       pia(c,r) = [1 - IMSHR(c,r)] * pid(c,r) + IMSHR(c,r) * pim(c,r);
   1721    
   1722   !<
   1723       -----------------------------------------------
   1724       6-0. Trade, goods market equilibrium and prices
   1725       -----------------------------------------------
   1726   >!
   1727    
   1728   !<
   1729       6-1. Sourcing of imports
   1730       ------------------------
   1731   >!
   1732    
   1733   Coefficient (all,c,COMM)(all,r,REG)
   1734       VMB(c,r) # value of aggregate imports of commodity c in r #;
   1735   Formula (all,c,COMM)(all,r,REG)
   1736       VMB(c,r) = sum{a,ACTS, VMFB(c,a,r)} + VMIB(c,r)
   1737                + VMPB(c,r) + VMGB(c,r);
   1738    
   1739   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1740       FMCSHR(c,a,r) # share of import c used by act. a in r #;
   1741   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   1742       FMCSHR(c,a,r) = VMFB(c,a,r) / VMB(c,r);
   1743    
   1744   Coefficient (all,c,COMM)(all,r,REG)
   1745       PMCSHR(c,r) # share of import c used by priv. hhlds in total imports in r #;
   1746   Formula (all,c,COMM)(all,r,REG)
   1747       PMCSHR(c,r) = VMPB(c,r) / VMB(c,r);
   1748    
   1749   Coefficient (all,c,COMM)(all,r,REG)
   1750       GMCSHR(c,r) # the share of import c by gov't hhlds in total imports in r #;
   1751   Formula (all,c,COMM)(all,r,REG)
   1752       GMCSHR(c,r) = VMGB(c,r) / VMB(c,r);
   1753    
   1754   Coefficient (all,c,COMM)(all,r,REG)
   1755       IMCSHR(c,r) # share of import c by investment agent in total imports in r #;
   1756   Formula (all,c,COMM)(all,r,REG)
   1757       IMCSHR(c,r) = VMIB(c,r) / VMB(c,r);
   1758    
   1759   Equation E_qms
   1760   # assures mkt clearing for imported goods entering each region #
   1761   (all,c,COMM)(all,r,REG)
   1762       qms(c,r)
   1763           = sum{a,ACTS, FMCSHR(c,a,r) * qfm(c,a,r)}
   1764           + PMCSHR(c,r) * qpm(c,r)
   1765           + GMCSHR(c,r) * qgm(c,r)
   1766           + IMCSHR(c,r) * qim(c,r);
   1767    
   1768   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
   1769       ams(c,s,d) # commodity c augmenting tech change from s to d #;
   1770   Coefficient (parameter)(all,c,COMM)(all,r,REG)
   1771       ESUBM(c,r)
   1772       # region-specific elast. of sub. among imports c in Armington structure #;
   1773   Read
   1774       ESUBM from file GTAPPARM header "ESBM";
   1775   Assertion (all,c,COMM)(all,r,REG) ESUBM(c,r) ge 0;
   1776    
   1777   Equation E_qxs
   1778   # regional demand for disaggregated imported commodities by source #
   1779   (all,c,COMM)(all,s,REG)(all,d,REG)
   1780       qxs(c,s,d)
   1781           = -ams(c,s,d) + qms(c,d)
   1782           - ESUBM(c,d) * [pmds(c,s,d) - ams(c,s,d) - pms(c,d)];
   1783    
   1784   Coefficient (all,c,COMM)(all,d,REG)
   1785       IMPBASIC(c,d) # total imports of good c by DEST region d, at basic prices #;
   1786   Formula (all,c,COMM)(all,d,REG)
   1787       IMPBASIC(c,d) = sum{s,REG, VMSB(c,s,d)};
   1788   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   1789       MSHRS(c,s,d) # share of imports from s in imp. bill of r at basic prices #;
   1790   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   1791       MSHRS(c,s,d) = VMSB(c,s,d) / IMPBASIC(c,d);
   1792    
   1793   Equation E_pms
   1794   # price for aggregate imports #
   1795   (all,c,COMM)(all,d,REG)
   1796       pms(c,d) = sum{s,REG, MSHRS(c,s,d) * [pmds(c,s,d) - ams(c,s,d)]};
   1797    
   1798   !<
   1799       6-2. International trade and transport margins
   1800       ----------------------------------------------
   1801   >!
   1802    
   1803   !<
   1804       6-2-1. Demand for Global Transport Services
   1805       -------------------------------------------
   1806   >!
   1807    
   1808   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
   1809       ptrans(c,s,d) # cost index for international transport of c from s to d #;
   1810   Variable (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1811       qtmfsd(m,c,s,d) # international usage margin m on c from s to d #;
   1812   !<
   1813       International margin usage, by Margin, Freight, Source, and Destination,
   1814       i.e., the percent change in usage of m in transport of c from s to d.
   1815   >!
   1816    
   1817   Variable (all,m,MARG)
   1818       pt(m) # price index of composite margins services, by margin mode m #;
   1819   Variable (all,m,MARG)
   1820       qtm(m) # global margin usage #;
   1821   Variable (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1822       atmfsd(m,c,s,d) # tech change in m's shipping of c from region s to d #;
   1823   !<
   1824       Technical progress in shipping by Margin, Freight, Source, and
   1825       Destination.  This is endogenous and driven by the following mode-,
   1826       commodity-, source-, and destination-specific determinants.
   1827   >!
   1828    
   1829   Equation E_qtmfsd
   1830   # bilateral demand for transport services #
   1831   (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1832       qtmfsd(m,c,s,d) = qxs(c,s,d) - atmfsd(m,c,s,d);
   1833   !<
   1834       E_qtmfsd equation computes the bilateral demand for international
   1835       transportation services.  It reflects the fact that the demand for
   1836       services along any particular route is proportional to the quantity of
   1837       merchandise shipped [i.e., QXS(c,s,d)].  It is here that we introduce the
   1838       potential for input-augmenting tech change, atmfsd(m,c,s,d), which is
   1839       commodity- and route-specific.  Thus, in the levels:
   1840               ATMFSD(m,c,s,d) * QTMFSD(m,c,s,d) = QXS(c,s,d)
   1841       where QTMFSD is the amount of composite margins services m used along this
   1842       route.  Technological improvements are reflected by atmfsd(c,s,d) > 0, and
   1843       these reduce the margins services required for this i,r,s triplet.  Tech.
   1844       change also dampens the cost of shipping, thereby lowering the CIF price
   1845       implied by a given FOB value (see 6-2-2).
   1846   >!
   1847    
   1848   Coefficient (ge 0) (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1849       VTMFSD(m,c,s,d)
   1850       # int'l margin usage, by margin, freight, source, and destination #;
   1851   Read
   1852       VTMFSD from file GTAPDATA header "VTWR";
   1853   Update (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1854       VTMFSD(m,c,s,d) = pt(m) * qtmfsd(m,c,s,d);
   1855    
   1856   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   1857       VTFSD(c,s,d) # aggregate value of svces in the shipment of c from s to d #;
   1858   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   1859       VTFSD(c,s,d) = sum{m,MARG, VTMFSD(m,c,s,d)};
   1860   !<
   1861       In a balanced data base, (all,c,COMM)(all,s,REG)(all,d,REG),
   1862       VCIF(c,s,d) = VFOB(c,s,d) + VTFSD(c,s,d).
   1863   >!
   1864    
   1865   Coefficient
   1866       VTUSE # international margin services usage #;
   1867   Formula
   1868       VTUSE = sum{m,MARG, sum{c,COMM, sum{s,REG, sum{d,REG, VTMFSD(m,c,s,d)}}}};
   1869   Coefficient (all,m,MARG)
   1870       VTMUSE(m) # international margin services usage, by type #;
   1871   Formula (all,m,MARG)
   1872       VTMUSE(m) = sum{c,COMM, sum{s,REG, sum{d,REG, VTMFSD(m,c,s,d)}}};
   1873    
   1874   Coefficient (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1875       VTFSD_MSH(m,c,s,d) # share of margin m in cost of getting c from s to d #;
   1876   Formula (all,m,MARG)(all,c,COMM)(all,r,REG)
   1877           (all,d,REG: VTFSD(c,r,d) > 0.0)
   1878       VTFSD_MSH(m,c,r,d) = VTMFSD(m,c,r,d) / VTFSD(c,r,d);
   1879   Formula (all,m,MARG)(all,c,COMM)(all,s,REG)
   1880           (all,d,REG: VTFSD(c,s,d) = 0.0)
   1881       VTFSD_MSH(m,c,s,d) = VTMUSE(m) / VTUSE;
   1882    
   1883   Equation E_ptrans
   1884   #  generates flow-specific modal average cost of transport index (cf. HT7) #
   1885   (all,c,COMM)(all,s,REG)(all,d,REG)
   1886       ptrans(c,s,d)
   1887           = sum{m,MARG, VTFSD_MSH(m,c,s,d) * [pt(m) - atmfsd(m,c,s,d)]};
   1888   !<
   1889       average cost index for margin services used in getting c from s to d
   1890   >!
   1891    
   1892   Coefficient (all,m,MARG)
   1893       VTMPROV(m) # international margin services provision #;
   1894   Formula (all,m,MARG)
   1895       VTMPROV(m) = sum{r,REG, VST(m,r)};
   1896   !<
   1897       In a balanced data base, VTMPROV = VTMUSE.
   1898   >!
   1899   Coefficient (all,r,REG)
   1900       VTRPROV(r) # international margin supply, by region #;
   1901   Formula (all,r,REG)
   1902       VTRPROV(r) = sum{m,MARG, VST(m,r)};
   1903   Coefficient
   1904       VT # international margin supply #;
   1905   Formula
   1906       VT = sum{m,MARG, sum{r,REG, VST(m,r)}};
   1907    
   1908   Coefficient (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1909       VTMUSESHR(m,c,s,d) # share of c,s,d usage in global demand for m #;
   1910   Formula (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1911       VTMUSESHR(m,c,s,d) = VTFSD(c,s,d) / VT;
   1912   Formula
   1913       (all,m,MARG: VTMUSE(m) <> 0.0)(all,c,COMM)(all,s,REG)(all,d,REG)
   1914       VTMUSESHR(m,c,s,d) = VTMFSD(m,c,s,d) / VTMUSE(m);
   1915    
   1916   Equation E_qtm
   1917   # global demand for margin m #
   1918   (all,m,MARG)
   1919       qtm(m)
   1920           = sum{c,COMM, sum{s,REG, sum{d,REG,
   1921             VTMUSESHR(m,c,s,d) * qtmfsd(m,c,s,d)}}};
   1922    
   1923   Coefficient (parameter)(all,m,MARG)
   1924       ESUBS(m)
   1925       # elasticity of sub. among transportation service inputs #;
   1926   Read
   1927       ESUBS from file GTAPPARM header "ESBS";
   1928   Assertion (all,m,MARG) ESUBS(m) ge 0;
   1929    
   1930   Equation E_qst
   1931   # generate demand for regional supply of global transportation service #
   1932   (all,m,MARG)(all,r,REG)
   1933       qst(m,r) = qtm(m) - ESUBS(m)*[pds(m,r) - pt(m)];
   1934    
   1935   !<
   1936       6-2-2. Supply of Transport Services
   1937       -----------------------------------
   1938   >!
   1939    
   1940   Coefficient (all,m,MARG)(all,r,REG)
   1941       VTSUPPSHR(m,r) # share of region r in global supply of margin m #;
   1942   Formula (all,m,MARG)(all,r,REG)
   1943       VTSUPPSHR(m,r) = VTRPROV(r) / VT;
   1944   Formula (all,m,MARG: VTMPROV(m) <> 0.0)(all,r,REG)
   1945       VTSUPPSHR(m,r) = VST(m,r) / VTMPROV(m);
   1946    
   1947   Equation E_pt
   1948   # generate price index for composite transportation services #
   1949   (all,m,MARG)
   1950       pt(m) = sum{r,REG, VTSUPPSHR(m,r) * pds(m,r)};
   1951   !<
   1952       E_pt equation generates a price index for transportation services based on
   1953       zero profits.  NOTE:
   1954       (1) Sales to international transportation are not subject to export tax.
   1955           This is why we base the costs to the transport sector at basic prices
   1956           of the goods sold to international transportation.
   1957       (2) We assume that the supply shares for margin services are uniform
   1958           across freight, source of freight, and destination.
   1959   >!
   1960    
   1961   Variable (all,m,COMM)
   1962       atm(m) # tech change in mode m, worldwide #;
   1963   Variable (all,c,COMM)
   1964       atf(c) # tech change shipping of c, worldwide #;
   1965   Variable (all,r,REG)
   1966       ats(r) # tech change shipping from region r #;
   1967   Variable (all,d,REG)
   1968       atd(d) # tech change shipping to d #;
   1969   Variable (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1970       atall(m,c,s,d) # tech change in m's shipping of c from region s to d #;
   1971    
   1972   Equation E_atmfsd
   1973   #  generates flow-specific average rate of technical change #
   1974   (all,m,MARG)(all,c,COMM)(all,s,REG)(all,d,REG)
   1975       atmfsd(m,c,s,d) = atm(m) + atf(c) + ats(s) + atd(d) + atall(m,c,s,d);
   1976    
   1977   !<
   1978       6-3. Trade prices
   1979       -----------------
   1980   >!
   1981    
   1982   !<
   1983       6-3-1. Export Prices
   1984       --------------------
   1985   >!
   1986    
   1987   Variable (all,c,COMM)(all,r,REG)
   1988       tx(c,r) # dest.-gen. change in subsidy on exports of c from r #;
   1989   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
   1990       txs(c,s,d) # dest.-spec. change in subsidy on exports of c from s to d #;
   1991   !<
   1992       The variable txs captures changes in the power of bilateral export taxes.
   1993       However, the presence of a destination-generic export subsidy shift (tx)
   1994       also permits the user to swap a single export tax shock with another
   1995       target variable.  It is most naturally swapped with the variable qo to
   1996       insulate domestic producers from the world market.
   1997    
   1998       The sign of tx(c,r) and txs(c,s,d) has been CHANGED in GTAP model version 7
   1999       tx(c,r)  > 1 in the case of a tax
   2000       txs(c,r) > 1 in the case of a tax
   2001       tx(c,r)  < 1 in the case of a subsidy.
   2002       txs(c,r) < 1 in the case of a subsidy.
   2003   >!
   2004    
   2005   Equation E_pfob
   2006   # links basic and FOB exports prices #
   2007   (all,c,COMM)(all,s,REG)(all,d,REG)
   2008       pfob(c,s,d) = pds(c,s) + tx(c,s) + txs(c,s,d);
   2009    
   2010   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   2011       VCIFCOST(c,s,d) # value of imports calculated as total cost of imports #;
   2012   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   2013       VCIFCOST(c,s,d) = VFOB(c,s,d) + VTFSD(c,s,d);
   2014    
   2015   Zerodivide (zero_by_zero) default 0.5;
   2016   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   2017       FOBSHR(c,s,d) # FOB share in (com. and margin) imports at CIF prices #;
   2018   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   2019       FOBSHR(c,s,d) = VFOB(c,s,d) / VCIFCOST(c,s,d);
   2020   Zerodivide (zero_by_zero) off;
   2021    
   2022   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   2023       TRNSHR(c,s,d) # Intl. transp. share in (com. and marg) imp. at CIF prices #;
   2024   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   2025       TRNSHR(c,s,d) = 1 - FOBSHR(c,s,d);
   2026    
   2027   Equation E_pcif
   2028   # links FOB and CIF prices for good c shipped from region s to d #
   2029   (all,c,COMM)(all,s,REG)(all,d,REG)
   2030       pcif(c,s,d) = FOBSHR(c,s,d) * pfob(c,s,d) + TRNSHR(c,s,d) * ptrans(c,s,d);
   2031   !<
   2032       This equation links export and import prices for each commodity/route
   2033       triplet.  Note that technical change is embodied in ptrans(i,r,s) which is
   2034       a cost index.
   2035   >!
   2036    
   2037   Variable (all,c,COMM)(all,r,REG)
   2038       tm(c,r) # source-gen. change in tax on imports of c into r #;
   2039   Variable (all,c,COMM)(all,s,REG)(all,d,REG)
   2040       tms(c,s,d) # source-spec. change in tax on imports of c from s to d #;
   2041   !<
   2042       The variable tms captures changes in the power of bilateral import taxes.
   2043       However, the presence of a source-generic import tariff shift (tm) also
   2044       permits the user to swap a single import tariff shock with another target
   2045       variable.  In particular, to insulate domestic producers from import price
   2046       changes, it may be swapped with the relative price variable pr -- see
   2047       below.
   2048   >!
   2049    
   2050   Equation E_pmds
   2051   # links basic domestic import prices and CIF import prices #
   2052   (all,c,COMM)(all,s,REG)(all,d,REG)
   2053       pmds(c,s,d) = pcif(c,s,d) + tm(c,d) + tms(c,s,d);
   2054    
   2055   Variable (orig_level=1.0)(all,c,COMM)(all,r,REG)
   2056       pr(c,r) # ratio of domestic to imported prices in r #;
   2057   Equation E_pr
   2058   # defines target price ratio to be attained via the variable levy #
   2059   (all,c,COMM)(all,r,REG)
   2060       pr(c,r) = pds(c,r) - pms(c,r);
   2061   !<
   2062       E_pr equation defines the target price ratio to be attained VIP the
   2063       variable levy.  This price ratio is the ratio of domestic to average
   2064       imported goods' price.  Note that the way this price ratio is defined, it
   2065       includes intraregional imports as well.  In most applications, regions
   2066       will represent groups of individual countries.  However, in the case of
   2067       the EU, this is problematic, since recent versions of the database have
   2068       incorporated intra-EU trade flows.  Therefore, when aggregated to the EU
   2069       level, the composite import price includes both intra-EU and outside
   2070       imports.  So some modification is needed to handle the EU case.
   2071   >!
   2072    
   2073   !<
   2074       6-4. Goods market equilibrium
   2075       -----------------------------
   2076   >!
   2077   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2078       FDCSHR(c,a,r) # share of dom. prod. c used by act. a in r #;
   2079   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2080       FDCSHR(c,a,r) = VDFB(c,a,r) / VDB(c,r);
   2081   Coefficient (all,c,COMM)(all,r,REG)
   2082       PDCSHR(c,r) # share of domestic prod. of c used by private hhlds in r #;
   2083   Formula (all,c,COMM)(all,r,REG)
   2084       PDCSHR(c,r) = VDPB(c,r) / VDB(c,r);
   2085   Coefficient (all,c,COMM)(all,r,REG)
   2086       GDCSHR(c,r) # share of imports of c used by gov't hhlds in r #;
   2087   Formula (all,c,COMM)(all,r,REG)
   2088       GDCSHR(c,r) = VDGB(c,r) / VDB(c,r);
   2089   Coefficient (all,c,COMM)(all,r,REG)
   2090       IDCSHR(c,r) # share of domestic prod. of c used by investment in r #;
   2091   Formula (all,c,COMM)(all,r,REG)
   2092       IDCSHR(c,r) = VDIB(c,r) / VDB(c,r);
   2093    
   2094   Variable (orig_level=VDB)(all,c,COMM)(all,r,REG)
   2095       qds(c,r) # domestic sales of commodity c in r #;
   2096   Equation E_qds
   2097   # assures market clearing for domestic sales #
   2098   (all,c,COMM)(all,r,REG)
   2099       qds(c,r) = sum{a,ACTS, FDCSHR(c,a,r) * qfd(c,a,r)}
   2100                + PDCSHR(c,r) * qpd(c,r)
   2101                + GDCSHR(c,r) * qgd(c,r)
   2102                + IDCSHR(c,r) * qid(c,r);
   2103    
   2104   Variable (all,c,COMM)(all,r,REG)
   2105       tradslack(c,r) # slack variable in tradeables market clearing condition #;
   2106   !<
   2107       tradslack is exogenous unless the user wishes to specify the price of
   2108       tradeables exogenously, in which case the analysis becomes partial
   2109       equilibrium and walraslack must be exogenized.
   2110   >!
   2111   Coefficient (all,c,COMM)(all,r,REG)
   2112       DSSHR(c,r) # share of domestic sales of c in r #;
   2113   Formula (all,c,COMM)(all,r,REG)
   2114       DSSHR(c,r) = VDB(c,r) / VCB(c,r);
   2115   Coefficient (all,m,MARG)(all,r,REG)
   2116       STSHR(m,r) # share of sales of m to global transport services in r #;
   2117   Formula (all,m,MARG)(all,r,REG)
   2118       STSHR(m,r) = VST(m,r) / VCB(m,r);
   2119   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   2120       XSSHR(c,s,d) # share of export sales of c to s in r #;
   2121   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   2122       XSSHR(c,s,d) = VXSB(c,s,d) / VCB(c,s);
   2123    
   2124   Equation E_pds
   2125   # assures market clearing for commodities #
   2126   (all,c,COMM)(all,r,REG)
   2127       qc(c,r) = DSSHR(c,r) * qds(c,r) + sum(d,REG, XSSHR(c,r,d) * qxs(c,r,d))
   2128               + IF[c in MARG, STSHR(c,r) * qst(c,r)]
   2129               + tradslack(c,r);
   2130    
   2131   !<
   2132       6-5. Agents' prices for goods
   2133       -----------------------------
   2134   >!
   2135    
   2136   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2137       tfd(c,a,r) # tax on domestic c purchased by act. a in r #;
   2138   Variable (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2139       tfm(c,a,r) # tax on imported c purchased by act. a in r #;
   2140    
   2141   Equation E_pfd
   2142   # links domestic basic and firm prices #
   2143   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2144       pfd(c,a,r) = pds(c,r) + tfd(c,a,r);
   2145   !<
   2146       E_pfd  links domestic basic and firm prices. It holds only for domestic
   2147       goods and it captures the effect of commodity taxation of firms.
   2148   >!
   2149    
   2150   Equation E_pfm
   2151   # links domestic basic and firm prices #
   2152   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   2153       pfm(c,a,r) = pms(c,r) + tfm(c,a,r);
   2154   !<
   2155       E_pfm links domestic basic and firm prices.  It holds only for imported
   2156       goods and it captures the effect of commodity taxation of firms.
   2157   >!
   2158    
   2159   Variable (orig_level=LevTPD)(all,c,COMM)(all,r,REG)
   2160       tpd(c,r) # power of tax on domestic c purchased by private hhld in r #;
   2161   Variable (all,c,COMM)(all,r,REG)
   2162       tpm(c,r) # power of tax on imported c purchased by private hhld in r #;
   2163   Coefficient (all,c,COMM)(all,r,REG) LevTPD(c,r) # levels TPD #;
   2164   Zerodivide default 0.5;
   2165   Formula (all,c,COMM)(all,r,REG) LevTPD(c,r)  =  VDPP(c,r) / VDPB(c,r);
   2166   Zerodivide off;
   2167    
   2168   Equation E_ppd
   2169   # links basic and private household consumption prices for domestic com. c #
   2170   (all,c,COMM)(all,r,REG)
   2171       ppd(c,r) = pds(c,r) + tpd(c,r);
   2172    
   2173   Equation E_ppm
   2174   # links basic and private household consumption prices for imported com. c #
   2175   (all,c,COMM)(all,r,REG)
   2176       ppm(c,r) = pms(c,r) + tpm(c,r);
   2177    
   2178   Variable (all,c,COMM)(all,r,REG)
   2179       tgd(c,r) # power of tax on domestic c purchased by government hhld in r #;
   2180   Variable (all,c,COMM)(all,r,REG)
   2181       tgm(c,r) # power of tax on imported c purchased by gov't hhld in r #;
   2182    
   2183   Equation E_pgd
   2184   # links basic and government consumption prices for domestic com. c #
   2185   (all,c,COMM)(all,r,REG)
   2186       pgd(c,r) = pds(c,r) + tgd(c,r);
   2187    
   2188   Equation E_pgm
   2189   # links basic and government consumption prices for imported com. c #
   2190   (all,c,COMM)(all,r,REG)
   2191       pgm(c,r) = pms(c,r) + tgm(c,r);
   2192    
   2193   Variable (all,c,COMM)(all,r,REG)
   2194       tid(c,r) # power of tax on domestic invesment commodity c in region r #;
   2195   Variable (all,c,COMM)(all,r,REG)
   2196       tim(c,r) # power of tax on imported invesment commodity c in region r #;
   2197    
   2198   Equation E_pid
   2199   # links basic and investment consumption prices for domestic com. c #
   2200   (all,c,COMM)(all,r,REG)
   2201       pid(c,r) = pds(c,r) + tid(c,r);
   2202    
   2203   Equation E_pim
   2204   # links basic and investment consumption prices for imported com. c #
   2205   (all,c,COMM)(all,r,REG)
   2206       pim(c,r) = pms(c,r) + tim(c,r);
   2207    
   2208    
   2209   !<
   2210       6-6. Private hhld tax shifter
   2211       -----------------------------
   2212   >!
   2213    
   2214   Variable  (all,c,COMM)(all,r,REG)
   2215       atpd(c,r) # comm.-, source-spec. shifter in private cons. tax of dom. c #;
   2216   Variable (all,c,COMM)(all,r,REG)
   2217       atpm(c,r) # comm.-, source-spec. shift in tax on private cons. of imp. c #;
   2218   Variable (all,r,REG)
   2219       tp(r) # source-generic tax shifter on private cons. #;
   2220   !<
   2221       The variable tp(r) can be swapped with del_ttaxr(r) in order to generate a
   2222       tax replacement scenario, whereby taxes remain a constant share of
   2223       national income.
   2224   >!
   2225    
   2226   Equation E_atpd
   2227   # permits uniform consumption tax change #
   2228   (all,c,COMM)(all,r,REG)
   2229       tpd(c,r) = atpd(c,r) + tp(r);
   2230    
   2231   Equation E_atpm
   2232   # permits uniform consumption tax change #
   2233   (all,c,COMM)(all,r,REG)
   2234       tpm(c,r) = atpm(c,r) + tp(r);
   2235    
   2236   !<
   2237       ----------------------------
   2238       7. Factor market equilibrium
   2239       ----------------------------
   2240   >!
   2241    
   2242   Variable (all,e,ENDWMS)(all,r,REG)
   2243       pe(e,r) # price of mobile and sluggish endowment e in region r #;
   2244   Variable (all,e,ENDWMS)(all,r,REG)
   2245       qe(e,r) # supply of mobile and sluggish endowment e in region r #;
   2246    
   2247   !<
   2248       7-1. Mobile endowments
   2249       ----------------------
   2250   >!
   2251    
   2252   Coefficient (all,e,ENDWM)(all,r,REG)
   2253       VENDWM(e,r) # mobile endowments in r at basic (incl. income tax) prices #;
   2254   Formula (all,e,ENDWM)(all,r,REG)
   2255       VENDWM(e,r) = sum{a,ACTS, EVFB(e,a,r)};
   2256   Coefficient (all,e,ENDWM)(all,a,ACTS)(all,r,REG)
   2257       ENDWMSHR(e,a,r) # share of mobile endow. e used by act. a at basic prices #;
   2258   Formula (all,e,ENDWM)(all,a,ACTS)(all,r,REG)
   2259       ENDWMSHR(e,a,r) = EVFB(e,a,r) / VENDWM(e,r);
   2260    
   2261   Equation E_pe1
   2262   # mkt clearing for perfectly mobile endowments in each r #
   2263   (all,e,ENDWM)(all,r,REG)
   2264       qe(e,r) = sum{a,ACTS, ENDWMSHR(e,a,r) * qfe(e,a,r)} + endwslack(e,r);
   2265    
   2266   Equation E_qes1
   2267   # basic price of mobile endowments in a in r #
   2268   (all,e,ENDWM)(all,a,ACTS)(all,r,REG)
   2269       pes(e,a,r) = pe(e,r);
   2270    
   2271   !<
   2272       7-2. Sluggish endowments
   2273       ------------------------
   2274   >!
   2275    
   2276   Coefficient (parameter)(all,e,ENDW)(all,r,REG)
   2277       ETRAE(e,r)
   2278       # region-specific elast. of transformation for sluggish factor endowments #;
   2279   Read
   2280       ETRAE from file GTAPPARM header "ETRE";
   2281   Assertion (all,e,ENDWS)(all,r,REG) ETRAE(e,r) lt 0;
   2282    
   2283   Equation E_qes2
   2284   # allocation of sluggish endowments across sectors #
   2285   (all,e,ENDWS)(all,a,ACTS)(all,r,REG)
   2286       qes(e,a,r) = qe(e,r) - ETRAE(e,r) * [pes(e,a,r) - pe(e,r)]
   2287                  - endwslack(e,r);
   2288    
   2289   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2290       REVSHR(e,a,r) # Share of endowment e in total endowment revenue/supply #;
   2291   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2292       REVSHR(e,a,r) = EVOS(e,a,r) / VES(e,r);
   2293    
   2294   Equation E_pe2
   2295   # composite price for sluggish endowments #
   2296   (all,e,ENDWS)(all,r,REG)
   2297       pe(e,r) = sum{a,ACTS, REVSHR(e,a,r) * pes(e,a,r)};
   2298    
   2299   !<
   2300       7-3. Sector-specific endowments
   2301       -------------------------------
   2302   >!
   2303    
   2304   Variable (all,e,ENDWF)(all,a,ACTS)(all,r,REG)
   2305       qesf(e,a,r) # fixed endowment e in act. a in region r #;
   2306    
   2307   Equation E_qes3
   2308   # equation to assist use of TABmate's automatic closure tool #
   2309   (all,e,ENDWF)(all,a,ACTS)(all,r,REG)
   2310       qes(e,a,r) = qesf(e,a,r);
   2311   !<
   2312       For convenience, variable qesf and equation E_qesf are added to assist use
   2313      of TABmate's automatic closure tool
   2314   >!
   2315    
   2316   !<
   2317       7-4. Price of endowments
   2318       ------------------------
   2319   >!
   2320   Variable (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2321       tfe(e,a,r) # tax on primary factor e used by act. a in region r #;
   2322    
   2323   Equation E_pfe
   2324   # links basic and firm demand prices for mobile endowments #
   2325   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2326       pfe(e,a,r) = peb(e,a,r) + tfe(e,a,r);
   2327    
   2328   Equation E_pes
   2329   # links supply (pre-) and basic (post-tax) endowment prices #
   2330   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2331       peb(e,a,r) = pes(e,a,r) + tinc(e,a,r);
   2332    
   2333   Equation E_peb !< This equation assures market clearing for all endowments >!
   2334   # market clearing for endowments in each r #
   2335   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2336       qfe(e,a,r) = qes(e,a,r);
   2337    
   2338   !<
   2339       8. Allocation of global saving
   2340       -------------------------------
   2341   >!
   2342    
   2343   !<
   2344       8-1. Investment preliminaries
   2345       -----------------------------
   2346   >!
   2347   Variable (all,r,REG)
   2348       ke(r) # end-of-period capital stock in r #;
   2349   Coefficient (ge 0)(all,r,REG)
   2350       VKB(r) # value of beginning-of-period capital stock in region r #;
   2351   Update (all,r,REG)
   2352       VKB(r) = pinv(r) * kb(r);
   2353   Read
   2354       VKB from file GTAPDATA header "VKB";
   2355   !<
   2356       VKB(r) is used only in this sub-module, so its data are read here.  The
   2357       associated variables, pinv(r) and kb(r), are used across modules, so they
   2358       have been defined as common variables.
   2359   >!
   2360    
   2361   Coefficient (all,r,REG)
   2362       INVKERATIO(r)
   2363       # ratio of gross investment to end-of-period capital stock in r #;
   2364   Formula (all,r,REG)
   2365       INVKERATIO(r) = REGINV(r) / [VKB(r) + NETINV(r)];
   2366    
   2367   Equation E_ke
   2368   # ending capital stock equals beginning stock plus net investment.  #
   2369   (all,r,REG)
   2370       ke(r) = INVKERATIO(r) * qinv(r) + [1.0 - INVKERATIO(r)] * kb(r);
   2371    
   2372   Coefficient (all,r,REG)
   2373       GROSSCAP(r) # gross return to capital #;
   2374   Formula (all,r,REG)
   2375       GROSSCAP(r) = sum{e,ENDWC, VES(e,r)};
   2376    
   2377   Coefficient (all,r,REG)
   2378       GRNETRATIO(r) # ratio of GROSS/NET rates of return on capital in r #;
   2379   Formula (all,r,REG)
   2380       GRNETRATIO(r) = GROSSCAP(r) / [GROSSCAP(r) - VDEP(r)];
   2381   !<
   2382       NOTE: [GROSSCAP(r) - VDEP(r)] is net returns to capital.
   2383   >!
   2384    
   2385   Variable (all,r,REG)
   2386       rore(r) # expected net rate of return on capital stock in r #;
   2387   Variable (all,r,REG)
   2388       rorc(r) # current net rate of return on capital stock in r #;
   2389   Variable (all,r,REG)
   2390       rental(r) # rental rate on capital = ps("capital",r) #;
   2391    
   2392   Equation E_rental
   2393   # defines a variable for capital rental rate #
   2394   (all,r,REG)
   2395       rental(r) = sum{e,ENDWC, [VES(e,r) / GROSSCAP(r)] * pe(e,r)};
   2396    
   2397   Equation E_rorc
   2398   # current rate of return on capital in region r #
   2399   (all,r,REG)
   2400       rorc(r) = GRNETRATIO(r) * [rental(r) - pinv(r)];
   2401    
   2402   Equation E_kb
   2403   # associates change in cap. services w/ change in cap. stock #
   2404   (all,r,REG)
   2405       kb(r) = sum{e,ENDWC, [VES(e,r) / GROSSCAP(r)] * qe(e,r)};
   2406   !<
   2407       E_kb equation associates any change in capital services during the period
   2408       with a change in capital stock.  Full capacity utilization is assumed.
   2409   >!
   2410    
   2411   !<
   2412       8-2. Rate-of-return sensitive investment allocation
   2413       ---------------------------------------------------
   2414   >!
   2415    
   2416   Coefficient (parameter)(all,r,REG)
   2417       RORFLEX(r)
   2418       # flexibility of expected net ROR on capital stock in r wrt investment #;
   2419   Read
   2420       RORFLEX from file GTAPPARM header "RFLX";
   2421   !<
   2422       RORFLEX is the flexibility of the expected net rate of return on the
   2423       capital stock, in region r, with respect to investment.  If a region's
   2424       capital stock increases by 1%, then it is expected that the net rate of
   2425       return on capital will decline by RORFLEX %.  A larger absolute value for
   2426       this parameter will reduce the tendency of international investment flows
   2427       to respond to changes in expected rates of return.
   2428   >!
   2429    
   2430   Equation E_rore
   2431   # expected rate of return depends on the current return and investment #
   2432   (all,r,REG)
   2433       rore(r) = rorc(r) - RORFLEX(r) * [ke(r) - kb(r)];
   2434    
   2435   Coefficient (integer,parameter)
   2436       RORDELTA
   2437       # binary coefficient to switch mechanism of allocating investment funds #;
   2438   Read
   2439       RORDELTA from file GTAPPARM header "RDLT";
   2440   !<
   2441       RORDELTA is a binary coefficient which determines the mechanism of
   2442       allocating investment funds across regions.  When RORDELTA = 1, investment
   2443       funds are allocated across regions to equate the change in the expected
   2444       rates of return (i.e., rore(r)).  When RORDELTA = 0, investment funds are
   2445       allocated across regions to maintain the existing composition of capital
   2446       stocks.
   2447   >!
   2448    
   2449   Variable
   2450       rorg # global net rate of return on capital stock #;
   2451   Variable (all,r,REG)
   2452       cgdslack(r) # slack variable for qinv(r) #;
   2453   !<
   2454       cgdslack is exogenous, unless the user wishes to exogenously fix the level
   2455       of gross investment in a region, in which case it can be swapped with
   2456       cgdslack.
   2457   >!
   2458    
   2459   Equation E_qinv
   2460   # either gross investment or expected rate of return in region r #
   2461   (all,r,REG)
   2462       RORDELTA * rore(r)
   2463       + [1 - RORDELTA]
   2464       * [[REGINV(r) / NETINV(r)] * qinv(r) - [VDEP(r) / NETINV(r)] * kb(r)]
   2465           = RORDELTA * rorg + [1 - RORDELTA] * globalcgds + cgdslack(r);
   2466   !<
   2467       This equation determines either gross investment or the expected rate of
   2468       return in each region, depending on the setting for the binary RORDELTA
   2469       parameter.
   2470   >!
   2471    
   2472   Variable (all,e,ENDWC)(all,r,REG)
   2473       expand(e,r) # change in investment relative to endowment stock #;
   2474   Equation E_expand
   2475   # change in investment relative to endowment stock #
   2476   (all,e,ENDWC)(all,r,REG)
   2477       expand(e,r) = qinv(r) - qe(e,r);
   2478   !<
   2479       Capital Accumulation
   2480       (based on the theory laid out in GTAP Technical Paper #7)
   2481   >!
   2482    
   2483   !<
   2484       8-3. Investment allocation based on initial capital shares
   2485       ----------------------------------------------------------
   2486   >!
   2487    
   2488   Equation E_globalcgds
   2489   # either expected global rate of return or global net investment #
   2490       RORDELTA * globalcgds + [1 - RORDELTA] * rorg
   2491           = RORDELTA
   2492           * sum{r,REG,
   2493               [REGINV(r) / GLOBINV] * qinv(r) - [VDEP(r) / GLOBINV] * kb(r)}
   2494           + [1 - RORDELTA] * sum{r,REG, [NETINV(r) / GLOBINV] * rore(r)};
   2495   !<
   2496       E_globalcgds equation computes either the change in global net investment
   2497       (when RORDELTA = 1), or the change in the expected global rate of return on
   2498       capital (when RORDELTA = 0).
   2499   >!
   2500    
   2501   !<
   2502       8-4. Price of saving
   2503       ---------------------
   2504   >!
   2505    
   2506   Variable (all,r,REG)
   2507       psaveslack(r) # slack variable for the saving price equation #;
   2508   !<
   2509       psaveslack is exogenous under the normal closure.  However, in order to
   2510       replicate simulations from the GTAP book, where there was a single saving
   2511       price, psaveslack may be swapped with psave in order to fix the latter.
   2512       In this case, pcgdswld must be the numeraire so that each region faces the
   2513       same price of saving.
   2514   >!
   2515    
   2516   Equation E_psave
   2517   # price of saving #
   2518   (all,r,REG)
   2519       psave(r)
   2520           = pinv(r)
   2521           + sum{s,REG, [[NETINV(s) - SAVE(s)] / GLOBINV] * pinv(s)}
   2522           + psaveslack(r);
   2523   !<
   2524       In contrast to the GTAP book, the price of saving is now region-specific
   2525       and it changes at the same rate as the price of regional investment, plus
   2526       an adjustment factor which accounts for the fact that saving and
   2527       investment are not equal at the regional level.
   2528   >!
   2529    
   2530   Equation E_pcgdswld
   2531   # price index for the aggregate global cgds composite #
   2532       pcgdswld = sum{r,REG, [NETINV(r) / GLOBINV] * pinv(r)};
   2533    
   2534   !<
   2535       9. Tax revenue streams
   2536       ----------------------
   2537   >!
   2538    
   2539   !<
   2540       9-1. Tax revenues generated in production
   2541       -----------------------------------------
   2542   >!
   2543    
   2544   !<
   2545       The following variables could be dropped when converting to levels
   2546       equation for income.  They are only needed for the linearized equation.
   2547       The idea here is to look at the ratio of taxes to income in order to
   2548       preserve homogeneity in prices.  (We could also look at changes in tax
   2549       revenue, but then a uniform price increase would change this variable.)
   2550       Obviously a simple percentage change variable doesn't work, since many
   2551       taxes are initially zero.  The basic logic of this approach is as follows:
   2552    
   2553       Let R be the ratio of taxes to income: R = T/Y, then:
   2554           dR = d(T/Y) = R(t - y)/100
   2555       multiply through by Y to get:
   2556           YdR = dT - Ty/100
   2557       This ratio change is computed for each tax type and for total taxes.  Then
   2558       the change in tax revenue itself may be computed as:
   2559           dT = YdR + Ty/100
   2560       in order to determine regional income.
   2561   >!
   2562    
   2563   Variable (change) (all,r,REG)
   2564       del_taxrout(r) # change in ratio of output tax to INCOME #;
   2565   Variable (change) (all,r,REG)
   2566       del_taxrfu(r) # change in ratio of tax on primary factor usage to INCOME #;
   2567   Variable (change) (all,r,REG)
   2568       del_taxriu(r) # change in ratio of tax on intermediate usage to INCOME #;
   2569   Variable (change) (all,r,REG)
   2570       del_taxrpc(r) # change in ratio of private consumption tax to INCOME #;
   2571   Variable (change) (all,r,REG)
   2572       del_taxrgc(r) # change in ratio of government consumption tax to INCOME #;
   2573   Variable (change) (all,r,REG)
   2574       del_taxric(r) # change in ratio of investment consumption tax to INCOME #;
   2575   Variable (change) (all,r,REG)
   2576       del_taxrexp(r) # change in ratio of export tax to INCOME #;
   2577   Variable (change) (all,r,REG)
   2578       del_taxrimp(r) # change in ratio of import tax to INCOME #;
   2579   Variable (change) (all,r,REG)
   2580       del_taxrinc(r) # change in ratio of income tax to INCOME #;
   2581    
   2582   Equation E_del_taxrout
   2583   # change in ratio of output tax payments to regional income #
   2584   (all,r,REG)
   2585       100.0 * INCOME(r) * del_taxrout(r) + TAXROUT(r) * y(r)
   2586           = sum{c,COMM, sum{a,ACTS,
   2587              MAKEB(c,a,r) * to(c,a,r) + PTAX(c,a,r) * [ps(c,a,r) + qca(c,a,r)]}};
   2588    
   2589   Equation E_del_taxrfu
   2590   # change in ratio of tax payments on factor usage to regional income #
   2591   (all,r,REG)
   2592       100.0 * INCOME(r) * del_taxrfu(r) + TAXRFU(r) * y(r)
   2593           = sum{e,ENDW, sum{a,ACTS,
   2594              VFP(e,a,r) * tfe(e,a,r) + ETAX(e,a,r) * [peb(e,a,r) + qfe(e,a,r)]}};
   2595    
   2596   Equation E_del_taxriu
   2597   # change in ratio of tax payments on intermediate goods to regional income #
   2598   (all,r,REG)
   2599       100.0 * INCOME(r) * del_taxriu(r) + TAXRIU(r) * y(r)
   2600           = sum{c,COMM, sum{a,ACTS,
   2601               VDFP(c,a,r) * tfd(c,a,r) + DFTAX(c,a,r) * [pds(c,r) + qfd(c,a,r)]}}
   2602           + sum{c,COMM, sum{a,ACTS,
   2603               VMFP(c,a,r) * tfm(c,a,r) + MFTAX(c,a,r) * [pms(c,r) + qfm(c,a,r)]}};
   2604    
   2605   !<
   2606       9-2. Tax revenues generated in domestic final demand
   2607       ----------------------------------------------------
   2608   >!
   2609    
   2610   Equation E_del_taxrpc
   2611   # change in ratio of private consumption tax payments to regional income #
   2612   (all,r,REG)
   2613       100.0 * INCOME(r) * del_taxrpc(r) + TAXRPC(r) * y(r)
   2614           = sum{c,COMM,
   2615               VDPP(c,r) * tpd(c,r) + DPTAX(c,r) * [pds(c,r) + qpd(c,r)]}
   2616           + sum{c,COMM,
   2617               VMPP(c,r) * tpm(c,r) + MPTAX(c,r) * [pms(c,r) + qpm(c,r)]};
   2618    
   2619   Equation E_del_taxrgc
   2620   # change in ratio of government consumption tax payments to regional income #
   2621   (all,r,REG)
   2622       100.0 * INCOME(r) * del_taxrgc(r) + TAXRGC(r) * y(r)
   2623           = sum{c,COMM,
   2624               VDGP(c,r) * tgd(c,r) + DGTAX(c,r) * [pds(c,r) + qgd(c,r)]}
   2625           + sum{c,COMM,
   2626               VMGP(c,r) * tgm(c,r) + MGTAX(c,r) * [pms(c,r) + qgm(c,r)]};
   2627    
   2628   Equation E_del_taxric
   2629   # change in ratio of investment tax payments to regional income #
   2630   (all,r,REG)
   2631       100.0 * INCOME(r) * del_taxric(r) + TAXRIC(r) * y(r)
   2632           = sum{c,COMM,
   2633               VDIP(c,r) * tid(c,r) + DITAX(c,r) * [pds(c,r) + qid(c,r)]}
   2634           + sum{c,COMM,
   2635               VMIP(c,r) * tim(c,r) + MITAX(c,r) * [pms(c,r) + qim(c,r)]};
   2636    
   2637   !<
   2638       9-3. Tax revenues generated in international trade
   2639       --------------------------------------------------
   2640   >!
   2641    
   2642   Equation E_del_taxrexp
   2643   # change in ratio of export tax payments to regional income #
   2644   (all,s,REG)
   2645       100.0 * INCOME(s) * del_taxrexp(s) + TAXREXP(s) * y(s)
   2646           = sum{c,COMM, sum{d,REG, VFOB(c,s,d) * [tx(c,s) + txs(c,s,d)]
   2647           + XTAXD(c,s,d) * [pds(c,s) + qxs(c,s,d)]}};
   2648    
   2649   Equation E_del_taxrimp
   2650   # change in ratio of import tax payments to regional income #
   2651   (all,d,REG)
   2652       100.0 * INCOME(d) * del_taxrimp(d) + TAXRIMP(d) * y(d)
   2653           = sum{c,COMM, sum{s,REG,
   2654               VMSB(c,s,d) * [tm(c,d) + tms(c,s,d)]
   2655               + MTAX(c,s,d) * [pcif(c,s,d) + qxs(c,s,d)]}};
   2656    
   2657   !<
   2658       9-4. Income taxes and other tax identities
   2659       ------------------------------------------
   2660   >!
   2661    
   2662   Coefficient (all,r,REG)
   2663       TAXRINC(r) # income tax payments in r #;
   2664   Formula (all,r,REG)
   2665       TAXRINC(r) = sum{e,ENDW, sum{a,ACTS, INCTAX(e,a,r)}};
   2666    
   2667   Equation E_del_taxrinc
   2668   # change in ratio of income tax payments to regional income #
   2669   (all,r,REG)
   2670       100.0 * INCOME(r) * del_taxrinc(r) + TAXRINC(r) * y(r)
   2671           = sum{e,ENDW, sum{a,ACTS, EVFB(e,a,r) * [tinc(e,a,r)]
   2672           + INCTAX(e,a,r) * [pes(e,a,r) + qfe(e,a,r)]}};
   2673    
   2674   Equation E_del_indtaxr
   2675   # change in ratio of indirect taxes to INCOME in r #
   2676   (all,r,REG)
   2677       del_indtaxr(r)
   2678           = del_taxrout(r) + del_taxrfu(r)
   2679           + del_taxriu(r) + del_taxrpc(r) + del_taxrgc(r) + del_taxric(r)
   2680           + del_taxrimp(r)+ del_taxrexp(r);
   2681    
   2682   Variable (change)(all,r,REG)
   2683       del_ttaxr(r) # change in ratio of taxes to INCOME in r #;
   2684   Equation E_del_ttaxr
   2685   # change in ratio of taxes to INCOME in r #
   2686   (all,r,REG)
   2687       del_ttaxr(r)
   2688           = del_indtaxr(r) + del_taxrinc(r);
   2689   !<
   2690      The del_ttaxr variable can be swapped with the commodity- and source-generic
   2691      consumption tax shift, tp(r), in order to generate a tax replacement
   2692      scenario, whereby taxes remain a constant share of national income.
   2693   >!
   2694    
   2695   !<
   2696       10. Numeraire and closure
   2697       -------------------------
   2698   >!
   2699    
   2700   Variable (orig_level=1.0)(all,r,REG)
   2701       pfactor(r) # price index (at basic prices) of primary factors, by region #;
   2702   Coefficient (all,r,REG)
   2703       VENDWREG(r) # value of primary factors, at basic prices, by region #;
   2704   Formula (all,r,REG)
   2705       VENDWREG(r) = sum{e,ENDW, sum{a,ACTS, EVFB(e,a,r)}};
   2706    
   2707   Equation E_pfactor
   2708   # computes % change in price index of primary factors, by region #
   2709   (all,r,REG)
   2710       VENDWREG(r) * pfactor(r)
   2711           = sum{e,ENDW, sum{a,ACTS, EVFB(e,a,r) * peb(e,a,r)}};
   2712    
   2713   Variable (orig_level=1.0)
   2714       pfactwld # world price index of primary factors #;
   2715   Coefficient
   2716       VENDWWLD # value of primary factors, at basic prices, worldwide #;
   2717   Formula
   2718       VENDWWLD = sum{r,REG, VENDWREG(r)};
   2719    
   2720   Equation E_rorg
   2721   # computes % change in global price index of primary factors #
   2722       VENDWWLD * pfactwld = sum{r,REG, VENDWREG(r) * pfactor(r)};
   2723   !<  This equation derives the price index of primary factors. Note that this is
   2724       the only instance where an equation name breaks the GTAP model's naming
   2725       convention (i.e., equation name does directly not relate to variable being
   2726       derived). This is because PFACTWLD is exogenous as the model.s price
   2727       anchor (numeraire) and thus this equation .explains., RORG which has no
   2728       separate equation (which has been dropped due to Walras' law). Note as well
   2729       that the equation is separated into two. The first E_pfactor defines a
   2730       regional index for factor prices, and the second defines the global index.
   2731       By naming this equation E_rorg and because pfactwld is exogenous, we can
   2732       for convenience, use TABmate's automatic closure tool to list down all
   2733       exogenous and endogenous variable split (i.e., closure) that is consistent
   2734       with the standard GTAP closure. Using TABmate's automatic closure tool is
   2735       beneficial especially during model development or extension.
   2736   >!
   2737    
   2738   Variable
   2739       walras_sup # supply in omitted market--global supply of cgds composite #;
   2740   Variable
   2741       walras_dem # demand in the omitted market--global demand for saving #;
   2742   Variable
   2743       walraslack # slack variable in the omitted market #;
   2744    
   2745   Equation E_walras_sup
   2746   # extra equation: computes change in supply in the omitted market #
   2747       walras_sup = pcgdswld + globalcgds;
   2748   !<
   2749       This is an extra equation which simply computes change in supply in the
   2750       omitted market.  (modified from HT 12 to reflect the value as opposed to
   2751       quantity change, in light of the new treatment of psave(r))
   2752   >!
   2753    
   2754   Equation E_walras_dem
   2755   # extra equation: computes change in demand in the omitted market #
   2756       GLOBINV * walras_dem = sum{r,REG, SAVE(r) * [psave(r) + qsave(r)]};
   2757   !<
   2758       E_walras_dem is an extra equation which simply computes change in demand in
   2759       the omitted market.  (modified from HT 13 to reflect the value as opposed to
   2760       quantity change)
   2761   >!
   2762    
   2763   Equation E_walraslack
   2764   # Check Walras' Law.  Value of "walraslack" should be zero #
   2765       walras_sup = walras_dem + walraslack;
   2766   !<
   2767       E_walraslack allows us to verify that Walras' Law holds. The value of
   2768       walraslack should be zero in any GE simulation. The variable walraslack is
   2769       endogenous under normal, GE closure.  If the GE links are broken, then
   2770       walraslack must be swapped with the numeraire, thereby forcing global
   2771       saving to explicitly equal global investment.
   2772   >!
   2773    
   2774   !<
   2775       ---------------
   2776       Summary Indices
   2777       ---------------
   2778    
   2779       We first calculate a number of useful summary statistics, including
   2780       terms of trade variables/coefficients which are used in the
   2781       Welfare Measurement and Decomposition section (Section 11)
   2782    
   2783       The following equations do not generally affect the equilibrium structure
   2784       of the model, although they do include the equation for the usual numeraire
   2785       variable, "pfactwld".
   2786    
   2787       B-0. Variables and coefficients for summary indices
   2788       B-1. Factor price indices
   2789       B-2. Regional terms of trade (ToT)
   2790       B-3. GDP indices (value, price and quantity)
   2791       B-4. Aggregate trade indices (value, price and quantity)
   2792       B-5. Trade balance indices
   2793       B-6. Terms of trade (ToT) decomposition
   2794   >!
   2795    
   2796   !<
   2797       B-0. Appendix-specific variables and coefficients
   2798       -------------------------------------------------
   2799       only used in this summary indices appendix
   2800   >!
   2801    
   2802   Variable (all,c,COMM)(all,s,REG)
   2803       vxwfob(c,s) # value of merchandise regional exports, by commodity, FOB #;
   2804   Variable (all,c,COMM)(all,s,REG)
   2805       vmwcif(c,s) # value of merchandise regional imports, by commodity, CIF #;
   2806   Variable (all,r,REG)
   2807       vxwreg(r) # value of merchandise exports, by region #;
   2808   Variable (all,r,REG)
   2809       vmwreg(r) # value of merchandise imports, by region, at world prices #;
   2810    
   2811   Coefficient (all,c,COMM)(all,r,REG)
   2812       VXDFOB(c,r) # FOB value of com. c exports to all dest. (tradeables only) #;
   2813   Formula (all,c,COMM)(all,r,REG)
   2814       VXDFOB(c,r) = sum{d,REG, VFOB(c,r,d)};
   2815    
   2816   Coefficient (all,c,COMM)(all,r,REG)
   2817       VXW(c,r) # value of exports by commodity c and region r at FOB prices #;
   2818   Formula (all,c,COMM)(all,r,REG)
   2819       VXW(c,r) = VXDFOB(c,r) + IF[c in MARG, VST(c,r)];
   2820    
   2821   Coefficient (all,r,REG)
   2822       VXWREGION(r) # value of exports by region r at FOB prices #;
   2823   Formula (all,r,REG)
   2824       VXWREGION(r) = sum{c,COMM, VXW(c,r)};
   2825    
   2826   Coefficient (all,c,COMM)(all,d,REG)
   2827       VMCIF(c,d) # value of commodity imports c by DEST. d at CIF prices #;
   2828   Formula (all,c,COMM)(all,d,REG)
   2829       VMCIF(c,d) = sum{s,REG, VCIF(c,s,d)};
   2830    
   2831   Coefficient (all,r,REG)
   2832       VMWREGION(r) # value of commodity imports by region r at CIF prices #;
   2833   Formula (all,r,REG)
   2834       VMWREGION(r) = sum{c,COMM, VMCIF(c,r)};
   2835    
   2836   !<
   2837       B-1. Factor price indices
   2838       -------------------------
   2839   >!
   2840    
   2841   Variable (orig_level=1.0)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2842       pfactreal(e,a,r) # ratio of return to primary factor e to CPI in r #;
   2843   Equation E_pfactreal
   2844   # defines the real rate of return to primary factor e in region r #
   2845   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   2846       pfactreal(e,a,r) = peb(e,a,r) - ppriv(r);
   2847   !<
   2848       This equation defines the real rate of return to primary factor e in
   2849       region r (new).
   2850   >!
   2851    
   2852   !<
   2853       B-2. Regional terms of trade (ToT)
   2854       ----------------------------------
   2855    
   2856       The next three equations correspond to Table 10 of Hertel and Tsigas on
   2857       Regional Terms of Trade.
   2858   >!
   2859    
   2860   Variable (orig_level=1.0)(all,r,REG)
   2861       psw(r) # index of prices received for tradeables produced in region r #;
   2862   Equation E_psw
   2863   # estimate change in index of prices received for tradeables c produced in r #
   2864   (all,r,REG)
   2865       VXWREGION(r) * psw(r)
   2866           = sum{c,COMM, sum{d,REG, VFOB(c,r,d) * pfob(c,r,d)}}
   2867           + sum{m,MARG, VST(m,r) * pds(m,r)};
   2868   !<
   2869       This equation estimates the change in the index of prices received for
   2870       tradeable products produced in r.  (modified from HT 64 to eliminate the
   2871       investment component)
   2872   >!
   2873    
   2874   Variable (orig_level=1.0)(all,r,REG)
   2875       pdw(r) # index of prices paid for tradeables used in importing region r #;
   2876   Equation E_pdw
   2877   # estimate change in index of prices paid for tradeable products used in r #
   2878   (all,r,REG)
   2879       VMWREGION(r) * pdw(r)
   2880           = sum{c,COMM, sum{s,REG, VCIF(c,s,r) * pcif(c,s,r)}};
   2881   !<
   2882       This equation estimates the change in the index of prices paid for
   2883       tradeable products used in r.  (modified from HT 65 to eliminate saving)
   2884   >!
   2885    
   2886   Variable (orig_level=1.0)(all,r,REG)
   2887       tot(r) # terms of trade for region r: tot(r) = psw(r) - pdw(r) #;
   2888   Equation E_tot
   2889   # terms of trade equation computed as difference in psw and pdw #
   2890   (all,r,REG)
   2891       tot(r) = psw(r) - pdw(r);
   2892    
   2893   !<
   2894       B-3. GDP indices (value, price and quantity)
   2895       --------------------------------------------
   2896   >!
   2897    
   2898   ! GDP expenditure side summary !
   2899   Set
   2900       GDPEX (Household,Investment,Government,Exports,IntnlMargins,Imports);
   2901   Coefficient (all,r,REG)(all,g,GDPEX)
   2902       GDPEXP(r,g) # GDP expenditure side summary #;
   2903   Formula
   2904   (all,r,REG) GDPEXP(r,"Household")    = sum{c,COMM, VPP(c,r)};
   2905   (all,r,REG) GDPEXP(r,"Investment")   = sum{c,COMM, VIP(c,r)};
   2906   (all,r,REG) GDPEXP(r,"Government")   = sum{c,COMM, VGP(c,r)};
   2907   (all,s,REG) GDPEXP(s,"Exports")      = sum{c,COMM, sum{d,REG, VFOB(c,s,d)}};
   2908   (all,r,REG) GDPEXP(r,"IntnlMargins") = sum{m,MARG, VST(m,r)};
   2909   (all,d,REG) GDPEXP(d,"Imports")      = - sum{c,COMM, sum{s,REG, VCIF(c,s,d)}};
   2910   Write
   2911       GDPEXP to file GTAPSUM header "GDPE";
   2912    
   2913   Variable (all,r,REG)
   2914       vgdp(r) # change in value of GDP #;
   2915   Coefficient (all,r,REG)
   2916       GDP(r) # gross domestic product in region r #;
   2917   Formula (all,r,REG)
   2918       GDP(r) = sum{g,GDPEX, GDPEXP(r,g)};
   2919   !<
   2920       Gross Domestic Product in region r. Trade is valued at FOB and CIF prices.
   2921   >!
   2922    
   2923   Equation E_vgdp
   2924   # change in value of GDP #
   2925   (all,r,REG)
   2926       GDP(r) * vgdp(r)
   2927           = sum{c,COMM, VGP(c,r) * [qga(c,r) + pga(c,r)]}
   2928           + sum{c,COMM, VPP(c,r) * [qpa(c,r) + ppa(c,r)]}
   2929           + sum{c,COMM, VIP(c,r) * [qinv(r) + pinv(r)]}
   2930           + sum{c,COMM, sum{d,REG, VFOB(c,r,d) * [qxs(c,r,d) + pfob(c,r,d)]}}
   2931           + sum{m,MARG, VST(m,r) * [qst(m,r) + pds(m,r)]}
   2932           - sum{c,COMM, sum{s,REG, VCIF(c,s,r) * [qxs(c,s,r) + pcif(c,s,r)]}};
   2933    
   2934   Variable (orig_level=1.0)(all,r,REG)
   2935       pgdp(r) # GDP price index #;
   2936   Variable (orig_level=GDP)(all,r,REG)
   2937       qgdp(r) # GDP quantity index #;
   2938    
   2939   Equation E_pgdp
   2940   # GDP price index #
   2941   (all,r,REG)
   2942       GDP(r) * pgdp(r)
   2943           = sum{c,COMM, VGP(c,r) * pga(c,r)}
   2944           + sum{c,COMM, VPP(c,r) * ppa(c,r)}
   2945           + sum{c,COMM, VIP(c,r) * pia(c,r)}
   2946           + sum{c,COMM, sum{d,REG, VFOB(c,r,d) * pfob(c,r,d)}}
   2947           + sum{m,MARG, VST(m,r) * pds(m,r)}
   2948           - sum{c,COMM, sum{s,REG, VCIF(c,s,r) * pcif(c,s,r)}};
   2949    
   2950   Equation E_qgdp
   2951   # GDP quantity index #
   2952   (all,r,REG)
   2953       GDP(r) * qgdp(r)
   2954           = sum{c,COMM, VGP(c,r) * qga(c,r)}
   2955           + sum{c,COMM, VPP(c,r) * qpa(c,r)}
   2956           + sum{c,COMM, VIP(c,r) * qia(c,r)}
   2957           + sum{c,COMM, sum{d,REG, VFOB(c,r,d) * qxs(c,r,d)}}
   2958           + sum{m,MARG, VST(m,r) * qst(m,r)}
   2959           - sum{c,COMM, sum{s,REG, VCIF(c,s,r) * qxs(c,s,r)}};
   2960    
   2961   !<
   2962       modified from HT 72 for use with AnalyseGE
   2963   >!
   2964   Variable (all,a,ACTS)(all,r,REG)
   2965       compvalad(a,r) # composition of value added for good c and region r #;
   2966    
   2967   Equation E_compvalad
   2968   # track change in composition of value added #
   2969   (all,a,ACTS)(all,r,REG)
   2970       compvalad(a,r) = qo(a,r) - qgdp(r);
   2971    
   2972   !<
   2973       B-4. Aggregate trade indices (value, price and quantity)
   2974       --------------------------------------------------------
   2975   >!
   2976    
   2977   !<
   2978       Common variables and coefficients
   2979       Value indices for aggregate trade
   2980       Price indices for aggregate trade
   2981       Quantity indices for aggregate trade
   2982   >!
   2983    
   2984   !<
   2985       Common variables and coefficients
   2986       .................................
   2987    
   2988       only used in this aggregate trade indices section
   2989   >!
   2990    
   2991   Variable (orig_level=1.0)(all,c,COMM)(all,r,REG)
   2992       pxw(c,r) # aggregate exports price index of c from region r #;
   2993   Coefficient (all,c,COMM)
   2994       VXWCOMMOD(c) # value of world exports by commodity c at FOB prices #;
   2995   Formula (all,c,COMM)
   2996       VXWCOMMOD(c) = sum{r,REG, VXW(c,r)};
   2997   Coefficient
   2998       VXWLD # value of commodity exports, FOB, globally #;
   2999   Formula
   3000       VXWLD = sum{r,REG, VXWREGION(r)};
   3001    
   3002   Coefficient (all,c,COMM)
   3003       VMWCOMMOD(c) # global value of commodity imports, CIF, by commodity #;
   3004   Formula (all,c,COMM)
   3005       VMWCOMMOD(c) = sum{r,REG, VMCIF(c,r)};
   3006    
   3007   Coefficient (all,c,COMM)(all,r,REG)
   3008       VXDXSB(c,r) # basic value of com. c exports to all dest. (tradeables only) #;
   3009   Formula (all,c,COMM)(all,r,REG)
   3010       VXDXSB(c,r) = sum{d,REG, VXSB(c,r,d)};
   3011    
   3012   Coefficient (all,c,COMM)(all,r,REG)
   3013       PW_PM(c,r) # ratio of world to domestic prices #;
   3014   Formula (all,c,COMM)(all,r,REG)
   3015       PW_PM(c,r) = VXDFOB(c,r) / VXDXSB(c,r);
   3016    
   3017   Coefficient (all,c,COMM)(all,r,REG)
   3018       VOW(c,r) # value of commodity output in r at FOB incl transp. services #;
   3019   Formula (all,c,COMM)(all,r,REG)
   3020       VOW(c,r) = VDB(c,r) * PW_PM(c,r) + VXDFOB(c,r) + IF[c in MARG, + VST(c,r)];
   3021    
   3022   Coefficient (all,c,COMM)
   3023       VWOW(c) # value of world supply at world prices for c #;
   3024   Formula (all,c,COMM)
   3025       VWOW(c) = sum{r,REG, VOW(c,r)};
   3026    
   3027   Coefficient (all,c,COMM)
   3028       VWOU(c) # value of world output of c at user prices #;
   3029   Formula (all,c,COMM)
   3030       VWOU(c) = sum{r,REG, [VPP(c,r) + VGP(c,r)] + sum{a,ACTS, VFP(c,a,r)}};
   3031    
   3032   !<
   3033       Value indices for aggregate trade
   3034       .................................
   3035   >!
   3036    
   3037   Equation E_vxwfob
   3038   # the change in FOB value of exports of m from r #
   3039   (all,c,COMM)(all,r,REG)
   3040       VXW(c,r) * vxwfob(c,r)
   3041           = sum{d,REG, VFOB(c,r,d) * [qxs(c,r,d) + pfob(c,r,d)]}
   3042           + IF[c in MARG, VST(c,r) * [qst(c,r) + pds(c,r)]];
   3043    
   3044   Equation E_vxwreg
   3045   # computes % change in value of merchandise exports, by region #
   3046   (all,r,REG)
   3047       VXWREGION(r) * vxwreg(r) = sum{c,COMM, VXW(c,r) * vxwfob(c,r)};
   3048    
   3049   Variable (all,c,COMM)
   3050       vxwcom(c) # value of global merchandise exports by commodity #;
   3051   Equation E_vxwcom
   3052   # computes % change in FOB value of global exports, by commodity #
   3053   (all,c,COMM)
   3054       VXWCOMMOD(c) * vxwcom(c) = sum{r,REG, VXW(c,r) * vxwfob(c,r)};
   3055    
   3056   Variable
   3057       vxwwld # value of world trade #;
   3058   Equation E_vxwwld
   3059   # computes % change in value of global exports #
   3060       VXWLD * vxwwld = sum{r,REG, VXWREGION(r) * vxwreg(r)};
   3061    
   3062   Equation E_vmwcif
   3063   # the change in CIF value of imports of commodity c into r #
   3064   (all,c,COMM)(all,d,REG)
   3065       VMCIF(c,d) * vmwcif(c,d)
   3066           = sum{s,REG, VCIF(c,s,d) * [pcif(c,s,d) + qxs(c,s,d)]};
   3067    
   3068   Equation E_vmwreg
   3069   # computes % change in value of imports, CIF basis, by region #
   3070   (all,r,REG)
   3071       VMWREGION(r) * vmwreg(r) = sum{c,COMM, VMCIF(c,r) * vmwcif(c,r)};
   3072    
   3073   Variable (all,c,COMM)
   3074       vmwcom(c) # value of global merchandise imports c, at world prices #;
   3075   Equation E_vmwcom
   3076   # computes % change in value of global imports, by commodity #
   3077   (all,c,COMM)
   3078       VMWCOMMOD(c) * vmwcom(c) = sum{s,REG, VMCIF(c,s) * vmwcif(c,s)};
   3079    
   3080   Variable (all,c,COMM)
   3081       valuew(c) # value of world supply of good c #;
   3082   Equation E_valuew
   3083   # change in value of world output of comm. c at FOB prices #
   3084   (all,c,COMM)
   3085       VWOW(c) * valuew(c) = sum{r,REG, VOW(c,r) * [pxw(c,r) + qc(c,r)]};
   3086    
   3087   Variable (all,c,COMM)
   3088       valuewu(c) # value of world supply of good c at user prices #;
   3089   Equation E_valuewu
   3090   # change in value of world output of commodity c at user prices #
   3091   (all,c,COMM)
   3092       VWOU(c) * valuewu(c)
   3093           = sum{s,REG, VPP(c,s) * [ppa(c,s) + qpa(c,s)]
   3094           + VGP(c,s) * [pga(c,s) + qga(c,s)]
   3095           + sum{a,ACTS, VFP(c,a,s) * [pfa(c,a,s) + qfa(c,a,s)]}};
   3096    
   3097   !<
   3098       Price indices for aggregate trade
   3099       .................................
   3100   >!
   3101    
   3102   Equation E_pxw
   3103   # change in FOB price index of exports of m from r #
   3104   (all,C,COMM)(all,r,REG)
   3105       VXW(c,r) * pxw(c,r)
   3106           = sum{d,REG, VFOB(c,r,d) * pfob(c,r,d)}
   3107           + IF[c in MARG, VST(c,r) * pds(c,r)];
   3108    
   3109   Variable (orig_level=1.0)(all,r,REG)
   3110       pxwreg(r) # price index of merchandise exports, by region #;
   3111   Equation E_pxwreg
   3112   # computes % change in price index of exports, by region #
   3113   (all,r,REG)
   3114       VXWREGION(r) * pxwreg(r) = sum{c,COMM, VXW(c,r) * pxw(c,r)};
   3115    
   3116   Variable (orig_level=1.0)(all,c,COMM)
   3117       pxwcom(c) # price index of global merchandise exports by commodity #;
   3118   Equation E_pxwcom
   3119   # computes % change in price index of exports, by commodity #
   3120   (all,c,COMM)
   3121       VXWCOMMOD(c) * pxwcom(c) = sum{r,REG, VXW(c,r) * pxw(c,r)};
   3122    
   3123   Variable (orig_level=1.0)
   3124       pxwwld # price index of world trade #;
   3125   Equation E_pxwwld
   3126   # computes % change in price index of global exports #
   3127       VXWLD * pxwwld = sum{r,REG, VXWREGION(r) * pxwreg(r)};
   3128    
   3129   Variable (all,c,COMM)(all,r,REG)
   3130       pmw(c,r) # world price of composite import c in region r #;
   3131   Equation E_pmw
   3132   # computes % change in CIF price index of imports of c into d #
   3133   (all,c,COMM)(all,d,REG)
   3134       VMCIF(c,d) * pmw(c,d) = sum{s,REG, VCIF(c,s,d) * pcif(c,s,d)};
   3135    
   3136   Variable (orig_level=1.0)(all,r,REG)
   3137       pmwreg(r) # price index of merchandise imports, by region #;
   3138   Equation E_pmwreg
   3139   # computes % change in price index of imports, by region #
   3140   (all,r,REG)
   3141       VMWREGION(r) * pmwreg(r) = sum{c,COMM, VMCIF(c,r) * pmw(c,r)};
   3142    
   3143   Variable (orig_level=1.0)(all,c,COMM)
   3144       pmwcom(c) # price index of global merchandise imports by commodity #;
   3145   Equation E_pmwcom
   3146   # computes % change in price index of imports, by commodity #
   3147   (all,c,COMM)
   3148       VMWCOMMOD(c) * pmwcom(c) = sum{r,REG, VMCIF(c,r) * pmw(c,r)};
   3149    
   3150   Variable (all,c,COMM)
   3151       pw(c) # world price index for total good c supplies #;
   3152   Equation E_pw
   3153   # change in index of world prices, FOB, for total production of c #
   3154   (all,c,COMM)
   3155       VWOW(c) * pw(c) = sum{r,REG, VOW(c,r) * pxw(c,r)};
   3156    
   3157   Variable (orig_level=1.0)(all,c,COMM)
   3158       pwu(c) # world price index for total good c supplies at user prices #;
   3159   Equation E_pwu
   3160   # change in index of user prices for deflating world production of c #
   3161   (all,c,COMM)
   3162       VWOU(c) * pwu(c)
   3163           = sum{s,REG, VPP(c,s) * ppa(c,s)
   3164           + VGP(c,s) * pga(c,s)
   3165           + VIP(c,s) * pinv(s)
   3166           + sum{a,ACTS, VFP(c,a,s) * pfa(c,a,s)}};
   3167    
   3168   !<
   3169       Quantity indices for aggregate trade
   3170       ....................................
   3171   >!
   3172    
   3173   Variable (orig_level=VXW)(all,c,COMM)(all,r,REG)
   3174       qxw(c,r) # aggregate exports of c from region r, FOB weights #;
   3175   Equation E_qxw
   3176   # change in volume of exports of (margin and non-margin) commodity c from r #
   3177   (all,c,COMM)(all,r,REG)
   3178       VXW(c,r) * qxw(c,r)
   3179           = sum{d,REG, VFOB(c,r,d) * qxs(c,r,d)}
   3180           + IF[c in MARG, VST(c,r) * qst(c,r)];
   3181   !<
   3182       modified from HT 89 for use with AnalyseGE
   3183   >!
   3184    
   3185   Variable (orig_level=VXWREGION)(all,r,REG)
   3186       qxwreg(r) # volume of merchandise exports, by region #;
   3187   Equation E_qxwreg
   3188   # computes % change in quantity index of exports, by region #
   3189   (all,r,REG)
   3190       VXWREGION(r) * qxwreg(r) = sum{c,COMM, VXW(c,r) * qxw(c,r)};
   3191   !<
   3192       modified from HT 91 for use with AnalyseGE
   3193   >!
   3194    
   3195   Variable (orig_level=VXWCOMMOD)(all,c,COMM)
   3196       qxwcom(c) # volume of global merchandise exports by commodity #;
   3197   Equation E_qxwcom
   3198   # computes % change in quantity index of exports, by commodity #
   3199   (all,c,COMM)
   3200       VXWCOMMOD(c) * qxwcom(c) = sum{r,REG, VXW(c,r) * qxw(c,r)};
   3201   !<
   3202       modified from HT 93 for use with AnalyseGE
   3203   >!
   3204    
   3205   Variable (orig_level=VXWLD)
   3206       qxwwld # volume of world trade #;
   3207   Equation E_qxwwld
   3208   # computes % change in quantity index of global exports #
   3209       VXWLD * qxwwld = sum{r,REG, VXWREGION(r) * qxwreg(r)};
   3210   !<
   3211       modified from HT 95 for use with AnalyseGE
   3212   >!
   3213    
   3214   Variable (all,c,COMM)(all,d,REG)
   3215       qmw(c,d) # aggregate imports of c into region s, CIF weights #;
   3216   Equation E_qmw
   3217   # change in volume of imports of commodity c into d #
   3218   (all,c,COMM)(all,d,REG)
   3219       VMCIF(c,d) * qmw(c,d) = sum{s,REG, VCIF(c,s,d) * qxs(c,s,d)};
   3220   !<
   3221       modified from HT 90 for use with AnalyseGE
   3222   >!
   3223    
   3224   Variable (orig_level=VMWREGION)(all,r,REG)
   3225       qmwreg(r) # volume of merchandise imports, by region #;
   3226   Equation E_qmwreg
   3227   # computes % change in quantity index of imports, by region #
   3228   (all,s,REG)
   3229       VMWREGION(s) * qmwreg(s) = sum{c,COMM, VMCIF(c,s) * qmw(c,s)};
   3230   !<
   3231       modified from HT 92 for use with AnalyseGE
   3232   >!
   3233    
   3234   Variable (orig_level=VMWCOMMOD)(all,c,COMM)
   3235       qmwcom(c) # volume of global merchandise imports by commodity #;
   3236   Equation E_qmwcom
   3237   # computes % change in quantity index of imports, by commodity #
   3238   (all,c,COMM)
   3239       VMWCOMMOD(c) * qmwcom(c) = sum{s,REG, VMCIF(c,s) * qmw(c,s)};
   3240   !<
   3241       modified from HT 94 for use with AnalyseGE
   3242   >!
   3243    
   3244   Variable (all,c,COMM)
   3245       qow(c) # quantity index for world supply of good c #;
   3246   Equation E_qow
   3247   # change in index of world production of c #
   3248   (all,c,COMM)
   3249       VWOW(c) * qow(c) = sum{r,REG, VOW(c,r) * qc(c,r)};
   3250   !<
   3251       modified from HT 96 for use with AnalyseGE
   3252   >!
   3253    
   3254   Variable (orig_level=VWOU)(all,c,COMM)
   3255       qowu(c) # quantity index for world supply of good c at user prices #;
   3256   Equation E_qowu
   3257   # change in index of world production of c evaluated at user prices #
   3258   (all,c,COMM)
   3259       VWOU(c) * qowu(c)
   3260           = sum{s,REG, VPP(c,s) * qpa(c,s)
   3261           + VGP(c,s) * qga(c,s)
   3262           + VIP(c,s) * qia(c,s)
   3263           + sum{a,ACTS, VFP(c,a,s) * qfa(c,a,s)}};
   3264    
   3265   !<
   3266       B-5. Trade balance indices
   3267       --------------------------
   3268   >!
   3269    
   3270   Variable (change)(all,c,COMM)(all,r,REG)
   3271       del_tbalc(c,r) # change in trade balance by c and by r, $ US million #;
   3272   !<
   3273       A positive value indicates that the change in exports exceeds the change
   3274       in imports.
   3275   >!
   3276   Equation E_del_tbalc
   3277   # computes change in trade balance by commodity and by region #
   3278   (all,c,COMM)(all,r,REG)
   3279       del_tbalc(c,r)
   3280           = [VXW(c,r) / 100] * vxwfob(c,r) - [VMCIF(c,r) / 100] * vmwcif(c,r);
   3281    
   3282   Variable (change)(all,r,REG)
   3283       del_tbal(r) # change in trade balance X - M, $ US million #;
   3284   Equation E_del_tbal
   3285   # computes change in trade balance (X - M), by region #
   3286   (all,r,REG)
   3287       del_tbal(r)
   3288           = [VXWREGION(r) / 100] * vxwreg(r) - [VMWREGION(r) / 100] * vmwreg(r);
   3289    
   3290   !<
   3291       In order to maintain homogeneity in the presence of a fixed trade balance,
   3292       it is useful to have a nominal variable which this is measured against.
   3293       The next equation provides this, and we recommend users fix del_tbalry
   3294       instead of fixing del_tbal in future simulations.  The strategy is the same
   3295       one used above for taxes.
   3296   >!
   3297    
   3298   Variable
   3299       ywld # world income #;
   3300   Coefficient
   3301       INCOMEWLD # World income #;
   3302   Formula
   3303       INCOMEWLD = sum{r,REG, INCOME(r)};
   3304    
   3305   Equation E_ywld
   3306   # world income #
   3307       INCOMEWLD * ywld = sum{r,REG, INCOME(r) * y(r)};
   3308    
   3309   Variable (change)(all,r,REG)
   3310       del_tbalry(r) # change in trade bal. of r as a percentage of world income #;
   3311   Coefficient (all,r,REG)
   3312       TBAL(r) # trade balance for region r #;
   3313   Formula (all,r,REG)
   3314       TBAL(r) = VXWREGION(r) - VMWREGION(r);
   3315    
   3316   Equation E_del_tbalry
   3317   # change in trade balance of region r as a percentage of world income #
   3318   (all,r,REG)
   3319       INCOMEWLD * del_tbalry(r)
   3320           = VXWREGION(r) * vxwreg(r) - VMWREGION(r) * vmwreg(r)
   3321           - TBAL(r) * ywld;
   3322    
   3323   !<
   3324       B-6. Terms of trade (ToT) decomposition
   3325       ---------------------------------------
   3326       Computations for decomposition the terms-of-trade effect
   3327       Reference: Robert McDougall, SALTER No. 12 Working Paper
   3328   >!
   3329    
   3330   Coefficient (all,c,COMM)(all,r,REG)
   3331       SX_CR(c,r) # share of good c in total exports from r #;
   3332   Formula (all,m,MARG)(all,r,REG)
   3333       SX_CR(m,r)
   3334           = [sum{s,REG, VFOB(m,r,s)} + VST(m,r)]
   3335           / [sum{c,COMM, sum{s,REG, VFOB(c,r,s)}}
   3336               + sum{k,MARG, VST(k,r)}];
   3337   Formula (all,n,NMRG)(all,r,REG)
   3338       SX_CR(n,r)
   3339           = sum{s,REG, VFOB(n,r,s)}
   3340           / [sum{c,COMM, sum{s,REG, VFOB(c,r,s)}}
   3341               + sum{m,MARG, VST(m,r)}];
   3342    
   3343   Coefficient (all,m,MARG)(all,s,REG)
   3344       VTMCOMM(m,s) # margin usage of m in getting imports to region s #;
   3345   Formula (all,m,MARG)(all,s,REG)
   3346       VTMCOMM(m,s) = sum{c,COMM, sum{r,REG, VTMFSD(m,c,r,s)}};
   3347    
   3348   Coefficient (all,c,COMM)(all,s,REG)
   3349       VMWDCRALL(c,s) # imports of c into s, with direct allocation of margins #;
   3350   Formula (all,c,COMM)(all,s,REG)
   3351       VMWDCRALL(c,s) = sum{r,REG, VFOB(c,r,s)} + IF[c in MARG, VTMCOMM(c,s)];
   3352    
   3353   Coefficient (all,s,REG)
   3354       VMWDATOT(s) # total imports into s, calculated on direct allocation basis #;
   3355   Formula (all,s,REG)
   3356       VMWDATOT(s) = sum{c,COMM, VMWDCRALL(c,s)};
   3357    
   3358   Coefficient (all,c,COMM)(all,r,REG)
   3359       SM_CR(c,r)  # share of good c in total imports into r #;
   3360   Formula (all,c,COMM)(all,s,REG)
   3361       SM_CR(c,s) = VMWDCRALL(c,s) / VMWDATOT(s);
   3362    
   3363   Coefficient (all,c,COMM)(all,r,REG)(all,s,REG)
   3364       SM_CRS(c,r,s) # share of imports of good c into s from r at FOB prices #;
   3365   Formula (all,c,COMM)(all,r,REG)(all,s,REG)
   3366       SM_CRS(c,r,s) = VFOB(c,r,s) / VMWDCRALL(c,s);
   3367    
   3368   Coefficient (all,m,MARG)(all,r,REG)
   3369       SMT_CR(m,r) # share of transport cost in imports of margin commodity #;
   3370   Formula (all,m,MARG)(all,s,REG)
   3371       SMT_CR(m,s) = VTMCOMM(m,s) / VMWDCRALL(m,s);
   3372    
   3373   Variable (all,c,COMM)(all,r,REG)
   3374       pm_cr(c,r) # imports price index for good c and region r #;
   3375   Equation E_pm_cr
   3376   # price index for total imports of m in s -- margins commodities #
   3377   (all,c,COMM)(all,s,REG)
   3378       pm_cr(c,s)
   3379           = sum{r,REG, SM_CRS(c,r,s) * pfob(c,r,s)}
   3380           + IF[c in MARG, SMT_CR(c,s) * pt(c)];
   3381    
   3382   Variable (all,c,COMM)(all,r,REG)
   3383       c1_cr(c,r) # contribution of world price, px_c, to ToT #;
   3384   Equation E_c1_cr
   3385   # contribution of world export price index of good c to ToT for region r #
   3386   (all,c,COMM)(all,r,REG)
   3387       c1_cr(c,r) = [SX_CR(c,r) - SM_CR(c,r)] * [pxwcom(c) - pxwwld];
   3388    
   3389   Variable (all,c,COMM)(all,r,REG)
   3390       c2_cr(c,r) # contribution of regional export price, px_cr, to ToT #;
   3391   Equation E_c2_cr
   3392   # contribution of regional export price of good c for region r #
   3393   (all,c,COMM)(all,r,REG)
   3394       c2_cr(c,r) = SX_CR(c,r) * [pxw(c,r) - pxwcom(c)];
   3395    
   3396   Variable (all,c,COMM)(all,r,REG)
   3397       c3_cr(c,r) # contribution of regional import price, pm_cr, to ToT #;
   3398   Equation E_c3_cr
   3399   # contribution of imports price index of good c for region r #
   3400   (all,c,COMM)(all,r,REG)
   3401       c3_cr(c,r) = SM_CR(c,r) * [pm_cr(c,r) - pxwcom(c)];
   3402    
   3403   Variable (all,r,REG)
   3404       c1_r(r) # contribution of world prices for all goods to ToT #;
   3405   Equation E_c1_r
   3406   # contribution of world price indexes of all goods to ToT for r #
   3407   (all,r,REG)
   3408       c1_r(r) = sum{c,COMM, c1_cr(c,r)};
   3409    
   3410   Variable (all,r,REG)
   3411       c2_r(r) # contribution of regional export prices to ToT #;
   3412   Equation E_c2_r
   3413   # contribution of regional exports prices to ToT for r #
   3414   (all,r,REG)
   3415       c2_r(r) = sum{c,COMM, c2_cr(c,r)};
   3416    
   3417   Variable (all,r,REG)
   3418       c3_r(r) # contribution of regional import prices to ToT #;
   3419   Equation E_c3_r
   3420   # contribution of regional import prices to ToT for r #
   3421   (all,r,REG)
   3422       c3_r(r) = sum{c,COMM, c3_cr(c,r)};
   3423    
   3424   Variable (all,r,REG)
   3425       tot2(r) # trade terms for region r, computed from components #;
   3426   Equation E_tot2
   3427   # trade terms for region r, computed from components #
   3428   (all,r,REG)
   3429       tot2(r) = c1_r(r) + c2_r(r) - c3_r(r);
   3430    
   3431   !<
   3432       --------------------------------------------
   3433       11. Measurement and decomposition of welfare
   3434       --------------------------------------------
   3435    
   3436       11-0. Variables and coefficients
   3437       11-1. Government consumption shadow demand system
   3438       11-2. Private consumption shadow demand dystem
   3439       11-3. Regional Household shadow demand system
   3440       11-4. Equivalent Variation
   3441       11-5. Decomposition of welfare [Section 3.11 in JGEA paper]
   3442    
   3443       This section calculates equivalent variation "EV" and world equivalent
   3444       variation, "WEV", by determining the income "yev" that would be required
   3445       to achieve the current actual utility level "u" in a shadow demand system
   3446       in which prices are fixed.
   3447    
   3448       Section 11-2 calculates the utility elasticity of private consumption
   3449       expenditure, "ueprivev", within a shadow demand system for private
   3450       consumption, for use in section 11-3. Section 11-3 calculates private
   3451       consumption expenditure "ypev" for use in 11-2, and regional income "yev"
   3452       for use in 11-4, within a shadow demand system for the regional household.
   3453       Section 11-4 calculates "EV" and "WEV".
   3454    
   3455       Section 11-5 provides a decomposition welfare in the model as explained
   3456       in the GTAP model paper.
   3457   >!
   3458    
   3459   !<
   3460       11-0. Variables and coefficients
   3461       --------------------------------
   3462       only used in this Equivalent Variation section of the summary indices
   3463       appendix
   3464   >!
   3465    
   3466   Variable (all,r,REG)
   3467       uelasev(r) # elasticity of cost of utility wrt utility, for EV calc. #;
   3468   Variable (all,r,REG)
   3469       ueprivev(r) # utility elast. of private consn expenditure, for EV calc. #;
   3470   Variable (all,r,REG)
   3471       ugev(r) # per capita utility from gov't expend., for EV calc. #;
   3472   Variable (all,r,REG)
   3473       upev(r) # per capita utility from private expend., for EV calc. #;
   3474   Variable (all,r,REG)
   3475       qsaveev(r) # total quantity of saving demanded, for EV calc. #;
   3476   Variable (all,r,REG)
   3477       yev(r) # regional household income in region r, for EV calc. #;
   3478   Variable (all,r,REG)
   3479       ypev(r) # private consumption expenditure in region r, for EV calc. #;
   3480   Variable (all,r,REG)
   3481       ygev(r) # government consumption expenditure in region r, for EV calc. #;
   3482    
   3483   Coefficient (all,r,REG)
   3484       INCOMEEV(r) # regional income, for EV calc. #;
   3485   Formula (initial) (all,r,REG)
   3486       INCOMEEV(r) = INCOME(r);
   3487   Update (all,r,REG)
   3488       INCOMEEV(r) = yev(r);
   3489    
   3490   Coefficient (all,r,REG)
   3491       UTILPRIVEV(r) # utility from private consumption, for EV calcs #;
   3492   Formula (initial) (all,r,REG)
   3493       UTILPRIVEV(r) = UTILPRIV(r);
   3494   Update (all,r,REG)
   3495       UTILPRIVEV(r) = upev(r);
   3496    
   3497   Coefficient (all,r,REG)
   3498       UTILGOVEV(r) # utility from private consumption, for EV calcs #;
   3499   Formula (initial) (all,r,REG)
   3500       UTILGOVEV(r) = UTILGOV(r);
   3501   Update (all,r,REG)
   3502       UTILGOVEV(r) = ugev(r);
   3503    
   3504   Coefficient (all,r,REG)
   3505       UTILSAVEEV(r) # utility from private consumption, for EV calcs #;
   3506   Formula (initial) (all,r,REG)
   3507       UTILSAVEEV(r) = UTILSAVE(r);
   3508   Update (change) (all,r,REG)
   3509       UTILSAVEEV(r) = [[qsaveev(r) - pop(r)] / 100] * UTILSAVEEV(r);
   3510    
   3511   !<
   3512       11-1. Government consumption shadow demand system
   3513       -------------------------------------------------
   3514   >!
   3515    
   3516   Equation E_ugev
   3517   # utility from government consumption in r #
   3518   (all,r,REG)
   3519       ygev(r) - pop(r) = ugev(r);
   3520    
   3521   !<
   3522       11-2. Private consumption shadow demand system
   3523       ----------------------------------------------
   3524   >!
   3525    
   3526   Variable (all,c,COMM)(all,r,REG)
   3527       qpev(c,r)
   3528       # private hhld demand for commodity c in region r, for EV calc. #;
   3529    
   3530   Coefficient (all,c,COMM)(all,r,REG)
   3531       VPPEV(c,r)
   3532       # private hhld expend. on c in r valued at purch. prices, for EV calc. #;
   3533   Formula (initial) (all,c,COMM)(all,r,REG)
   3534       VPPEV(c,r) = VPP(c,r);
   3535   Update (all,c,COMM)(all,r,REG)
   3536       VPPEV(c,r) = qpev(c,r);
   3537    
   3538   Coefficient (all,r,REG)
   3539       VPPREGEV(r) # private consumption expenditure in region r, for EV calc. #;
   3540   Formula (all,r,REG)
   3541       VPPREGEV(r) = sum{c,COMM, VPPEV(c,r)};
   3542   !<
   3543       VPPREGEV should agree with PRIVEXPEV.
   3544   >!
   3545    
   3546   Coefficient (all,c,COMM)(all,r,REG)
   3547       CONSHREV(c,r)
   3548       # share of private hhld consn devoted to good c in r, for EV calc. #;
   3549   Formula (all,c,COMM)(all,r,REG)
   3550       CONSHREV(c,r) = VPPEV(c,r) / VPPREGEV(r);
   3551   Coefficient (all,c,COMM)(all,r,REG)
   3552       EYEV(c,r)
   3553       # expend. elast. of private hhld demand for c in r, for EV calc. #;
   3554   Formula (all,c,COMM)(all,r,REG)
   3555       EYEV(c,r)
   3556           = [1.0 / sum{n,COMM, CONSHREV(n,r) * INCPAR(n,r)}]
   3557           * [INCPAR(c,r) * [1.0 - ALPHA(c,r)]
   3558               + sum{n,COMM, CONSHREV(n,r) * INCPAR(n,r) * ALPHA(n,r)}]
   3559           + ALPHA(c,r)
   3560           - sum{n,COMM, CONSHREV(n,r) * ALPHA(n,r)};
   3561    
   3562   Equation E_qpev
   3563       # private hhld demands for composite commodities, for EV calc. #
   3564       (all,c,COMM)(all,r,REG)
   3565       qpev(c,r) - pop(r) = EYEV(c,r) * [ypev(r) - pop(r)];
   3566   !<
   3567       Prices are held constant for the EV calculation and so do not appear here.
   3568   >!
   3569    
   3570   Coefficient (all,r,REG)
   3571       UELASPRIVEV(r)
   3572       # elast. of cost wrt utility from private consn, for EV calc. #;
   3573   Formula (all,r,REG)
   3574       UELASPRIVEV(r) = sum{c,COMM, CONSHREV(c,r) * INCPAR(c,r)};
   3575    
   3576   Equation E_upev
   3577   # computation of utility from private consumption in r #
   3578   (all,r,REG)
   3579       ypev(r) - pop(r) = UELASPRIVEV(r) * upev(r);
   3580    
   3581   Coefficient (all,c,COMM)(all,r,REG)
   3582       XWCONSHREV(c,r)
   3583       # expansion-parameter-weighted consumption share, for EV calc. #;
   3584   Formula (all,c,COMM)(all,r,REG)
   3585       XWCONSHREV(c,r) = CONSHREV(c,r) * INCPAR(c,r) / UELASPRIVEV(r);
   3586    
   3587   Equation E_ueprivev
   3588       # elasticity of cost wrt utility from private consn, for EV calc. #
   3589       (all,r,REG)
   3590       ueprivev(r)
   3591           = sum{c,COMM, XWCONSHREV(c,r) * [qpev(c,r) - ypev(r)]};
   3592   !<
   3593       Prices are held constant for the EV calculation and so do not appear here.
   3594   >!
   3595    
   3596   !<
   3597    
   3598       11-3. Regional Household shadow demand system
   3599       ---------------------------------------------
   3600   >!
   3601    
   3602   Variable (all,r,REG)
   3603       ysaveev(r) # NET saving expenditure, for EV calc. #;
   3604    
   3605   Coefficient (all,r,REG)
   3606       PRIVEXPEV(r)
   3607       # private consumption expenditure in region r, for EV calc. #;
   3608   Formula (initial) (all,r,REG)
   3609       PRIVEXPEV(r) = PRIVEXP(r);
   3610   Update (all,r,REG)
   3611       PRIVEXPEV(r) = ypev(r);
   3612   !<
   3613       PRIVEXPEV should agree with VPPREGEV.
   3614   >!
   3615    
   3616   Coefficient (all,r,REG)
   3617       GOVEXPEV(r)
   3618       # government consumption expenditure in region r, for EV calc. #;
   3619   Formula (initial) (all,r,REG)
   3620       GOVEXPEV(r) = GOVEXP(r);
   3621   Update (all,r,REG)
   3622       GOVEXPEV(r) = ygev(r);
   3623    
   3624   Coefficient (all,r,REG)
   3625       SAVEEV(r)
   3626       # saving in region r, for EV calc. #;
   3627   Formula (initial) (all,r,REG)
   3628       SAVEEV(r) = SAVE(r);
   3629   Update (all,r,REG)
   3630       SAVEEV(r) = ysaveev(r);
   3631    
   3632   Coefficient (all,r,REG)
   3633       XSHRPRIVEV(r)
   3634       # private expenditure share in regional income, for EV calc. #;
   3635   Formula (all,r,REG)
   3636       XSHRPRIVEV(r) = PRIVEXPEV(r) / INCOMEEV(r);
   3637    
   3638   Coefficient (all,r,REG)
   3639       XSHRGOVEV(r)
   3640       # government expenditure share in regional income, for EV calc. #;
   3641   Formula (all,r,REG)
   3642       XSHRGOVEV(r) = GOVEXPEV(r) / INCOMEEV(r);
   3643    
   3644   Coefficient (all,r,REG)
   3645       XSHRSAVEEV(r) # saving share in regional income, for EV calc. #;
   3646   Formula (all,r,REG)
   3647       XSHRSAVEEV(r) = SAVEEV(r) / INCOMEEV(r);
   3648    
   3649   Variable (all,r,REG)
   3650       dpavev(r) # average distribution parameter shift, for EV calc. #;
   3651   Equation E_dpavev
   3652   # average distribution parameter shift, for EV calc. #
   3653       (all,r,REG)
   3654       dpavev(r)
   3655           = XSHRPRIVEV(r) * dppriv(r)
   3656           + XSHRGOVEV(r) * dpgov(r)
   3657           + XSHRSAVEEV(r) * dpsave(r);
   3658    
   3659   Equation E_uelasev
   3660       # elasticity of cost of utility wrt utility, for EV calc. #
   3661       (all,r,REG)
   3662       uelasev(r) = XSHRPRIV(r) * ueprivev(r) - dpavev(r);
   3663    
   3664   Equation E_ypev
   3665   # private consumption expenditure, for EV calc. #
   3666       (all,r,REG)
   3667       ypev(r) - yev(r) = -[ueprivev(r) - uelasev(r)] + dppriv(r);
   3668    
   3669   Equation E_ygev
   3670   # government consumption expenditure #
   3671   (all,r,REG)
   3672       ygev(r) - yev(r) = uelasev(r) + dpgov(r);
   3673    
   3674   Equation E_ysaveev
   3675   # saving #
   3676   (all,r,REG)
   3677       ysaveev(r) - yev(r) = uelasev(r) + dpsave(r);
   3678    
   3679   Equation E_qsaveev
   3680   # saving #
   3681   (all,r,REG)
   3682       qsaveev(r) = ysaveev(r);
   3683   !<
   3684       Note that because psave doesn't change, qsaveev moves with ysaveev.
   3685   >!
   3686    
   3687   Coefficient (all,r,REG)
   3688       UTILELASEV(r)
   3689       # elasticity of cost of utility wrt utility, for EV calc. #;
   3690   Formula (initial) (all,r,REG)
   3691       UTILELASEV(r) = UTILELAS(r);
   3692   Update (all,r,REG)
   3693       UTILELASEV(r) = uelasev(r);
   3694    
   3695   Equation E_yev
   3696   # equivalent income #
   3697   (all,r,REG)
   3698       u(r)
   3699           = au(r)
   3700           + DPARPRIV(r) * loge(UTILPRIVEV(r)) * dppriv(r)
   3701           + DPARGOV(r) * loge(UTILGOVEV(r)) * dpgov(r)
   3702           + DPARSAVE(r) * loge(UTILSAVEEV(r)) * dpsave(r)
   3703           + [1.0 / UTILELASEV(r)] * [yev(r) - pop(r)];
   3704    
   3705   !<
   3706       11-4. Equivalent Variation
   3707       --------------------------
   3708   >!
   3709    
   3710   Variable (change)(all,r,REG)
   3711       EV(r) # equivalent variation, $ US million #;
   3712   Equation E_EV
   3713   # regional EV #
   3714   (all,r,REG)
   3715       EV(r) = [INCOMEEV(r) / 100] * yev(r);
   3716    
   3717   Variable (change)
   3718       WEV # equivalent variation for the world #;
   3719   Equation E_WEV
   3720   # EV for the world #
   3721       WEV = sum{r,REG, EV(r)};
   3722    
   3723   !<
   3724       11-5. Welfare decomposition
   3725       ---------------------------
   3726       See GTAP Technical Paper No. 5 for derivation and interpretation.
   3727       See also "The Standard GTAP Model (Version 7)" paper.
   3728   >!
   3729    
   3730   !<
   3731       Declare new sets for Welfare decomposition and for use in DECOMP.TAB.
   3732       Supplementary sets for "toggles" in VIEWHAR.
   3733   >!
   3734   Set
   3735       DIR(domestic,imported);
   3736   Set
   3737       CTAX(pfacttax,prodtax,inputtax,contax,invtax,govtax,xtax,mtax);
   3738   Set
   3739       TECHTYPE(output,primfac,v_added,ininput,invest,transp,import);
   3740   Set
   3741       COLUMN(alloc_A1,ENDWB1,tech_C1,pop_D1,tot_E1,IS_F1,pref_G1);
   3742    
   3743   Coefficient (all,r,REG)
   3744       EVSCALFACT(r) # equivalent variation scaling factor #;
   3745   Formula (all,r,REG)
   3746       EVSCALFACT(r) = [UTILELASEV(r) / UTILELAS(r)] * [INCOMEEV(r) / INCOME(r)];
   3747    
   3748   Coefficient (all,m,MARG)(all,s,REG)
   3749       VTMD(m,s) # aggregate value of svce m in shipments to s #;
   3750   Formula (all,m,MARG)(all,s,REG)
   3751       VTMD(m,s) = sum{c,COMM, sum{r,REG, VTMFSD(m,c,r,s)}};
   3752    
   3753   Variable (linear,change)(all,r,REG)
   3754       EV_ALT(r) # regional EV computed in alternative way #;
   3755   Equation E_EV_ALT
   3756   # decomposition of Equivalent Variation #
   3757   (all,r,REG)
   3758       EV_ALT(r)
   3759           !< Preference shifts >!
   3760           = -[0.01 * UTILELASEV(r) * INCOMEEV(r)]
   3761           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3762               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3763               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)]
   3764           !< Scaling factor >!
   3765           + [0.01 * EVSCALFACT(r)]
   3766           !< Changes in allocative efficiency >!
   3767           * [sum{c,COMM, sum{a,ACTS, PTAX(c,a,r) * [qca(c,a,r) - pop(r)]}}
   3768               + sum{e,ENDW, sum{a,ACTS,
   3769                   INCTAX(e,a,r) * [qes(e,a,r) - pop(r)]}}
   3770               + sum{e,ENDW, sum{a,ACTS,
   3771                   ETAX(e,a,r) * [qfe(e,a,r) - pop(r)]}}
   3772               + sum{c,COMM, sum{a,ACTS,
   3773                   MFTAX(c,a,r) * [qfm(c,a,r) - pop(r)]}}
   3774               + sum{c,COMM, sum{a,ACTS,
   3775                   DFTAX(c,a,r) * [qfd(c,a,r) - pop(r)]}}
   3776               + sum{c,COMM, MPTAX(c,r) * [qpm(c,r) - pop(r)]}
   3777               + sum{c,COMM, DPTAX(c,r) * [qpd(c,r) - pop(r)]}
   3778               + sum{c,COMM, MGTAX(c,r) * [qgm(c,r) - pop(r)]}
   3779               + sum{c,COMM, DGTAX(c,r) * [qgd(c,r) - pop(r)]}
   3780               + sum{c,COMM, MITAX(c,r) * [qim(c,r) - pop(r)]}
   3781               + sum{c,COMM, DITAX(c,r) * [qid(c,r) - pop(r)]}
   3782               + sum{c,COMM, sum{d,REG, XTAXD(c,r,d) * [qxs(c,r,d) - pop(r)]}}
   3783               + sum{c,COMM, sum{s,REG, MTAX(c,s,r) * [qxs(c,s,r) - pop(r)]}}
   3784           !< Changes in endowments >!
   3785           + sum{e,ENDW, sum{a,ACTS, EVOS(e,a,r) * [qes(e,a,r) - pop(r)]}}
   3786               !< Depreciation >!
   3787           - VDEP(r) * [kb(r) - pop(r)]
   3788           !< Changes in technology >!
   3789           + sum{a,ACTS, VOS(a,r) * ao(a,r)}
   3790               + sum{a,ACTS, VVA(a,r) * ava(a,r)}
   3791               + sum{c,COMM, sum{a,ACTS, VFP(c,a,r) * aint(a,r)}}
   3792               + sum{a,ACTS, sum{e,ENDW, VFP(e,a,r) * afe(e,a,r)}}
   3793               + sum{a,ACTS, sum{c,COMM, VFP(c,a,r) * afa(c,a,r)}}
   3794               + sum{m,MARG, sum{c,COMM, sum{s,REG,
   3795                   VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   3796               + sum{c,COMM, sum{s,REG, VMSB(c,s,r) * ams(c,s,r)}}
   3797           !< Changes in terms of trade >!
   3798           + sum{c,COMM, sum{s,REG, VFOB(c,r,s) * pfob(c,r,s)}}
   3799               + sum{m,MARG, VST(m,r) * pds(m,r)}
   3800               + NETINV(r) * pinv(r)
   3801               - sum{c,COMM, sum{s,REG, VFOB(c,s,r) * pfob(c,s,r)}}
   3802               - sum{m,MARG, VTMD(m,r) * pt(m)}
   3803               - SAVE(r) * psave(r)]
   3804           !< Changes in population >!
   3805           + 0.01 * INCOMEEV(r) * pop(r);
   3806    
   3807   Variable (linear,change)
   3808       WEV_ALT # expression for WEV computed in alternative way #;
   3809   Equation E_WEV_ALT
   3810   # Equivalent Variation for the world #
   3811       WEV_ALT = sum{r,REG, EV_ALT(r)};
   3812    
   3813   Variable (linear,change) (all,r,REG)
   3814       CNTdpar(r) # contribution to EV of change in distribution parameters #;
   3815   Equation E_CNTdpar
   3816   # contribution to EV of change in distribution parameters #
   3817   (all,r,REG)
   3818       CNTdpar(r)
   3819           = -0.01 * UTILELASEV(r) * INCOMEEV(r)
   3820           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3821               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3822               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)];
   3823    
   3824   Variable (linear,change) (all,r,REG)
   3825       CNTpop(r) # contribution to EV in region r of change in population #;
   3826   Equation E_CNTpop
   3827   # contribution to EV in region r of change in population #
   3828   (all,r,REG)
   3829       CNTpop(r) = 0.01 * INCOMEEV(r) * pop(r);
   3830    
   3831   Variable (linear,change) (all,r,REG)
   3832       CNTqor(r) # contribution to EV in region r of output changes #;
   3833   Equation E_CNTqor
   3834   # contribution to EV in region r of output changes #
   3835   (all,r,REG)
   3836       CNTqor(r) = 0.01 * EVSCALFACT(r)
   3837                 * sum{c,COMM, sum{a,ACTS, PTAX(c,a,r) * [qca(c,a,r) - pop(r)]}};
   3838    
   3839   Variable (linear,change) (all,a,ACTS)(all,r,REG)
   3840       CNTqo(a,r)
   3841       # contribution to EV of changes in industry output of act. a in region r #;
   3842   Equation E_CNTqo
   3843   # contribution to EV of changes in industry output of act. a in region r #
   3844   (all,a,ACTS)(all,r,REG)
   3845       CNTqo(a,r) = [0.01 * EVSCALFACT(r)]
   3846                    * sum{c,COMM, PTAX(c,a,r) * [qca(c,a,r) - pop(r)]};
   3847    
   3848   Variable (linear,change) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3849       CNTqca(c,a,r)
   3850       # contribution to EV of changes in output c of act. a in region r #;
   3851   Equation E_CNTqca
   3852   # contribution to EV of changes in industry output of act. a in region r #
   3853   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3854       CNTqca(c,a,r) = [0.01 * EVSCALFACT(r)]
   3855                       * PTAX(c,a,r) * [qca(c,a,r) - pop(r)];
   3856    
   3857   Variable (linear,change) (all,e,ENDW)(all,r,REG)
   3858       CNTqe(e,r)
   3859       # contribution to EV of changes in supply of ENDW e in reg. r #;
   3860   Equation E_CNTqe
   3861   # contribution to EV of changes in supply of ENDW e in reg. r #
   3862   (all,e,ENDW)(all,r,REG)
   3863       CNTqe(e,r) = [0.01 * EVSCALFACT(r)]
   3864                  * sum{a,ACTS, [EVFB(e,a,r) - EVOS(e,a,r)]
   3865                                 * [qes(e,a,r) - pop(r)]};
   3866    
   3867   Variable (linear,change) (all,r,REG)
   3868       CNTqfer(r)
   3869       # contribution to EV of changes in use of all ENDW in r #;
   3870   Equation E_CNTqfer
   3871   # contribution to EV of changes in use of all ENDW in r #
   3872   (all,r,REG)
   3873       CNTqfer(r)
   3874           = [0.01 * EVSCALFACT(r)]
   3875           * sum{e,ENDW, sum{a,ACTS, ETAX(e,a,r) *  [qfe(e,a,r) - pop(r)]}};
   3876    
   3877   Variable (linear,change) (all,e,ENDW)(all,r,REG)
   3878       CNTqfeer(e,r)
   3879       # contribution to EV of changes in use of ENDW e in all firms in r #;
   3880   Equation E_CNTqfeer
   3881   # contribution to EV of changes in use of ENDW e in all firms in r #
   3882   (all,e,ENDW)(all,r,REG)
   3883       CNTqfeer(e,r)
   3884           = [0.01 * EVSCALFACT(r)]
   3885           * sum{a,ACTS, ETAX(e,a,r) *  [qfe(e,a,r) - pop(r)]};
   3886    
   3887   Variable (linear,change) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   3888       CNTqfe(e,a,r)
   3889       # contribution to EV of changes in use of ENDW e in a in r #;
   3890   Equation E_CNTqfe
   3891   # contribution to EV of changes in use of ENDW e in a in r #
   3892   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   3893       CNTqfe(e,a,r)
   3894           = [0.01 * EVSCALFACT(r)] * ETAX(e,a,r) * [qfe(e,a,r) - pop(r)];
   3895    
   3896   Variable (linear,change) (all,r,REG)(all,d,DIR)
   3897       CNTqfr(r,d)
   3898       # cont. to EV of changes in use of dom. and imp. intermediates in r #;
   3899   Equation E_CNTqfr
   3900   # cont. to EV of changes in use of dom. and imp. intermediates in r #
   3901   (all,r,REG)(all,d,DIR)
   3902       CNTqfr(r,d)
   3903           = IF[d="domestic", [0.01 * EVSCALFACT(r)]
   3904               * sum{c,COMM, sum{a,ACTS, DFTAX(c,a,r) *  [qfd(c,a,r) - pop(r)]}}]
   3905           + IF[d="imported", [0.01 * EVSCALFACT(r)]
   3906               * sum{c,COMM, sum{a,ACTS, MFTAX(c,a,r) *  [qfm(c,a,r) - pop(r)]}}];
   3907    
   3908   Variable (linear,change) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3909       CNTqfm(c,a,r)
   3910       # cont. to EV of changes in use of imported intermediates by a in r #;
   3911   Equation E_CNTqfm
   3912   # cont. to EV of changes in use of imported intermediates in r #
   3913   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3914       CNTqfm(c,a,r)
   3915           = [0.01 * EVSCALFACT(r)] * MFTAX(c,a,r) * [qfm(c,a,r) - pop(r)];
   3916    
   3917   Variable (linear,change) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3918       CNTqfd(c,a,r)
   3919       # cont. to EV of changes in use of domestic intermediates by a in r #;
   3920   Equation E_CNTqfd
   3921   # cont. to EV of changes in use of domestic intermediates by a in r #
   3922   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   3923       CNTqfd(c,a,r)
   3924           = [0.01 * EVSCALFACT(r)] * DFTAX(c,a,r) * [qfd(c,a,r) - pop(r)];
   3925    
   3926   Variable (linear,change) (all,c,COMM)(all,r,REG)
   3927       CNTqpm(c,r)
   3928       # contribution to EV of changes in consumption of imported good c in r #;
   3929   Equation E_CNTqpm
   3930   # contribution to EV of changes in consumption of imported good c in r #
   3931   (all,c,COMM)(all,r,REG)
   3932       CNTqpm(c,r) = [0.01 * EVSCALFACT(r)] * MPTAX(c,r) * [qpm(c,r) - pop(r)];
   3933    
   3934   Variable (linear,change) (all,c,COMM)(all,r,REG)
   3935       CNTqpd(c,r)
   3936       # contribution to EV of changes in consumption of domestic good c in r #;
   3937   Equation E_CNTqpd
   3938   # contribution to EV of changes in consumption of domestic good c in r #
   3939   (all,c,COMM)(all,r,REG)
   3940       CNTqpd(c,r) = [0.01 * EVSCALFACT(r)] * DPTAX(c,r) * [qpd(c,r) - pop(r)];
   3941    
   3942   Variable (linear,change) (all,r,REG)(all,d,DIR)
   3943       CNTqpr(r,d)
   3944       # cont. to EV of changes in consumption of dom. and imp. goods in r #;
   3945   Equation E_CNTqpr
   3946   # cont. to EV of changes in consumption of dom. and imp. goods in r #
   3947   (all,r,REG)(all,d,DIR)
   3948       CNTqpr(r,d)
   3949           = IF[d="domestic", [0.01 * EVSCALFACT(r)]
   3950                              * sum{c,COMM, DPTAX(c,r) *  [qpd(c,r) - pop(r)]}]
   3951           + IF[d="imported", [0.01 * EVSCALFACT(r)]
   3952                              * sum{c,COMM, MPTAX(c,r) * [qpm(c,r) - pop(r)]}];
   3953    
   3954   Variable (linear,change) (all,r,REG)(all,d,DIR)
   3955       CNTqia(r,d)
   3956       # contribution to EV of changes in dom. and imp. investment goods in r #;
   3957   Equation E_CNTqia
   3958   # contribution to EV of changes in dom. and imp. investment goods in r #
   3959   (all,r,REG)(all,d,DIR)
   3960       CNTqia(r,d)
   3961           = IF[d="domestic", sum{c,COMM,
   3962                   DITAX(c,r) * [0.01 * EVSCALFACT(r)] * [qid(c,r) - pop(r)]}]
   3963           + IF[d="imported", sum{c,COMM,
   3964                   MITAX(c,r) * [0.01 * EVSCALFACT(r)] * [qim(c,r) - pop(r)]}];
   3965    
   3966   Variable (linear,change) (all,c,COMM)(all,r,REG)
   3967       CNTqim(c,r)
   3968       # contribution to EV of changes in imported investment good c in r #;
   3969   Equation E_CNTqim
   3970   # contribution to EV of changes in imported investment good c in r #
   3971   (all,c,COMM)(all,r,REG)
   3972       CNTqim(c,r) = MITAX(c,r) * [0.01 * EVSCALFACT(r)] * [qim(c,r) - pop(r)];
   3973    
   3974   Variable (linear,change) (all,c,COMM)(all,r,REG)
   3975       CNTqid(c,r)
   3976       # contribution. to EV of changes in domestic investment good c in r #;
   3977   Equation E_CNTqid
   3978   # contribution. to EV of changes in domestic investment good c in r #
   3979   (all,c,COMM)(all,r,REG)
   3980       CNTqid(c,r) = DITAX(c,r) * [0.01 * EVSCALFACT(r)] * [qid(c,r) - pop(r)];
   3981    
   3982   Variable (linear,change) (all,r,REG)(all,d,DIR)
   3983       CNTqgr(r,d)
   3984       # cont. to EV of changes in gov't consumption of dom. and imp goods in r #;
   3985   Equation E_CNTqgr
   3986   # cont. to EV of changes in gov't consumption of dom. and imp goods in r #
   3987   (all,r,REG)(all,d,DIR)
   3988       CNTqgr(r,d)
   3989           = IF[d="domestic", [0.01 * EVSCALFACT(r)]
   3990                               * sum{c,COMM, DGTAX(c,r) * [qgd(c,r) - pop(r)]}]
   3991           + IF[d="imported", [0.01 * EVSCALFACT(r)]
   3992                               * sum{c,COMM, MGTAX(c,r) * [qgm(c,r) - pop(r)]}];
   3993    
   3994   Variable (linear,change) (all,c,COMM)(all,r,REG)
   3995       CNTqgm(c,r)
   3996       # contribution to EV of changes in gov't consumption of import c in r #;
   3997   Equation E_CNTqgm
   3998   # contribution to EV of changes in gov't consumption of import c in r #
   3999   (all,c,COMM)(all,r,REG)
   4000       CNTqgm(c,r) =  [0.01 * EVSCALFACT(r)] * MGTAX(c,r) * [qgm(c,r) - pop(r)];
   4001    
   4002   Variable (linear,change) (all,c,COMM)(all,r,REG)
   4003       CNTqgd(c,r)
   4004       # contribution to EV of changes in gov't consumption of domestic c in r #;
   4005   Equation E_CNTqgd
   4006   # contribution to EV of changes in gov't consumption of domestic c in r #
   4007   (all,c,COMM)(all,r,REG)
   4008       CNTqgd(c,r) = [0.01 * EVSCALFACT(r)] * DGTAX(c,r) * [qgd(c,r) - pop(r)];
   4009    
   4010   Variable (linear,change) (all,r,REG)
   4011       CNTqxsr(r)
   4012       # cont. to EV of changes in exports of all goods from SRCE r to all DEST #;
   4013   Equation E_CNTqxsr
   4014   # cont. to EV of changes in exports of all goods from SRCE r to all DEST #
   4015   (all,r,REG)
   4016       CNTqxsr(r) = [0.01 * EVSCALFACT(r)]
   4017                  * sum{c,COMM, sum{s,REG, XTAXD(c,r,s) * [qxs(c,r,s) - pop(r)]}};
   4018    
   4019   Variable (linear,change) (all,c,COMM)(all,s,REG)(all,d,REG)
   4020       CNTqxs(c,s,d)
   4021       # contribution to EV of changes in exports of c from SRCE s to DEST d #;
   4022   Equation E_CNTqxs
   4023   # contribution to EV of changes in exports of c from SRCE s to DEST d #
   4024   (all,c,COMM)(all,s,REG)(all,d,REG)
   4025       CNTqxs(c,s,d) = [0.01 * EVSCALFACT(s)]
   4026                      * XTAXD(c,s,d) *  [qxs(c,s,d) - pop(s)];
   4027    
   4028   Variable (linear,change) (all,r,REG)
   4029       CNTqmsr(r)
   4030       # cont. to EV of changes in imports of all goods from all SRCE to DEST r #;
   4031   Equation E_CNTqmsr
   4032   # cont. to EV of changes in imports of all goods from all SRCE to DEST d #
   4033   (all,d,REG)
   4034       CNTqmsr(d) = [0.01 * EVSCALFACT(d)]
   4035                  * sum{c,COMM, sum{s,REG, MTAX(c,s,d) *  [qxs(c,s,d) - pop(d)]}};
   4036    
   4037   Variable (linear,change) (all,c,COMM)(all,s,REG)(all,d,REG)
   4038       CNTqms(c,s,d)
   4039       # contribution to EV of changes in imports of c from SRCE s to DEST d #;
   4040   Equation E_CNTqms
   4041   # contribution to EV of changes in imports of c from SRCE s to DEST d #
   4042   (all,c,COMM)(all,s,REG)(all,d,REG)
   4043       CNTqms(c,s,d) = [0.01 * EVSCALFACT(d)]
   4044                     * MTAX(c,s,d) * [qxs(c,s,d) - pop(d)];
   4045    
   4046   Variable (linear,change) (all,r,REG)(all,t,CTAX)
   4047       CNTalleffr(r,t) # total contribution to regional EV of allocative effects #;
   4048   Equation E_CNTalleffr
   4049   # total contribution to regional EV of allocative effects #
   4050   (all,r,REG)(all,t,CTAX)
   4051       CNTalleffr(r,t)
   4052           = [0.01 * EVSCALFACT(r)]
   4053           * [ IF[t="prodtax", sum{c,COMM, sum{a,ACTS,
   4054                                   PTAX(c,a,r) * [qca(c,a,r) - pop(r)]}}
   4055                             + sum{e,ENDW, sum{a,ACTS,
   4056                                   INCTAX(e,a,r) * [qes(e,a,r) - pop(r)]}}]
   4057             + IF[t="pfacttax",sum{e,ENDW, sum{a,ACTS,
   4058                                   ETAX(e,a,r) * [qfe(e,a,r) - pop(r)]}}]
   4059             + IF[t="inputtax",sum{c,COMM, sum{a,ACTS,
   4060                                   MFTAX(c,a,r) * [qfm(c,a,r) - pop(r)]}}
   4061                               + sum{c,COMM, sum{a,ACTS,
   4062                                   DFTAX(c,a,r) * [qfd(c,a,r) - pop(r)]}}]
   4063             + IF[t="contax", sum{c,COMM, MPTAX(c,r) * [qpm(c,r) - pop(r)]}
   4064                            + sum{c,COMM, DPTAX(c,r) * [qpd(c,r) - pop(r)]}]
   4065             + IF[t="govtax", sum{c,COMM, MGTAX(c,r) * [qgm(c,r) - pop(r)]}
   4066                            + sum{c,COMM, DGTAX(c,r) * [qgd(c,r) - pop(r)]}]
   4067             + IF[t="invtax", sum{c,COMM, MITAX(c,r) * [qim(c,r) - pop(r)]}
   4068                            + sum{c,COMM, DITAX(c,r) * [qid(c,r) - pop(r)]}]
   4069             + IF[t="xtax",   sum{c,COMM, sum{s,REG,
   4070                                  XTAXD(c,r,s) * [qxs(c,r,s) - pop(r)]}}]
   4071             + IF[t="mtax", sum{c,COMM, sum{s,REG,
   4072                                  MTAX(c,s,r) * [qxs(c,s,r) - pop(r)]}}]];
   4073    
   4074   Variable (linear,change) (all,c,COMM)(all,r,REG)
   4075       CNTalleffcr(c,r)
   4076       # total contribution to regional EV of allocative effects #;
   4077   Equation E_CNTalleffcr
   4078   # total contribution to regional EV of allocative effects #
   4079   (all,c,COMM)(all,r,REG)
   4080       CNTalleffcr(c,r)
   4081           = [0.01 * EVSCALFACT(r)]*
   4082           [ sum{a,ACTS, MFTAX(c,a,r) * [qfm(c,a,r) - pop(r)]}
   4083           + sum{a,ACTS, DFTAX(c,a,r) * [qfd(c,a,r) - pop(r)]}
   4084           + MPTAX(c,r) * [qpm(c,r) - pop(r)]
   4085           + DPTAX(c,r) * [qpd(c,r) - pop(r)]
   4086           + MGTAX(c,r) * [qgm(c,r) - pop(r)]
   4087           + DGTAX(c,r) * [qgd(c,r) - pop(r)]
   4088           + MITAX(c,r) * [qim(c,r) - pop(r)]
   4089           + DITAX(c,r) * [qid(c,r) - pop(r)]
   4090           + sum{s,REG, XTAXD(c,r,s) * [qxs(c,r,s) - pop(r)]}
   4091           + sum{s,REG, MTAX(c,s,r) * [qxs(c,s,r) - pop(r)]} ] ;
   4092    
   4093   Variable (linear,change) (all,r,REG)
   4094       CNTtotr(r)
   4095       # contribution to regional EV of changes in its terms of trade #;
   4096   Equation E_CNTtotr
   4097   # contribution to regional EV of changes in its terms of trade #
   4098   (all,r,REG)
   4099       CNTtotr(r)
   4100           = [0.01 * EVSCALFACT(r)]
   4101           * [sum{c,COMM, sum{s,REG, VFOB(c,r,s) * [pfob(c,r,s) - pxwwld]}}
   4102               + sum{m,MARG, VST(m,r) * [pds(m,r) - pxwwld]}
   4103               - sum{c,COMM, sum{s,REG, VFOB(c,s,r) * [pfob(c,s,r) - pxwwld]}}
   4104               - sum{m,MARG, VTMD(m,r) * [pt(m) - pxwwld]}];
   4105    
   4106   Variable (linear,change) (all,r,REG)
   4107       CNTpinv(r) # contribution to regional EV of changes in investment price #;
   4108   Equation E_CNTpinv
   4109   # contribution to regional EV of changes in investment price index #
   4110   (all,r,REG)
   4111       CNTpinv(r)
   4112           = [0.01 * EVSCALFACT(r)]
   4113           * [NETINV(r) * [pinv(r) - pxwwld] - SAVE(r) * [psave(r) - pxwwld]];
   4114    
   4115   Variable (linear,change) (all,r,REG)
   4116       CNTendwr(r) # contribution to regional EV of changes in all ENDW #;
   4117   Equation E_CNTendwr
   4118   # contribution to regional EV of changes in all ENDW #
   4119   (all,r,REG)
   4120       CNTendwr(r)
   4121           = [0.01 * EVSCALFACT(r)]
   4122           * [sum{e,ENDW, sum{a,ACTS, EVOS(e,a,r) * [qes(e,a,r) - pop(r)]}}
   4123               - VDEP(r) * [kb(r) - pop(r)]];
   4124    
   4125   Variable (linear,change) (all,e,ENDW)(all,r,REG)
   4126       CNTendw(e,r) # contribution to regional EV of changes in ENDW e in r #;
   4127   Equation E_CNTendw
   4128   # contribution to regional EV of changes in ENDW e in r #
   4129   (all,e,ENDW)(all,r,REG)
   4130       CNTendw(e,r) = [0.01 * EVSCALFACT(r)] *
   4131                      sum{a,ACTS, [EVOS(e,a,r) * [qes(e,a,r) - pop(r)]]};
   4132    
   4133   Variable (linear,change) (all,r,REG)(all,t,TECHTYPE)
   4134       CNTtechr(t,r) # contribution to regional EV of all technical change #;
   4135   Equation E_CNTtechr
   4136   # contribution to regional EV of all technical change #
   4137   (all,t,TECHTYPE)(all,r,REG)
   4138       CNTtechr(t,r)
   4139           = [0.01 * EVSCALFACT(r)]
   4140           * [ IF[t="output",  sum{a,ACTS, VOS(a,r) * ao(a,r)}]
   4141             + IF[t="ininput", sum{a,ACTS, sum{c,COMM,
   4142                                   [VMFP(c,a,r) + VDFP(c,a,r)] * afa(c,a,r)}}
   4143                               + sum{c,COMM, sum{a,ACTS,
   4144                                    VFP(c,a,r) * aint(a,r)}}]
   4145             + IF[t="primfac", sum{a,ACTS,
   4146                               sum{e,ENDW, VFP(e,a,r) * afe(e,a,r)}}]
   4147             + IF[t="v_added", sum{a,ACTS, VVA(a,r) * ava(a,r)}]
   4148             + IF[t="transp",  sum{m,MARG, sum{c,COMM, sum{s,REG,
   4149                               VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   4150             + IF[t="import",  sum{c,COMM,
   4151                               sum{s,REG, VMSB(c,s,r) * ams(c,s,r)}}]]];
   4152    
   4153   Variable (linear,change) (all,a,ACTS)(all,r,REG)
   4154       CNTtech_ao(a,r)
   4155       # cont. to regional EV of output augmenting tech change in a #;
   4156   Equation E_CNTtech_ao
   4157   # cont. to regional EV of output augmenting tech change in a #
   4158   (all,a,ACTS)(all,r,REG)
   4159       CNTtech_ao(a,r) = [0.01 * EVSCALFACT(r)] * VOS(a,r) * ao(a,r);
   4160    
   4161   Variable (linear,change) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4162       CNTtech_afe(e,a,r)
   4163       # cont. to EV of primary factor e augmenting tech change in a #;
   4164   Equation E_CNTtech_afe
   4165   # cont. to EV of primary factor e augmenting tech change in a #
   4166   (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4167       CNTtech_afe(e,a,r) = [0.01 * EVSCALFACT(r)] * VFP(e,a,r) * afe(e,a,r);
   4168    
   4169   Variable (linear,change) (all,a,ACTS)(all,r,REG)
   4170       CNTtech_ava(a,r)
   4171       # cont. to EV of value added augmenting tech change in act. a #;
   4172   Equation E_CNTtech_ava
   4173   # cont. to EV of value added augmenting tech change in act. a #
   4174   (all,a,ACTS)(all,r,REG)
   4175       CNTtech_ava(a,r) = [0.01 * EVSCALFACT(r)] * VVA(a,r) * ava(a,r);
   4176    
   4177   Variable (linear,change) (all,a,ACTS)(all,r,REG)
   4178       CNTtech_aint(a,r)
   4179       # cont. to EV of composite c input augmenting tech change in act. a #;
   4180   Equation E_CNTtech_aint
   4181   # cont. to EV of composite c input augmenting tech change in act. a #
   4182   (all,a,ACTS)(all,r,REG)
   4183       CNTtech_aint(a,r)
   4184           = [0.01 * EVSCALFACT(r)]
   4185           * sum{c,COMM, [VMFP(c,a,r) + VDFP(c,a,r)] * aint(a,r)};
   4186    
   4187   Variable (linear,change) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4188       CNTtech_af(c,a,r)
   4189       # cont. to EV of composite c input augmenting tech change in act. a #;
   4190   Equation E_CNTtech_af
   4191   # cont. to EV of composite c input augmenting tech change in act. a #
   4192   (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4193       CNTtech_af(c,a,r)
   4194           = [0.01 * EVSCALFACT(r)] * [VMFP(c,a,r) + VDFP(c,a,r)] * afa(c,a,r);
   4195    
   4196   Variable (linear,change)(all,m,MARG)(all,c,COMM)(all,r,REG)(all,s,REG)
   4197       CNTtech_atmfsd(m,c,r,s)
   4198       # cont. to EV of tech change in transportation efficiency #;
   4199   Equation E_CNTtech_atmfsd
   4200   # cont. to EV of tech change in transportation efficiency #
   4201   (all,m,MARG)(all,c,COMM)(all,r,REG)(all,s,REG)
   4202       CNTtech_atmfsd(m,c,r,s)
   4203           = [0.01 * EVSCALFACT(s)] * VTMFSD(m,c,r,s) * atmfsd(m,c,r,s);
   4204    
   4205   Variable (linear,change) (all,c,COMM)(all,r,REG)(all,s,REG)
   4206       CNTtech_ams(c,r,s)
   4207       # cont. to EV of bilateral import augmenting tech change for COMM c #;
   4208   Equation E_CNTtech_ams
   4209   # cont. to EV of bilateral import augmenting tech change for COMM c #
   4210   (all,c,COMM)(all,r,REG)(all,s,REG)
   4211       CNTtech_ams(c,r,s) = [0.01 * EVSCALFACT(r)] * VMSB(c,r,s) * ams(c,r,s);
   4212    
   4213   Variable (linear,change) (all,r,REG)
   4214       CNTkb(r)
   4215       # cont. to EV of changes to beg. period capital stock and depreciation #;
   4216   Equation E_CNTkb
   4217   # cont. to EV of changes to beg. period capital stock and depreciation #
   4218   (all,r,REG)
   4219       CNTkb(r) = - [0.01 * EVSCALFACT(r)] * VDEP(r) * [kb(r) - pop(r)];
   4220    
   4221   !<
   4222       ===========================
   4223       END OF GTAP model equations
   4224       ===========================
   4225   >!
   4226    
   4227   !<
   4228       ================================================
   4229       Welfare summary and post-simulation calculations
   4230       ================================================
   4231   >!
   4232    
   4233   !<
   4234       --------------------------
   4235       C. Welfare summary modules
   4236       --------------------------
   4237       C-A:  EV decomposition: Summary
   4238       C-A1: Allocative efficiency effect: Commodity summary
   4239       C-A2: Allocative efficiency effect: Tax type summary
   4240       C-AX: Decomposition of allocative effect, by tax type and commodity
   4241       C-B1: Endowment effect: Gross of depreciation
   4242       C-B2: Endowment effect: Depreciation
   4243       C-C1: Technical change effect
   4244       C-D1: Population effect
   4245       C-E1: Terms of trade (ToT) effect
   4246       C-F1: I-S Effect: Explanatory factors
   4247   >!
   4248    
   4249   !<
   4250       Preliminaries: Assign initial values
   4251       ------------------------------------
   4252   >!
   4253    
   4254   Zerodivide (nonzero_by_zero) default 0;
   4255   Zerodivide (zero_by_zero) default 0;
   4256    
   4257   Coefficient (parameter) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4258       BEVFP(e,a,r) # producer expenditure on c by act. a #;
   4259   Formula (initial) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4260       BEVFP(e,a,r) = EVFP(e,a,r);
   4261    
   4262   Coefficient (parameter) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4263       BVMFP(c,a,r) # purchases of imported c r for use in a in region r #;
   4264   Formula (initial) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4265       BVMFP(c,a,r) = VMFP(c,a,r);
   4266    
   4267   Coefficient (parameter) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4268       BVDFP(c,a,r) # purchases of domestic c r for use in a in region r #;
   4269   Formula (initial) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4270       BVDFP(c,a,r) = VDFP(c,a,r);
   4271    
   4272   Coefficient (parameter) (all,d,ACTS)(all,r,REG)
   4273       BVOS(d,r) # value of commodity c output in region r #;
   4274   Formula (initial)(all,a,ACTS)(all,r,REG)
   4275       BVOS(a,r)
   4276           = sum{e,ENDW, BEVFP(e,a,r)}
   4277           + sum{c,COMM, BVMFP(c,a,r) + BVDFP(c,a,r)};
   4278    
   4279   Coefficient (parameter) (all,c,COMM)(all,r,REG)(all,s,REG)
   4280       BVXSB(c,r,s)
   4281       # exports of c from r to s at basic prices (tradeables only) #;
   4282   Formula (initial) (all,c,COMM)(all,r,REG)(all,s,REG)
   4283       BVXSB(c,r,s) = VXSB(c,r,s);
   4284    
   4285   Coefficient (parameter)(all,c,COMM)(all,r,REG)
   4286       BVDPB(c,r) # private household expenditure on domestic c in r #;
   4287   Formula (initial) (all,c,COMM)(all,r,REG)
   4288       BVDPB(c,r) = VDPB(c,r);
   4289    
   4290   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4291       BVDGB(c,r) # government household expenditure on domestic c in r #;
   4292   Formula (initial) (all,c,COMM)(all,r,REG)
   4293       BVDGB(c,r) = VDGB(c,r);
   4294    
   4295   Coefficient (parameter) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4296       BVDFB(c,a,r) # purchases of domestic c for use in a in region r #;
   4297   Formula (initial) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4298       BVDFB(c,a,r) = VDFB(c,a,r) ;
   4299    
   4300   Coefficient (parameter) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4301       BEVFB(e,a,r) # producer expenditure on c by a in r at basic prices #;
   4302   Formula (initial)  (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4303       BEVFB(e,a,r) = EVFB(e,a,r);
   4304    
   4305   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4306       BVDB(c,r) # domestic sales of c in r at basic prices (tradeables only) #;
   4307   Formula (initial) (all,c,COMM)(all,r,REG)
   4308       BVDB(c,r) =  VDB(c,r);
   4309    
   4310   Coefficient (parameter) (all,m,MARG)(all,r,REG)
   4311       BVST(m,r)
   4312       # exports of m from r for int'l transp. at basic prices (tradeables only) #;
   4313   Formula (initial) (all,m,MARG)(all,r,REG)
   4314       BVST(m,r) =  VST(m,r);
   4315    
   4316   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4317       BVCB(c,r) # value of commodity c output in region r at basic prices #;
   4318   Formula (initial) (all,c,COMM)(all,r,REG)
   4319       BVCB(c,r) = VCB(c,r);
   4320   Formula (initial) (all,c,COMM)(all,r,REG)
   4321       BVCB(c,r) = BVDB(c,r) + sum{s,REG, BVXSB(c,r,s)}
   4322                 + IF[c in MARG, BVST(c,r)];
   4323    
   4324   Coefficient (parameter) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4325       BVEB(e,a,r) # value of endowment e in region r at basic prices #;
   4326   Formula (initial) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4327       BVEB(e,a,r) = EVFB(e,a,r);
   4328    
   4329   Coefficient (parameter) (all,a,ACTS)(all,r,REG)
   4330       BMAKEACT(a,r) # value of total output of firm a at initial basic prices #;
   4331   Formula (initial) (all,a,ACTS)(all,r,REG)
   4332       BMAKEACT(a,r) = MAKEBACT(a,r);
   4333    
   4334   Coefficient (parameter)  (all,a,ACTS)(all,r,REG)
   4335       BOUTAX(a,r) # power of activity output tax, base #;
   4336   Formula (initial)  (all,a,ACTS)(all,r,REG)
   4337       BOUTAX(a,r) = [BMAKEACT(a,r) - BVOS(a,r)] / BMAKEACT(a,r) * 100;
   4338    
   4339   Coefficient (parameter) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4340       BEVOS(e,a,r) # initial endowment supply #;
   4341   Formula (initial) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4342       BEVOS(e,a,r) = EVOS(e,a,r);
   4343    
   4344   Coefficient (parameter)(all,e,ENDW)(all,r,REG)
   4345       BINCTAX(e,r) # initial income tax #;
   4346   Formula (initial)  (all,e,ENDW)(all,r,REG)
   4347       BINCTAX(e,r) = sum{a,ACTS,
   4348                      [BVEB(e,a,r) - BEVOS(e,a,r)] / BVEB(e,a,r) * 100};
   4349    
   4350   Coefficient (parameter) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4351       BVMFB(c,a,r) # purchases of imports c for use in act. a in region r #;
   4352   Formula (initial) (all,c,COMM)(all,a,ACTS)(all,r,REG)
   4353       BVMFB(c,a,r) = VMFB(c,a,r);
   4354    
   4355   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4356       BVMPB(c,r) # private household expenditure on c in r #;
   4357   Formula (initial) (all,c,COMM)(all,r,REG)
   4358       BVMPB(c,r) = VMPB(c,r);
   4359    
   4360   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4361       BVMPP(c,r) # private household expenditure on imported c #;
   4362   Formula (initial) (all,c,COMM)(all,r,REG)
   4363       BVMPP(c,r) = VMPP(c,r);
   4364    
   4365   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4366       BVDPP(c,r) # private household expenditure on domestic c in r #;
   4367   Formula (initial) (all,c,COMM)(all,r,REG)
   4368       BVDPP(c,r) = VDPP(c,r);
   4369    
   4370   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4371       BVMGB(c,r) # gov't household expenditure on c in r #;
   4372   Formula (initial) (all,c,COMM)(all,r,REG)
   4373       BVMGB(c,r) = VMGB(c,r);
   4374    
   4375   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4376       BVMGP(c,r) # government household expenditure on imported c #;
   4377   Formula (initial) (all,c,COMM)(all,r,REG)
   4378       BVMGP(c,r) = VMGP(c,r);
   4379    
   4380   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4381       BVDGP(c,r) # government household expenditure on domestic c in r #;
   4382   Formula (initial) (all,c,COMM)(all,r,REG)
   4383       BVDGP(c,r) = VDGP(c,r);
   4384    
   4385   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4386       BVMIB(c,r) # investment expenditure on c in r #;
   4387   Formula (initial) (all,c,COMM)(all,r,REG)
   4388       BVMIB(c,r) = VMIB(c,r);
   4389    
   4390   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4391       BVMIP(c,r) # investment expenditure on imported c #;
   4392   Formula (initial) (all,c,COMM)(all,r,REG)
   4393       BVMIP(c,r) = VMIP(c,r);
   4394    
   4395   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4396       BVDIP(c,r) # investment expenditure on domestic c in r #;
   4397   Formula (initial) (all,c,COMM)(all,r,REG)
   4398       BVDIP(c,r) = VDIP(c,r);
   4399    
   4400   Coefficient (parameter) (all,c,COMM)(all,r,REG)
   4401       BVDIB(c,r) # investment expenditure on domestic c in r #;
   4402   Formula (initial) (all,c,COMM)(all,r,REG)
   4403       BVDIB(c,r) = VDIB(c,r);
   4404    
   4405   Coefficient (parameter) (all,c,COMM)(all,s,REG)(all,d,REG)
   4406       BVMSB(c,s,d) # imports of c from r to s at domestic basic prices #;
   4407   Formula (initial) (all,c,COMM)(all,s,REG)(all,d,REG)
   4408       BVMSB(c,s,d) = VMSB(c,s,d);
   4409    
   4410   Coefficient (parameter) (all,c,COMM)(all,s,REG)(all,d,REG)
   4411       BVCIF(c,s,d) # imports of c from r to s valued cif (tradeables only) #;
   4412   Formula (initial) (all,c,COMM)(all,s,REG)(all,d,REG)
   4413       BVCIF(c,s,d) = VCIF(c,s,d);
   4414    
   4415   Coefficient (parameter) (all,c,COMM)(all,s,REG)(all,d,REG)
   4416       BMTAX(c,s,d) # power of import tax, base #;
   4417   Formula (initial) (all,c,COMM)(all,s,REG)(all,d,REG)
   4418       BMTAX(c,s,d) = [BVMSB(c,s,d) - BVCIF(c,s,d)] / BVCIF(c,s,d) * 100;
   4419    
   4420   Coefficient (parameter) (all,c,COMM)(all,s,REG)(all,d,REG)
   4421       BVFOB(c,s,d) # exports of c from r to s valued fob (tradeables only) #;
   4422   Formula (initial) (all,c,COMM)(all,s,REG)(all,d,REG)
   4423       BVFOB(c,s,d) = VFOB(c,s,d);
   4424    
   4425   Coefficient (parameter) (all,c,COMM)(all,s,REG)(all,d,REG)
   4426       BXTAX(c,s,d) # power of exports tax, base #;
   4427   Formula (initial) (all,c,COMM)(all,s,REG)(all,d,REG)
   4428       BXTAX(c,s,d) = [BVFOB(c,s,d) - BVXSB(c,s,d)] / BVFOB(c,s,d) * 100;
   4429    
   4430   Coefficient (parameter) (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4431       BETAX(e,a,r) # power of exports tax, base #;
   4432   Formula (initial)(all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4433       BETAX(e,a,r) = [BEVFP(e,a,r) - BEVFB(e,a,r)] / BEVFB(e,a,r) * 100;
   4434    
   4435   Coefficient (parameter) (all,r,REG)
   4436       BSAVE(r) # expenditure on NET saving in region r at producer prices #;
   4437   Formula (initial) (all,r,REG)
   4438       BSAVE(r) = SAVE(r);
   4439    
   4440   Coefficient (parameter) (all,r,REG)
   4441       ISBAL(r) # I-S balance, NETINV(r) - SAVE(r) #;
   4442   Formula (initial) (all,r,REG)
   4443       ISBAL(r) = NETINV(r) - BSAVE(r);
   4444   Zerodivide (nonzero_by_zero) off;
   4445    
   4446   !<
   4447       Begin post-sim calculations
   4448       ...........................
   4449   >!
   4450    
   4451   postsim (begin);
   4452   Zerodivide (nonzero_by_zero) default 0.5;
   4453    
   4454   File (new) WELVIEW # output file containing welfare decomposition summary #;
   4455    
   4456   !<
   4457       SET definitions for Welfare summary file. Supplementary sets for "toggles"
   4458       in VIEWHAR.
   4459   >!
   4460   Set
   4461       ALLOCEFF = ENDW + ACTS + COMM;
   4462   Set
   4463       ENDWACTS = ENDW + ACTS;
   4464   Set
   4465       TAXSUM(pfacttax,prodtax,comtax);
   4466   Set
   4467       TYPE(xtax,mtax);
   4468   Subset
   4469       TYPE is subset of CTAX;
   4470   Set
   4471       PRICES(pworld,pexport,pimport);
   4472   Set
   4473       ACTIVITY(firm, private, investment, govt);
   4474   Set
   4475       COL(welcnt, dvol, taxrateb, taxrateu);
   4476   Set
   4477       DIREC(import,export);
   4478   Set
   4479       FORM(percent,value);
   4480   Set
   4481       COLM(ISbal,p_cgds,p_save);
   4482    
   4483   !<
   4484       C-A: EV decomposition summary
   4485       -----------------------------
   4486   >!
   4487    
   4488   Coefficient (all,r,REG)(all,c,COLUMN)
   4489       WELFARE(r,c) # aggregate report of welfare change #;
   4490   Formula (all,r,REG)
   4491       WELFARE(r,"alloc_A1")= sum{t, CTAX, CNTalleffr(r,t)};
   4492   Formula (all,r,REG)
   4493       WELFARE(r,"ENDWB1") = CNTendwr(r);
   4494   Formula (all,r,REG)
   4495       WELFARE(r,"tech_C1") = sum{t,TECHTYPE, CNTtechr(t,r)};
   4496   Formula (all,r,REG)
   4497       WELFARE(r,"pop_D1")  = CNTpop(r);
   4498   Formula (all,r,REG)
   4499       WELFARE(r,"tot_E1")  = CNTtotr(r);
   4500   Formula (all,r,REG)
   4501       WELFARE(r,"IS_F1")   = CNTpinv(r);
   4502   Formula (all,r,REG)
   4503       WELFARE(r,"PREF_G1") = CNTdpar(r);
   4504    
   4505   Write
   4506       WELFARE to file WELVIEW header "A"
   4507       longname "EV Decomposition: Summary";
   4508    
   4509   !<
   4510       C-A1: Allocative efficiency effect: Activity, comodity and endowment Summary
   4511       ----------------------------------------------------------------------------
   4512   >!
   4513    
   4514   Coefficient (all,a,ALLOCEFF)(all,r,REG)
   4515       CNTalleff(a,r) # allocative efficiency #;
   4516   Formula (all,r,REG)(all,e,ENDW)
   4517       CNTalleff(e,r) = CNTqfeer(e,r) + CNTqe(e,r);
   4518   Formula (all,r,REG)(all,c,COMM)
   4519       CNTalleff(c,r) = CNTalleffcr(c,r);
   4520   Formula (all,r,REG)(all,a,ACTS)
   4521       CNTalleff(a,r) = sum{c,COMM, CNTqca(c,a,r)};
   4522    
   4523   Write
   4524       CNTalleff to file WELVIEW header "A1"
   4525       longname "Allocative Efficiency Effect: Summary";
   4526    
   4527   !<
   4528       C-A2: Allocative efficiency effect: Tax type summary
   4529       ----------------------------------------------------
   4530   >!
   4531   Coefficient (all,r,REG)(all,t,CTAX)
   4532       CNTalleffkr(r,t) # allocative efficiency effect #;
   4533   Formula (all,r,REG)(all,t,CTAX)
   4534       CNTalleffkr(r,t) = CNTalleffr(r,t);
   4535   Write
   4536       CNTalleffkr to file WELVIEW header "A2"
   4537       longname "Allocative Efficiency Effect: Tax Type Summary";
   4538    
   4539   !<
   4540       C-AX: Decomposition of allocative effect: Tax type and commodity
   4541       ----------------------------------------------------------------
   4542    
   4543       C-A21:  Output tax effect
   4544       C-A22:  Domestic tax effect
   4545       C-A23:  Trade tax effect
   4546       C-A3:   Endowment tax effect
   4547   >!
   4548    
   4549   !<
   4550       C-A21:  Output tax effect
   4551       .........................
   4552   >!
   4553    
   4554   Coefficient (all,e,ENDWACTS)(all,r,REG)
   4555       OTAX(e,r) # output tax effect #;
   4556   Formula (all,e,ENDW)(all,r,REG)
   4557       OTAX(e,r) = CNTqe(e,r);
   4558   Formula (all,a,ACTS)(all,r,REG)
   4559       OTAX(a,r) = CNTqo(a,r);
   4560    
   4561   Write
   4562       OTAX to file WELVIEW header "A21"
   4563       longname "Output Tax Effect";
   4564    
   4565   !<
   4566       C-A211: Output tax effect: Explanatory factors
   4567       ..............................................
   4568   >!
   4569    
   4570   Coefficient (all,a,ACTS)(all,r,REG)
   4571       UOUTAX(a,r) # power of activity output tax, updated #;
   4572   Formula (all,a,ACTS)(all,r,REG)
   4573       UOUTAX(a,r) = [MAKEBACT(a,r) - VOS(a,r)] / MAKEBACT(a,r) * 100;
   4574    
   4575   Coefficient (all,e,ENDW)(all,r,REG)
   4576       UINCTAX(e,r) # power of income tax, updated #;
   4577   Formula (all,e,ENDW)(all,r,REG)
   4578       UINCTAX(e,r) = [sum{a,ACTS, EVFB(e,a,r) - EVOS(e,a,r)}]
   4579                    / sum{a,ACTS, EVFB(e,a,r)} * 100;
   4580    
   4581   Coefficient (all,ea,ENDWACTS)(all,r,REG)(all,co,COL)
   4582       OUTPUT(ea,r,co) # output tax, explanatory factors #;
   4583   Formula (all,a,ACTS)(all,r,REG)(all,co,COL)
   4584       OUTPUT(a,r,co)
   4585           = IF[co="welcnt", OTAX(a,r)]
   4586           + IF[co="dvol", BMAKEACT(a,r) * qo(a,r) / 100]
   4587           + IF[co="taxrateb", BOUTAX(a,r)]
   4588           + IF[co="taxrateu", UOUTAX(a,r)];
   4589   Formula (all,e,ENDW)(all,r,REG)(all,co,COL)
   4590       OUTPUT(e,r,co)
   4591           = IF[co="welcnt", OTAX(e,r)]
   4592           + IF[co="dvol", sum{a,ACTS, BVEB(e,a,r) * qes(e,a,r) / 100}]
   4593           + IF[co="taxrateb", BINCTAX(e,r)]
   4594           + IF[co="taxrateu", UINCTAX(e,r)];
   4595    
   4596   Write
   4597       OUTPUT to file WELVIEW header "A211"
   4598       longname "Output Tax Effect: Explanatory Factors";
   4599    
   4600   !<
   4601       C-A22:  Domestic tax effect
   4602       ---------------------------
   4603    
   4604       C-A22:  Domestic tax effect: Summary
   4605       C-A221: Intermed. input tax effect
   4606       C-A222: Investment interm. input tax effect
   4607       C-A22F: Intermed. input tax effect: Explanatory factors
   4608       C-A22P: Private cons. tax effect: Explanatory factors
   4609       C-A22G: Government cons. tax effect: Explanatory factors
   4610       C-A22I: Investment demand Tax Effect: Explanatory factors
   4611   >!
   4612    
   4613   !<
   4614       C-A22: Domestic tax effect: Summary
   4615       ...................................
   4616   >!
   4617    
   4618   Coefficient (all,c,COMM)(all,ac,ACTIVITY)(all,r,REG)(all,t,DIR)
   4619       ATAX(c,ac,r,t) # tax effect: summary #;
   4620   Formula (all,c,COMM)(all,ac,ACTIVITY)(all,r,REG)
   4621       ATAX(c,ac,r,"domestic")
   4622           = IF[ac="firm",       sum{a,ACTS, CNTqfd(c,a,r)}]
   4623           + IF[ac="private",    CNTqpd(c,r)]
   4624           + IF[ac="govt",       CNTqgd(c,r)]
   4625           + IF[ac="investment", CNTqid(c,r)];
   4626   Formula (all,c,COMM)(all,ac,ACTIVITY)(all,r,REG)
   4627       ATAX(c,ac,r,"imported")
   4628           = IF[ac="firm",       sum{a,ACTS, CNTqfm(c,a,r)}]
   4629           + IF[ac="private",    CNTqpm(c,r)]
   4630           + IF[ac="govt",       CNTqgm(c,r)]
   4631           + IF[ac="investment", CNTqim(c,r)];
   4632    
   4633   Write
   4634       ATAX to file WELVIEW header "A22"
   4635       longname "Domestic Tax Effect: Summary";
   4636    
   4637   !<
   4638       C-A221: Intermediate input tax effect
   4639       .....................................
   4640   >!
   4641    
   4642   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,d,DIR)
   4643       STAX(c,a,r,d) # intermediate input tax effect #;
   4644   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,d,DIR)
   4645       STAX(c,a,r,d)
   4646           = IF[d="domestic", CNTqfd(c,a,r)]
   4647           + IF[d="imported", CNTqfm(c,a,r)];
   4648    
   4649   Write
   4650       STAX to file WELVIEW header "A221"
   4651       longname "Intermed. Input Tax Effect";
   4652    
   4653   !<
   4654       C-A222: Investment intermediate input tax effect
   4655       ................................................
   4656   >!
   4657    
   4658   Coefficient (all,c,COMM)(all,r,REG)(all,d,DIR)
   4659       ITAX(c,r,d) # investment intermediate input tax effect #;
   4660   Formula (all,c,COMM)(all,r,REG)(all,d,DIR)
   4661       ITAX(c,r,d)
   4662           = IF[d="domestic", CNTqid(c,r)]
   4663           + IF[d="imported", CNTqim(c,r)];
   4664    
   4665   Write
   4666       ITAX to file WELVIEW header "A222"
   4667       longname "Investment Intermed. Input Tax Effect";
   4668    
   4669   !<
   4670       C-A22F: Intermediate input tax effect: Explanatory factors
   4671       ..........................................................
   4672   >!
   4673    
   4674   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,d,DIR)(all,co,COL)
   4675       FIRM(c,a,r,d,co) # explanatory factors: firm interm. input tax effect #;
   4676   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,co,COL)
   4677       FIRM(c,a,r,"domestic",co)
   4678           = IF[co="dvol",     [BVDFB(c,a,r) * qfd(c,a,r)] / 100]
   4679           + IF[co="taxrateb", 100 * [BVDFP(c,a,r) - BVDFB(c,a,r)] / BVDFB(c,a,r)]
   4680           + IF[co="taxrateu", 100 * [VDFP(c,a,r) - VDFB(c,a,r)] / VDFB(c,a,r)];
   4681   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,co,COL)
   4682       FIRM(c,a,r,"imported",co)
   4683           = IF[co="dvol",     [BVMFB(c,a,r) * qfm(c,a,r)] / 100]
   4684           + IF[co="taxrateb", 100 * [BVMFP(c,a,r) - BVMFB(c,a,r)] / BVMFB(c,a,r)]
   4685           + IF[co="taxrateu", 100 * [VMFP(c,a,r) - VMFB(c,a,r)] / VMFB(c,a,r)];
   4686   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)(all,d,DIR)
   4687       FIRM(c,a,r,d,"welcnt") = STAX(c,a,r,d);
   4688    
   4689   Write
   4690       FIRM to file WELVIEW header "A22F"
   4691       longname "Intermed. Input Tax Effect: Explanatory Factors";
   4692    
   4693   !<
   4694       C-A22P: Private consumption tax Effect: Explanatory Factors
   4695       ...........................................................
   4696   >!
   4697    
   4698   Coefficient (all,c,COMM)(all,r,REG)(all,d,DIR)(all,co,COL)
   4699       PRIVATE(c,r,d,co) # explanatory factors: priv hh consumption tax effect #;
   4700   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4701       PRIVATE(c,r,"domestic",co)
   4702           = IF[co="dvol",     [BVDPB(c,r) * qpd(c,r)] / 100]
   4703           + IF[co="taxrateb", 100 * [BVDPP(c,r) - BVDPB(c,r)] / BVDPB(c,r)]
   4704           + IF[co="taxrateu", 100 * [VDPP(c,r) - VDPB(c,r)] / VDPB(c,r)];
   4705   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4706       PRIVATE(c,r,"imported",co)
   4707           = IF[co="dvol",     [BVMPB(c,r) * qpm(c,r)] / 100]
   4708           + IF[co="taxrateb", 100 * [BVMPP(c,r) - BVMPB(c,r)] / BVMPB(c,r)]
   4709           + IF[co="taxrateu", 100 * [VMPP(c,r) - VMPB(c,r)] / VMPB(c,r)];
   4710   Formula (all,c,COMM)(all,r,REG)(all,d,DIR)
   4711       PRIVATE(c,r,d,"welcnt") = ATAX(c,"private",r,d);
   4712    
   4713   Write
   4714       PRIVATE to file WELVIEW header "A22P"
   4715       longname "Private Cons. Tax Effect: Explanatory Factors";
   4716    
   4717   !<
   4718       C-A22G: Government consumption tax effect: Explanatory factors
   4719       ..............................................................
   4720   >!
   4721    
   4722   Coefficient (all,c,COMM)(all,r,REG)(all,d,DIR)(all,co,COL)
   4723       GOVT(c,r,d,co) # explanatory factors: gov't hh consumption tax effect #;
   4724   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4725       GOVT(c,r,"domestic",co)
   4726           = IF[co="dvol",     [BVDGB(c,r) * qgd(c,r)] / 100]
   4727           + IF[co="taxrateb", 100 * [BVDGP(c,r) - BVDGB(c,r)] / BVDGB(c,r)]
   4728           + IF[co="taxrateu", 100 * [VDGP(c,r) - VDGB(c,r)] / VDGB(c,r)];
   4729   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4730       GOVT(c,r,"imported",co)
   4731           = IF[co="dvol",     [BVMGB(c,r) * qgm(c,r)] / 100]
   4732           + IF[co="taxrateb", 100 * [BVMGP(c,r) - BVMGB(c,r)] / BVMGB(c,r)]
   4733           + IF[co="taxrateu", 100 * [VMGP(c,r) - VMGB(c,r)] / VMGB(c,r)];
   4734   Formula (all,c,COMM)(all,r,REG)(all,d,DIR)
   4735       GOVT(c,r,d,"welcnt") = ATAX(c,"govt",r,d);
   4736    
   4737   Write
   4738       GOVT to file WELVIEW header "A22G"
   4739       longname "Government Cons. Tax Effect: Explanatory Factors";
   4740    
   4741   !<
   4742       C-A22I: Investment tax effect: Explanatory factors
   4743       ..................................................
   4744   >!
   4745    
   4746   Coefficient (all,c,COMM)(all,r,REG)(all,d,DIR)(all,co,COL)
   4747       INVESTMENT(c,r,d,co) # explanatory factors: investment tax effect #;
   4748   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4749       INVESTMENT(c,r,"domestic",co)
   4750           = IF[co="dvol",     [BVDIB(c,r) * qid(c,r)] / 100]
   4751           + IF[co="taxrateb", 100 * [BVDIP(c,r) - BVDIB(c,r)] / BVDIB(c,r)]
   4752           + IF[co="taxrateu", 100 * [VDIP(c,r) - VDIB(c,r)] / VDIB(c,r)];
   4753   Formula (all,c,COMM)(all,r,REG)(all,co,COL)
   4754       INVESTMENT(c,r,"imported",co)
   4755           = IF[co="dvol",     [BVMIB(c,r) * qim(c,r)] / 100]
   4756           + IF[co="taxrateb", 100 * [BVMIP(c,r) - BVMIB(c,r)] / BVMIB(c,r)]
   4757           + IF[co="taxrateu", 100 * [VMIP(c,r) - VMIB(c,r)] / VMIB(c,r)];
   4758   Formula (all,c,COMM)(all,r,REG)(all,d,DIR)
   4759       INVESTMENT(c,r,d,"welcnt") = ATAX(c,"investment",r,d);
   4760    
   4761   Write
   4762       INVESTMENT to file WELVIEW header "A22I"
   4763       longname "Investment Tax Effect: Explanatory Factors";
   4764    
   4765   !<
   4766       C-A23: Trade tax effect
   4767       ------------------------
   4768    
   4769       C-A23: Trade tax effect
   4770       C-A231: Trade tax effect: Explanatory factors
   4771   >!
   4772    
   4773   !<
   4774       C-A23: Trade tax effect
   4775       ........................
   4776   >!
   4777    
   4778   Coefficient (all,c,COMM)(all,r,REG)(all,s,REG)(all,k,TYPE)
   4779       TTAX(c,r,s,k) # trade tax effect #;
   4780   Formula (all,c,COMM)(all,r,REG)(all,s,REG)
   4781       TTAX(c,r,s,"xtax") = CNTqxs(c,r,s);
   4782   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   4783       TTAX(c,s,d,"mtax") = CNTqms(c,s,d);
   4784    
   4785   Write
   4786       TTAX to file WELVIEW header "A23"
   4787       longname "Trade Tax Effect";
   4788    
   4789   !<
   4790       C-A231: Trade tax effect: Explanatory factors
   4791       .............................................
   4792   >!
   4793    
   4794   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   4795       UMTAX(c,s,d) # power of import tax, updated # ;
   4796   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   4797       UMTAX(c,s,d) = [VMSB(c,s,d) - VCIF(c,s,d)] / VCIF(c,s,d) * 100;
   4798    
   4799   Coefficient (all,c,COMM)(all,s,REG)(all,d,REG)
   4800       UXTAX(c,s,d) # power of export tax, updated #;
   4801   Formula (all,c,COMM)(all,s,REG)(all,d,REG)
   4802       UXTAX(c,s,d) = [VFOB(c,s,d) - VXSB(c,s,d)] / VFOB(c,s,d) * 100;
   4803    
   4804   Coefficient (all,c,COMM)(all,r,REG)(all,s,REG)(all,co,COL)(all,d,DIREC)
   4805       TRADE(c,r,s,co,d) # trade tax effect: explanatory factors # ;
   4806   Formula (all,c,COMM)(all,r,REG)(all,s,REG)(all,co,COL)
   4807       TRADE(c,r,s,co,"export")
   4808           = IF[co="welcnt",   TTAX(c,r,s,"xtax")]
   4809           + IF[co="dvol",     BVXSB(c,r,s) * qxs(c,r,s) / 100]
   4810           + IF[co="taxrateb", BXTAX(c,r,s)]
   4811           + IF[co="taxrateu", UXTAX(c,r,s)];
   4812   Formula (all,c,COMM)(all,r,REG)(all,s,REG)(all,co,COL)
   4813       TRADE(c,r,s,co,"import")
   4814           = IF[co="welcnt",   TTAX(c,r,s,"mtax")]
   4815           + IF[co="dvol",     BVXSB(c,r,s) * qxs(c,r,s) / 100]
   4816           + IF[co="taxrateb", BMTAX(c,r,s)]
   4817           + IF[co="taxrateu", UMTAX(c,r,s)];
   4818    
   4819   Write
   4820       TRADE to file WELVIEW header "A231"
   4821       longname "Trade Tax Effect: Explanatory Factors";
   4822    
   4823   !<
   4824       C-A3:   Endowment tax effect
   4825       ----------------------------
   4826   >!
   4827    
   4828   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4829       UETAX(e,a,r) # power of factor tax, updated #;
   4830   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4831       UETAX(e,a,r) = [EVFP(e,a,r) - EVFB(e,a,r)] / EVFB(e,a,r) * 100;
   4832   ! Note: PFACTOR in welfare decomp was changed to WPFACTOR because
   4833           the variable pfactor(r) has already been defined !
   4834   Coefficient (all,e,ENDW)(all,a,ACTS)(all,r,REG)(all,co,COL)
   4835       WPFACTOR(e,a,r,co) # factor tax effect #;
   4836   Formula (all,e,ENDW)(all,a,ACTS)(all,r,REG)(all,co,COL)
   4837       WPFACTOR(e,a,r,co)
   4838           = IF[co="welcnt",   CNTqfe(e,a,r)]
   4839           + IF[co="dvol",     BEVFB(e,a,r) * qfe(e,a,r) / 100]
   4840           + IF[co="taxrateb", BETAX(e,a,r)]
   4841           + IF[co="taxrateu", UETAX(e,a,r)];
   4842    
   4843   Write WPFACTOR to file WELVIEW header "A31"
   4844       longname "Endowment Tax Effect: Explanatory Factors";
   4845   Write CNTqfeer to file WELVIEW header "A3"
   4846       longname "Endowment Tax Effect";
   4847    
   4848   !<
   4849       C-B1: Endowment effect: Gross of depreciation
   4850       ---------------------------------------------
   4851   >!
   4852    
   4853   Coefficient (all,r,REG)(all,e,ENDW)
   4854       CNTendowment(r,e) # contribution to welfare by ENDW e in region r #;
   4855   Formula (all,r,REG)(all,e,ENDW)
   4856       CNTendowment(r,e) = CNTendw(e,r);
   4857   Write
   4858       CNTendowment to file WELVIEW header "B1"
   4859       longname "Endowment Effect, Gross of Depreciation";
   4860    
   4861   !<
   4862       C-B2: Endowment effect: depreciation
   4863       ------------------------------------
   4864   >!
   4865    
   4866   Write
   4867       CNTkb to file WELVIEW header "B2"
   4868       longname "Endowment Effect: Depreciation";
   4869    
   4870   !<
   4871       C-C1: Technical change effect
   4872       -----------------------------
   4873    
   4874       C-C1:  Technical change effect: Summary
   4875       C-C1X: Technical change effect: Further decomposition
   4876   >!
   4877    
   4878   Coefficient (all,r,REG)(all,t,TECHTYPE)
   4879       CNTtech(r,t) # contribution to welfare change by tech #;
   4880   Formula (all,r,REG)(all,t,TECHTYPE)
   4881       CNTtech(r,t) = CNTtechr(t,r);
   4882    
   4883   Write
   4884       CNTtech to file WELVIEW header "C1"
   4885       longname "Technical Change Effect: Summary";
   4886    
   4887   Write
   4888       CNTtech_ao to file WELVIEW header "C11"
   4889       longname "(ao) Output Augm. Tech. Change Effect";
   4890   Write
   4891       CNTtech_afe to file WELVIEW header "C12"
   4892       longname "(afe) Primary Factor Augm. Tech. Change Effect";
   4893   Write
   4894       CNTtech_ava to file WELVIEW header "C13"
   4895       longname "(ava) Value Added Augm. Tech. Change Effect";
   4896   Write
   4897       CNTtech_aint to file WELVIEW header "C14"
   4898       longname "(aint) Composite Intermed. Input Augm. Tech. Change Effect";
   4899   Write
   4900        CNTtech_af to file WELVIEW header "C15"
   4901       longname "(af) Intermed. Input Augm. Tech. Change Effect";
   4902   Write
   4903       CNTtech_atmfsd to file WELVIEW header "C16"
   4904       longname "(atmfsd) Internat. Margin Augm. Tech. Change Effect";
   4905   Write
   4906       CNTtech_ams to file WELVIEW header "C17"
   4907       longname "(ams) Bilateral Import Augm. Tech. Change Effect";
   4908    
   4909   !<
   4910       C-D1: Population effect
   4911       -----------------------
   4912    
   4913       No decomposition required here.
   4914   >!
   4915    
   4916   !<
   4917       C-E1: Terms of Trade (ToT) effect
   4918       ---------------------------------
   4919   >!
   4920    
   4921   ! Note: TOT(c,r,t,s) in Welfare Decomp was renamed to WTOT(c,r,t,s) because a
   4922           prior tot(r) variable has been declared in the model!
   4923   Coefficient (all,c,COMM)(all,r,REG)(all,t,PRICES)(all,s,FORM)
   4924       WTOT(c,r,t,s)
   4925       # terms trade effects decomposed by effects of different prices #;
   4926   Formula (all,c,COMM)(all,r,REG)
   4927       WTOT(c,r,"pworld","percent") = c1_cr(c,r);
   4928   Formula (all,c,COMM)(all,r,REG)
   4929       WTOT(c,r,"pexport","percent") = c2_cr(c,r);
   4930   Formula (all,c,COMM)(all,r,REG)
   4931       WTOT(c,r,"pimport","percent") = -c3_cr(c,r);
   4932   Formula (all,c,COMM)(all,r,REG)
   4933       WTOT(c,r,"pworld","value")
   4934           = CNTtotr(r) * c1_cr(c,r)
   4935           / sum{k,COMM, sum{t,PRICES, WTOT(c,r,t,"percent")}};
   4936   Formula (all,c,COMM)(all,r,REG)
   4937       WTOT(c,r,"pexport","value")
   4938           = CNTtotr(r) * c2_cr(c,r)
   4939           / sum{t,PRICES, sum{k,COMM, WTOT(k,r,t,"percent")}};
   4940   Formula (all,c,COMM)(all,r,REG)
   4941       WTOT(c,r,"pimport","value")
   4942           = -c3_cr(c,r) * CNTtotr(r)
   4943           / sum{t,PRICES, sum{k,COMM, WTOT(k,r,t,"percent")}};
   4944    
   4945   Write
   4946       WTOT to file WELVIEW header "E1"
   4947       longname "Terms of Trade Effect";
   4948    
   4949   !<
   4950       C-F1: I-S Effect: Explanatory factors
   4951       -------------------------------------
   4952   >!
   4953    
   4954   Coefficient (all,r,REG)(all,c,COLM)
   4955       CGDSCOMP(r,c) # components of cgds effect #;
   4956   Formula (all,r,REG)
   4957       CGDSCOMP(r,"ISbal") = ISBAL(r);
   4958   Formula (all,r,REG)
   4959       CGDSCOMP(r,"p_cgds") = pinv(r);
   4960   Formula (all,r,REG)
   4961       CGDSCOMP(r,"p_save") = psave(r);
   4962   Write
   4963       CGDSCOMP to file WELVIEW header "F1"
   4964       longname "I-S Effect: Explanatory Factors";
   4965    
   4966   !<
   4967       -----------------------------
   4968       END OF Welfare summary module
   4969       -----------------------------
   4970   >!
   4971    
   4972   !<
   4973       -------------------------------------------------
   4974       D. GTAPVol (post-simulation) summary calculations
   4975       -------------------------------------------------
   4976   >!
   4977    
   4978   !<
   4979       Compute the relevant volume changes
   4980       -----------------------------------
   4981   >!
   4982    
   4983   COEFFICIENT (all,c,COMM)(all,s,REG)(all,d,REG)
   4984       DQXS(c,s,d)
   4985       # ch. in vol. of exports of c from region s to d at initial basic prices #;
   4986   FORMULA  (all,c,COMM)(all,s,REG)(all,d,REG)
   4987       DQXS(c,s,d) = [qxs(c,s,d) / 100] * BVXSB(c,s,d);
   4988    
   4989   COEFFICIENT (all,c,COMM)(all,r,REG)
   4990       DQDS(c,r)
   4991       # ch. in vol. of domestic sales of com. c in r at initial basic prices #;
   4992   FORMULA (all,c,COMM)(all,r,REG)
   4993       DQDS(c,r) = [qds(c,r) / 100] * BVDB(c,r) ;
   4994    
   4995   COEFFICIENT (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4996       DQFE(e,a,r)
   4997       # ch. in vol. of endowment e by activity a in r at initial basic prices #;
   4998   FORMULA (all,e,ENDW)(all,a,ACTS)(all,r,REG)
   4999       DQFE(e,a,r) = [qfe(e,a,r) / 100] * BEVFB(e,a,r) ;
   5000    
   5001   COEFFICIENT (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5002       DQFM(c,a,r)
   5003       # ch. in vol. of imp. intermed. c by act. a in r at initial basic prices #;
   5004   FORMULA (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5005       DQFM(c,a,r) = [qfm(c,a,r) / 100] * BVMFB(c,a,r) ;
   5006    
   5007   COEFFICIENT (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5008       DQFD(c,a,r)
   5009       # ch. in vol. of dom. intermed. c by act. a in r at initial basic prices #;
   5010   FORMULA     (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5011            DQFD(c,a,r) = [qfd(c,a,r) / 100] * BVDFB(c,a,r) ;
   5012    
   5013   COEFFICIENT (all,c,COMM)(all,r,REG)
   5014       DQPM(c,r)
   5015       # ch. in vol. of priv. hhld cons. for imp. c in r at initial basic prices #;
   5016   FORMULA (all,c,COMM)(all,r,REG)
   5017       DQPM(c,r) = [qpm(c,r) / 100] * BVMPB(c,r) ;
   5018    
   5019   COEFFICIENT (all,c,COMM)(all,r,REG)
   5020       DQPD(c,r)
   5021       # ch. in vol. of priv. hhld cons. for dom. c in r at initial basic prices #;
   5022   FORMULA (all,c,COMM)(all,r,REG)
   5023       DQPD(c,r) = [qpd(c,r) / 100] * BVDPB(c,r) ;
   5024    
   5025   COEFFICIENT (all,c,COMM)(all,r,REG)
   5026       DQGM(c,r)
   5027       # ch. in vol. of government cons. for imp. c in r at initial basic prices #;
   5028   FORMULA (all,c,COMM)(all,r,REG)
   5029       DQGM(c,r) = [qgm(c,r) / 100] * BVMGB(c,r) ;
   5030    
   5031   COEFFICIENT (all,c,COMM)(all,r,REG)
   5032       DQGD(c,r)
   5033       # ch. in vol. of government cons. for dom. c in r at initial basic prices #;
   5034   FORMULA (all,c,COMM)(all,r,REG)
   5035       DQGD(c,r) = [qgd(c,r) / 100] * BVDGB(c,r) ;
   5036    
   5037   COEFFICIENT (all,c,COMM)(all,r,REG)
   5038       DQO(c,r)
   5039       # ch. in vol. of supply of com. c in r at initial basic prices #;
   5040   FORMULA (all,c,COMM)(all,r,REG)
   5041       DQO(c,r) = [qc(c,r) / 100] * BVCB(c,r) ;
   5042    
   5043   COEFFICIENT (all,s,REG)(all,d,REG)
   5044       DTOT(s,d)
   5045       # ch. in vol. of total exports from region s to d at initial basic prices #;
   5046   FORMULA (all,s,REG)(all,d,REG)
   5047       DTOT(s,d) = sum{c,COMM, DQXS(c,s,d)};
   5048    
   5049   Zerodivide off;
   5050    
   5051   FILE
   5052    (New) GTAPVOL # HAR file of volume changes # ;
   5053   !< Write the output of this module to ViewHAR for easy viewing and summation >!
   5054    
   5055   Write
   5056       DQXS to file GTAPVOL header "DQXS";
   5057       DQDS to file GTAPVOL header "DQDS";
   5058       DQFE to file GTAPVOL header "DQFE";
   5059       DQFM to file GTAPVOL header "DQFM";
   5060       DQFD to file GTAPVOL header "DQFD";
   5061       DQPM to file GTAPVOL header "DQPM";
   5062       DQPD to file GTAPVOL header "DQPD";
   5063       DTOT to file GTAPVOL header "DTOT";
   5064       DQO  to file GTAPVOL header "DQO ";
   5065       DQGD to file GTAPVOL header "DQGD";
   5066       DQGM to file GTAPVOL header "DQGM";
   5067    
   5068   !<
   5069       --------------
   5070       END OF GTAPVol
   5071       --------------
   5072   >!
   5073   postsim (end);
   5074   !<
   5075       -----------------------------------
   5076       END OF post-simulation calculations
   5077       -----------------------------------
   5078   >!
   5079    
   5080   !<
   5081       ----------------------------------------------
   5082       E. Data balance check and summary calculations
   5083       ----------------------------------------------
   5084   >!
   5085    
   5086   Set
   5087       COSTS # industry cost summary # = "IntDom" + "IntImp" + ENDW + "PTAX"  ;
   5088   Set
   5089       GDPIN # income-side GDP # = ENDW + "IndTaxes";
   5090   Set
   5091       SALES # Commodity Sales Summary #
   5092       (Intermediate,Household,Investment,Government,Exports,IntnlMargins);
   5093    
   5094   Coefficient (all,a,ACTS)(all,r,REG)(all,c,COSTS)
   5095       COSTSUM(a,r,c) # industry cost summary #;
   5096   Formula
   5097    (all,a,ACTS)(all,r,REG) COSTSUM(a,r,"IntDom") = sum{c,COMM, VDFP(c,a,r)};
   5098    (all,a,ACTS)(all,r,REG) COSTSUM(a,r,"IntImp") = sum{c,COMM, VMFP(c,a,r)};
   5099    (all,a,ACTS)(all,r,REG)(all,e,ENDW) COSTSUM(a,r,e) = EVFP(e,a,r);
   5100    (all,a,ACTS)(all,r,REG) COSTSUM(a,r,"PTAX")   = sum{c,COMM, PTAX(c,a,r)};
   5101    (all,a,ACTS)(all,r,REG)(all,e,ENDW) COSTSUM(a,r,e) = EVFP(e,a,r);
   5102    (all,a,ACTS)(all,r,REG) COSTSUM(a,r,"PTAX")   = sum{c,COMM, PTAX(c,a,r)};
   5103   Write
   5104       COSTSUM to file GTAPSUM header "COST";
   5105    
   5106   Coefficient (all,r,REG)(all,g,GDPIN)
   5107      GDPINC(r,g) # income-side GDP #;
   5108   Formula
   5109      (all,r,REG)(all,e,ENDW) GDPINC(r,e) = sum{a,ACTS, EVFP(e,a,r)};
   5110      (all,r,REG) GDPINC(r,"IndTaxes") =   INDTAX(r) - TAXRFU(r);
   5111   Write
   5112       GDPINC to file GTAPSUM header "GDPI";
   5113    
   5114   Coefficient (all,c,COMM)(all,r,REG)(all,s,SALES)
   5115       SALESUM(c,r,s) # commodity sales summary #;
   5116   Formula
   5117   (all,c,COMM)(all,r,REG) SALESUM(c,r,"Intermediate") = sum{a,ACTS, VDFB(c,a,r)};
   5118   (all,c,COMM)(all,r,REG) SALESUM(c,r,"Household")    = VDPB(c,r);
   5119   (all,c,COMM)(all,r,REG) SALESUM(c,r,"Investment")   = VDIB(c,r);
   5120   (all,c,COMM)(all,r,REG) SALESUM(c,r,"Government")   = VDGB(c,r);
   5121   (all,c,COMM)(all,r,REG) SALESUM(c,r,"Exports")      = VXDXSB(c,r);
   5122   (all,c,MARG)(all,r,REG) SALESUM(c,r,"IntnlMargins") = VST(c,r);
   5123   (all,c,NMRG)(all,r,REG) SALESUM(c,r,"IntnlMargins") = 0;
   5124   Write
   5125       SALESUM to file GTAPSUM header "SALE";
   5126    
   5127   Coefficient (all,c,COMM)(all,r,REG)
   5128       VDBCHK(c,r) # VCB(c,r) - MAKEBCOM(c,r) should be tiny #;
   5129   Formula (all,c,COMM)(all,r,REG)
   5130       VDBCHK(c,r) = VCB(c,r) - MAKEBCOM(c,r);
   5131   Write
   5132       VDBCHK to file GTAPSUM header "VMCK";
   5133   Formula (all,c,COMM)(all,r,REG)
   5134       VDBCHK(c,r) = 100*VDBCHK(c,r) / VCB(c,r);
   5135   Write
   5136       VDBCHK to file GTAPSUM header "VMCP" longname "VDBCHK as %";
   5137    
   5138   Coefficient (all,c,COMM)(all,r,REG)(all,s,REG)
   5139       TRDCHK(c,r,s) # VCIF(i,r,s) - [VFOB(i,r,s) + VTFSD(i,r,s)] should be tiny #;
   5140   Formula (all,c,COMM)(all,r,REG)(all,s,REG)
   5141       TRDCHK(c,r,s) = VCIF(c,r,s) - [VFOB(c,r,s) + VTFSD(c,r,s)];
   5142   Write
   5143       TRDCHK to file GTAPSUM header "TRCK";
   5144   Formula (all,c,COMM)(all,r,REG)(all,s,REG)
   5145       TRDCHK(c,r,s) = 100*TRDCHK(c,r,s) / VCIF(c,r,s);
   5146   Write
   5147       TRDCHK to file GTAPSUM header "TRCP" longname "TRDCHK as %";
   5148    
   5149   Coefficient (all,m,MARG)
   5150       VTMCHK(m) # VTMUSE(m) - VTMPROV(m) should be tiny #;
   5151   Formula (all,m,MARG)
   5152       VTMCHK(m) = VTMUSE(m) - VTMPROV(m);
   5153   Write
   5154       VTMCHK to file GTAPSUM header "VTCK";
   5155   Formula (all,m,MARG)
   5156       VTMCHK(m) = 100*VTMCHK(m) / VTMUSE(m);
   5157   Write
   5158       VTMCHK to file GTAPSUM header "VTCP" longname "VTMCHK as %";
   5159    
   5160   Coefficient (all,c,COMM)(all,s,REG)
   5161       CHKMKClIMP(c,s) # Checking the accounting on imports supply and demand #;
   5162   Formula (all,c,COMM)(all,s,REG)
   5163       CHKMKClIMP(c,s)
   5164           = sum{r,REG, VMSB(c,r,s)}
   5165           - sum{a,ACTS, VMFB(c,a,s)}
   5166           - VMPB(c,s) - VMGB(c,s) - VMIB(c,s);
   5167   Write
   5168       CHKMKClIMP to file GTAPSUM header "MPCK";
   5169   Formula (all,c,COMM)(all,s,REG)
   5170       CHKMKClIMP(c,s) = 100*CHKMKClIMP(c,s)
   5171                      / [sum{r,REG, VMSB(c,r,s)} + sum{a,ACTS, VMFB(c,a,s)}];
   5172   Write
   5173       CHKMKClIMP to file GTAPSUM header "MPCP" longname "CHKMKClIMP as %";
   5174    
   5175   Coefficient (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5176       VOSCHK(c,a,r) # MAKEB - [MAKES + PTAX] should be tiny #;
   5177   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5178       VOSCHK(c,a,r) = MAKEB(c,a,r) - [MAKES(c,a,r) + PTAX(c,a,r)];
   5179   Write
   5180       VOSCHK to file GTAPSUM header "VOCK";
   5181   Formula (all,c,COMM)(all,a,ACTS)(all,r,REG)
   5182       VOSCHK(c,a,r) = 100*VOSCHK(c,a,r) / MAKEB(c,a,r);
   5183   Write
   5184       VOSCHK to file GTAPSUM header "VOCS" longname "VOSCHK as %";
   5185    
   5186   postsim (begin);
   5187   Write
   5188       VDBCHK to file GTAPSUM header "VMCQ" longname "PostSim VDBCHK as %";
   5189       TRDCHK to file GTAPSUM header "TRCQ" longname "PostSim TRDCHK as %";
   5190       VTMCHK to file GTAPSUM header "VTCQ" longname "PostSim VTMCHK as %";
   5191       CHKMKClIMP to file GTAPSUM header "MPCQ" longname "PostSim CHKMKClIMP as %";
   5192       VOSCHK to file GTAPSUM header "VOCQ" longname "PostSim VOPCHK as %";
   5193   postsim (end);
   5194    
   5195   Assertion
   5196       (all,c,COMM)(all,r,REG) ABS[VDBCHK(c,r)] <= 0.5;
   5197       (all,c,COMM)(all,r,REG)(all,s,REG) ABS[TRDCHK(c,r,s)] <= 0.5;
   5198       (all,m,MARG) ABS[VTMCHK(m)] <= 0.5;
   5199       (all,c,COMM)(all,s,REG) ABS[CHKMKClIMP(c,s)] <= 0.5;
   5200       (all,c,COMM)(all,a,ACTS)(all,r,REG) ABS[VOSCHK(c,a,r)] <= 0.5;
   5201    
   5202   !<
   5203       =====================
   5204       END OF GTAP.TAB FILE
   5205       =====================
   5206   >!
 
 %%INFORMATION. TABLO has created 4 new sets as follows:
  S@IntDom # Set with one element IntDom, a subset of COSTS #
  S@IntImp # Set with one element IntImp, a subset of COSTS #
  S@PTAX # Set with one element PTAX, a subset of COSTS #
  S@IndTaxes # Set with one element IndTaxes, a subset of GDPIN #
 




 ========================
 ++ INPUT STATEMENT TABLE
 ========================

          Starts   Syntax  Semantic
  Number  at line  Error?   Error?            Description
  ------------------------------------------------------------
     1        83     no       no      FILE 'GTAPSETS            '             
     2        85     no       no      FILE 'GTAPDATA            '             
     3        87     no       no      FILE 'GTAPPARM            '             
     4        89     no       no      FILE 'GTAPSUM             '             
     5       146     no       no      COEFFICIENT 'VERNUM      '              
     6       148     no       no      READ into 'VERNUM      '                
     7       150     no       no      UPDATE of 'VERNUM      '                
     8       153     no       no      SET 'REG         '                      
     9       156     no       no      SET 'COMM        '                      
    10       159     no       no      SET 'MARG        '                      
    11       162     no       no      SUBSET 'MARG        ' of 'COMM        ' 
    12       164     no       no      SET 'NMRG        '                      
    13       164     no       no      SUBSET 'NMRG        ' of 'COMM        ' 
    14       166     no       no      SET 'ACTS        '                      
    15       169     no       no      SET 'ENDW        '                      
    16       172     no       no      SET 'ENDWC       '                      
    17       174     no       no      SUBSET 'ENDWC       ' of 'ENDW        ' 
    18       176     no       no      SET 'ENDWM       '                      
    19       179     no       no      SUBSET 'ENDWM       ' of 'ENDW        ' 
    20       181     no       no      SET 'ENDWS       '                      
    21       184     no       no      SUBSET 'ENDWS       ' of 'ENDW        ' 
    22       186     no       no      SET 'ENDWMS      '                      
    23       186     no       no      SUBSET 'ENDWM       ' of 'ENDWMS      ' 
    24       186     no       no      SUBSET 'ENDWS       ' of 'ENDWMS      ' 
    25       188     no       no      SUBSET 'ENDWMS      ' of 'ENDW        ' 
    26       190     no       no      SUBSET 'ENDWC       ' of 'ENDWMS      ' 
    27       192     no       no      SET 'ENDWF       '                      
    28       192     no       no      SUBSET 'ENDWF       ' of 'ENDW        ' 
    29       194     no       no      SET 'DEMD        '                      
    30       194     no       no      SUBSET 'ENDW        ' of 'DEMD        ' 
    31       194     no       no      SUBSET 'COMM        ' of 'DEMD        ' 
    32       244     no       no      VARIABLE 'pds            '              
    33       246     no       no      VARIABLE 'qfd            '              
    34       248     no       no      COEFFICIENT 'VDFB        '              
    35       250     no       no      READ into 'VDFB        '                
    36       252     no       no      UPDATE of 'VDFB        '                
    37       256     no       no      VARIABLE 'pms            '              
    38       258     no       no      VARIABLE 'qfm            '              
    39       260     no       no      COEFFICIENT 'VMFB        '              
    40       262     no       no      READ into 'VMFB        '                
    41       264     no       no      UPDATE of 'VMFB        '                
    42       268     no       no      VARIABLE 'pfd            '              
    43       270     no       no      COEFFICIENT 'VDFP        '              
    44       272     no       no      READ into 'VDFP        '                
    45       274     no       no      UPDATE of 'VDFP        '                
    46       278     no       no      VARIABLE 'pfm            '              
    47       280     no       no      COEFFICIENT 'VMFP        '              
    48       282     no       no      READ into 'VMFP        '                
    49       284     no       no      UPDATE of 'VMFP        '                
    50       288     no       no      VARIABLE 'pes            '              
    51       290     no       no      VARIABLE 'qes            '              
    52       292     no       no      COEFFICIENT 'EVOS        '              
    53       294     no       no      READ into 'EVOS        '                
    54       296     no       no      UPDATE of 'EVOS        '                
    55       300     no       no      VARIABLE 'peb            '              
    56       302     no       no      VARIABLE 'qfe            '              
    57       304     no       no      COEFFICIENT 'EVFB        '              
    58       306     no       no      READ into 'EVFB        '                
    59       308     no       no      UPDATE of 'EVFB        '                
    60       312     no       no      VARIABLE 'pfe            '              
    61       314     no       no      COEFFICIENT 'EVFP        '              
    62       316     no       no      READ into 'EVFP        '                
    63       318     no       no      UPDATE of 'EVFP        '                
    64       327     no       no      VARIABLE 'ps             '              
    65       329     no       no      VARIABLE 'qca            '              
    66       331     no       no      COEFFICIENT 'MAKES       '              
    67       333     no       no      READ into 'MAKES       '                
    68       335     no       no      UPDATE of 'MAKES       '                
    69       339     no       no      VARIABLE 'pca            '              
    70       341     no       no      COEFFICIENT 'MAKEB       '              
    71       343     no       no      READ into 'MAKEB       '                
    72       345     no       no      UPDATE of 'MAKEB       '                
    73       354     no       no      VARIABLE 'qgd            '              
    74       356     no       no      COEFFICIENT 'VDGB        '              
    75       358     no       no      READ into 'VDGB        '                
    76       360     no       no      UPDATE of 'VDGB        '                
    77       364     no       no      VARIABLE 'qgm            '              
    78       366     no       no      COEFFICIENT 'VMGB        '              
    79       368     no       no      READ into 'VMGB        '                
    80       370     no       no      UPDATE of 'VMGB        '                
    81       374     no       no      VARIABLE 'pgd            '              
    82       376     no       no      COEFFICIENT 'VDGP        '              
    83       378     no       no      READ into 'VDGP        '                
    84       380     no       no      UPDATE of 'VDGP        '                
    85       384     no       no      VARIABLE 'pgm            '              
    86       386     no       no      COEFFICIENT 'VMGP        '              
    87       388     no       no      READ into 'VMGP        '                
    88       390     no       no      UPDATE of 'VMGP        '                
    89       399     no       no      VARIABLE 'qpd            '              
    90       401     no       no      COEFFICIENT 'VDPB        '              
    91       403     no       no      READ into 'VDPB        '                
    92       405     no       no      UPDATE of 'VDPB        '                
    93       409     no       no      VARIABLE 'qpm            '              
    94       411     no       no      COEFFICIENT 'VMPB        '              
    95       413     no       no      READ into 'VMPB        '                
    96       415     no       no      UPDATE of 'VMPB        '                
    97       419     no       no      VARIABLE 'ppd            '              
    98       421     no       no      COEFFICIENT 'VDPP        '              
    99       423     no       no      READ into 'VDPP        '                
   100       425     no       no      UPDATE of 'VDPP        '                
   101       429     no       no      VARIABLE 'ppm            '              
   102       431     no       no      COEFFICIENT 'VMPP        '              
   103       433     no       no      READ into 'VMPP        '                
   104       435     no       no      UPDATE of 'VMPP        '                
   105       444     no       no      VARIABLE 'qid            '              
   106       446     no       no      COEFFICIENT 'VDIB        '              
   107       448     no       no      READ into 'VDIB        '                
   108       450     no       no      UPDATE of 'VDIB        '                
   109       454     no       no      VARIABLE 'qim            '              
   110       456     no       no      COEFFICIENT 'VMIB        '              
   111       458     no       no      READ into 'VMIB        '                
   112       460     no       no      UPDATE of 'VMIB        '                
   113       464     no       no      VARIABLE 'pid            '              
   114       466     no       no      COEFFICIENT 'VDIP        '              
   115       468     no       no      READ into 'VDIP        '                
   116       470     no       no      UPDATE of 'VDIP        '                
   117       474     no       no      VARIABLE 'pim            '              
   118       476     no       no      COEFFICIENT 'VMIP        '              
   119       478     no       no      READ into 'VMIP        '                
   120       480     no       no      UPDATE of 'VMIP        '                
   121       488     no       no      VARIABLE 'psave          '              
   122       490     no       no      VARIABLE 'qsave          '              
   123       492     no       no      COEFFICIENT 'SAVE        '              
   124       494     no       no      READ into 'SAVE        '                
   125       496     no       no      UPDATE of 'SAVE        '                
   126       504     no       no      VARIABLE 'pinv           '              
   127       506     no       no      VARIABLE 'kb             '              
   128       508     no       no      COEFFICIENT 'VDEP        '              
   129       510     no       no      READ into 'VDEP        '                
   130       512     no       no      UPDATE of 'VDEP        '                
   131       525     no       no      VARIABLE 'qxs            '              
   132       527     no       no      COEFFICIENT 'VXSB        '              
   133       530     no       no      READ into 'VXSB        '                
   134       532     no       no      UPDATE of 'VXSB        '                
   135       536     no       no      VARIABLE 'pfob           '              
   136       538     no       no      COEFFICIENT 'VFOB        '              
   137       541     no       no      READ into 'VFOB        '                
   138       543     no       no      UPDATE of 'VFOB        '                
   139       547     no       no      VARIABLE 'pcif           '              
   140       549     no       no      COEFFICIENT 'VCIF        '              
   141       552     no       no      READ into 'VCIF        '                
   142       554     no       no      UPDATE of 'VCIF        '                
   143       558     no       no      VARIABLE 'pmds           '              
   144       560     no       no      COEFFICIENT 'VMSB        '              
   145       563     no       no      READ into 'VMSB        '                
   146       565     no       no      UPDATE of 'VMSB        '                
   147       573     no       no      VARIABLE 'qst            '              
   148       575     no       no      COEFFICIENT 'VST         '              
   149       578     no       no      READ into 'VST         '                
   150       580     no       no      UPDATE of 'VST         '                
   151       596     no       no      COEFFICIENT 'VFP         '              
   152       598     no       no      Formula for "VFP"                       
   153       600     no       no      Formula for "VFP"                       
   154       604     no       no      COEFFICIENT 'VOS         '              
   155       606     no       no      Formula for "VOS"                       
   156       610     no       no      COEFFICIENT 'VES         '              
   157       612     no       no      Formula for "VES"                       
   158       616     no       no      COEFFICIENT 'MAKEBACT    '              
   159       618     no       no      Formula for "MAKEBACT"                  
   160       621     no       no      COEFFICIENT 'MAKEBCOM    '              
   161       623     no       no      Formula for "MAKEBCOM"                  
   162       626     no       no      COEFFICIENT 'VDB         '              
   163       628     no       no      Formula for "VDB"                       
   164       632     no       no      COEFFICIENT 'VCB         '              
   165       634     no       no                                              
   166       634     no       no                                              
   167       634     no       no      Formula for "VCB"                       
   168       668     no       no      COEFFICIENT 'VGP         '              
   169       670     no       no      Formula for "VGP"                       
   170       672     no       no      COEFFICIENT 'GOVEXP      '              
   171       674     no       no      Formula for "GOVEXP"                    
   172       678     no       no      COEFFICIENT 'VPP         '              
   173       680     no       no      Formula for "VPP"                       
   174       682     no       no      COEFFICIENT 'PRIVEXP     '              
   175       684     no       no      Formula for "PRIVEXP"                   
   176       688     no       no      COEFFICIENT 'VIP         '              
   177       690     no       no      Formula for "VIP"                       
   178       694     no       no      COEFFICIENT 'INCOME      '              
   179       696     no       no      Formula for "INCOME"                    
   180       705     no       no      COEFFICIENT 'PTAX        '              
   181       707     no       no      Formula for "PTAX"                      
   182       709     no       no      COEFFICIENT 'TAXROUT     '              
   183       711     no       no      Formula for "TAXROUT"                   
   184       715     no       no      COEFFICIENT 'DGTAX       '              
   185       717     no       no      Formula for "DGTAX"                     
   186       719     no       no      COEFFICIENT 'MGTAX       '              
   187       721     no       no      Formula for "MGTAX"                     
   188       723     no       no      COEFFICIENT 'TAXRGC      '              
   189       725     no       no      Formula for "TAXRGC"                    
   190       729     no       no      COEFFICIENT 'DPTAX       '              
   191       731     no       no      Formula for "DPTAX"                     
   192       733     no       no      COEFFICIENT 'MPTAX       '              
   193       735     no       no      Formula for "MPTAX"                     
   194       737     no       no      COEFFICIENT 'TAXRPC      '              
   195       739     no       no      Formula for "TAXRPC"                    
   196       743     no       no      COEFFICIENT 'DITAX       '              
   197       745     no       no      Formula for "DITAX"                     
   198       747     no       no      COEFFICIENT 'MITAX       '              
   199       749     no       no      Formula for "MITAX"                     
   200       751     no       no      COEFFICIENT 'TAXRIC      '              
   201       753     no       no      Formula for "TAXRIC"                    
   202       757     no       no      COEFFICIENT 'DFTAX       '              
   203       759     no       no      Formula for "DFTAX"                     
   204       761     no       no      COEFFICIENT 'MFTAX       '              
   205       763     no       no      Formula for "MFTAX"                     
   206       765     no       no      COEFFICIENT 'TAXRIU      '              
   207       767     no       no      Formula for "TAXRIU"                    
   208       771     no       no      COEFFICIENT 'ETAX        '              
   209       773     no       no      Formula for "ETAX"                      
   210       775     no       no      COEFFICIENT 'TAXRFU      '              
   211       777     no       no      Formula for "TAXRFU"                    
   212       781     no       no      COEFFICIENT 'INCTAX      '              
   213       783     no       no      Formula for "INCTAX"                    
   214       787     no       no      COEFFICIENT 'XTAXD       '              
   215       789     no       no      Formula for "XTAXD"                     
   216       791     no       no      COEFFICIENT 'TAXREXP     '              
   217       793     no       no      Formula for "TAXREXP"                   
   218       797     no       no      COEFFICIENT 'MTAX        '              
   219       799     no       no      Formula for "MTAX"                      
   220       801     no       no      COEFFICIENT 'TAXRIMP     '              
   221       803     no       no      Formula for "TAXRIMP"                   
   222       816     no       no      COEFFICIENT 'REGINV      '              
   223       818     no       no      Formula for "REGINV"                    
   224       820     no       no      COEFFICIENT 'NETINV      '              
   225       822     no       no      Formula for "NETINV"                    
   226       826     no       no      COEFFICIENT 'GLOBINV     '              
   227       828     no       no      Formula for "GLOBINV"                   
   228       832     no       no      COEFFICIENT 'CONSHR      '              
   229       834     no       no      Formula for "CONSHR"                    
   230       837     no       no      COEFFICIENT 'INCPAR      '              
   231       839     no       no      READ into 'INCPAR      '                
   232       841     no       no      COEFFICIENT 'UELASPRIV   '              
   233       844     no       no      Formula for "UELASPRIV"                 
   234       848     no       no      COEFFICIENT 'ESUBD       '              
   235       851     no       no      READ into 'ESUBD       '                
   236       853     no       no      Assertion                               
   237       867     no       no      VARIABLE 'y              '              
   238       869     no       no      VARIABLE 'pop            '              
   239       872     no       no      VARIABLE 'pgov           '              
   240       874     no       no      VARIABLE 'yg             '              
   241       876     no       no      VARIABLE 'ug             '              
   242       879     no       no      VARIABLE 'ppriv          '              
   243       881     no       no      VARIABLE 'yp             '              
   244       883     no       no      VARIABLE 'uepriv         '              
   245       885     no       no      VARIABLE 'up             '              
   246       888     no       no      VARIABLE 'to             '              
   247       890     no       no      VARIABLE 'tinc           '              
   248       892     no       no      VARIABLE 'endwslack      '              
   249       900     no       no      VARIABLE 'qms            '              
   250       902     no       no      VARIABLE 'globalcgds     '              
   251       904     no       no      VARIABLE 'pcgdswld       '              
   252       964     no       no      VARIABLE 'po             '              
   253       966     no       no      VARIABLE 'qo             '              
   254       968     no       no      VARIABLE 'ao             '              
   255       970     no       no      VARIABLE 'pint           '              
   256       972     no       no      VARIABLE 'qint           '              
   257       974     no       no      VARIABLE 'aint           '              
   258       976     no       no      COEFFICIENT 'ESUBT       '              
   259       979     no       no      READ into 'ESUBT       '                
   260       981     no       no      Assertion                               
   261       983     no       no      EQUATION 'E_qint              '         
   262       990     no       no      VARIABLE 'pva            '              
   263       992     no       no      VARIABLE 'qva            '              
   264       994     no       no      VARIABLE 'ava            '              
   265       997     no       no      EQUATION 'E_qva               '         
   266      1004     no       no      VARIABLE 'pfa            '              
   267      1006     no       no      VARIABLE 'qfa            '              
   268      1008     no       no      VARIABLE 'afa            '              
   269      1010     no       no      VARIABLE 'afe            '              
   270      1012     no       no      VARIABLE 'profitslack    '              
   271      1019     no       no      COEFFICIENT 'STC         '              
   272      1021     no       no      ZERODIVIDE instruction                  
   273      1022     no       no      ZERODIVIDE instruction                  
   274      1023     no       no      Formula for "STC"                       
   275      1025     no       no      ZERODIVIDE instruction                  
   276      1027     no       no      EQUATION 'E_qo                '         
   277      1045     no       no      COEFFICIENT 'ESUBC       '              
   278      1048     no       no      READ into 'ESUBC       '                
   279      1050     no       no      Assertion                               
   280      1052     no       no      EQUATION 'E_qfa               '         
   281      1059     no       no      COEFFICIENT 'TINTCOM     '              
   282      1061     no       no      Formula for "TINTCOM"                   
   283      1063     no       no      COEFFICIENT 'INTSHR      '              
   284      1065     no       no      ZERODIVIDE instruction                  
   285      1066     no       no      ZERODIVIDE instruction                  
   286      1067     no       no      Formula for "INTSHR"                    
   287      1069     no       no      ZERODIVIDE instruction                  
   288      1071     no       no      EQUATION 'E_pint              '         
   289      1079     no       no      COEFFICIENT 'ESUBVA      '              
   290      1082     no       no      READ into 'ESUBVA      '                
   291      1084     no       no      Assertion                               
   292      1086     no       no      COEFFICIENT 'VVA         '              
   293      1088     no       no      Formula for "VVA"                       
   294      1090     no       no      COEFFICIENT 'DEFAULTVASHR'              
   295      1092     no       no      Formula for "DEFAULTVASHR"              
   296      1096     no       no      COEFFICIENT 'VASHR       '              
   297      1098     no       no      Formula for "VASHR"                     
   298      1100     no       no      Formula for "VASHR"                     
   299      1103     no       no      EQUATION 'E_qfe               '         
   300      1110     no       no      EQUATION 'E_pva               '         
   301      1120     no       no      EQUATION 'E_qfd               '         
   302      1125     no       no      EQUATION 'E_qfm               '         
   303      1130     no       no      COEFFICIENT 'FMSHR       '              
   304      1132     no       no      ZERODIVIDE instruction                  
   305      1133     no       no      Formula for "FMSHR"                     
   306      1135     no       no      ZERODIVIDE instruction                  
   307      1137     no       no      EQUATION 'E_pfa               '         
   308      1148     no       no      VARIABLE 'aosec          '              
   309      1150     no       no      VARIABLE 'aoreg          '              
   310      1152     no       no      VARIABLE 'aoall          '              
   311      1154     no       no      EQUATION 'E_ao                '         
   312      1160     no       no      VARIABLE 'afcom          '              
   313      1162     no       no      VARIABLE 'afsec          '              
   314      1164     no       no      VARIABLE 'afreg          '              
   315      1166     no       no      VARIABLE 'afall          '              
   316      1168     no       no      EQUATION 'E_afa               '         
   317      1174     no       no      VARIABLE 'avasec         '              
   318      1176     no       no      VARIABLE 'avareg         '              
   319      1178     no       no      VARIABLE 'avaall         '              
   320      1180     no       no      EQUATION 'E_ava               '         
   321      1186     no       no      VARIABLE 'afecom         '              
   322      1188     no       no      VARIABLE 'afesec         '              
   323      1190     no       no      VARIABLE 'afereg         '              
   324      1192     no       no      VARIABLE 'afeall         '              
   325      1194     no       no      EQUATION 'E_afe               '         
   326      1200     no       no      VARIABLE 'aintsec        '              
   327      1202     no       no      VARIABLE 'aintreg        '              
   328      1204     no       no      VARIABLE 'aintall        '              
   329      1206     no       no      EQUATION 'E_aint              '         
   330      1234     no       no      COEFFICIENT 'ETRAQ       '              
   331      1237     no       no      READ into 'ETRAQ       '                
   332      1239     no       no      Assertion                               
   333      1241     no       no      COEFFICIENT 'MAKESCOM    '              
   334      1243     no       no      Formula for "MAKESCOM"                  
   335      1245     no       no      COEFFICIENT 'MAKESACTSHR '              
   336      1247     no       no      ZERODIVIDE instruction                  
   337      1248     no       no      ZERODIVIDE instruction                  
   338      1249     no       no      Formula for "MAKESACTSHR"               
   339      1251     no       no      ZERODIVIDE instruction                  
   340      1253     no       no      EQUATION 'E_qca               '         
   341      1259     no       no      EQUATION 'E_po                '         
   342      1264     no       no      EQUATION 'E_ps                '         
   343      1276     no       no      VARIABLE 'pb             '              
   344      1278     no       no      COEFFICIENT 'MAKEBACTSHR '              
   345      1280     no       no      ZERODIVIDE instruction                  
   346      1281     no       no      ZERODIVIDE instruction                  
   347      1282     no       no      Formula for "MAKEBACTSHR"               
   348      1284     no       no      ZERODIVIDE instruction                  
   349      1286     no       no      EQUATION 'E_pb                '         
   350      1291     no       no      COEFFICIENT 'ESUBQ       '              
   351      1294     no       no      Formula for "ESUBQ"                     
   352      1294     no       no      READ into 'ESUBQ       '                
   353      1296     no       no      READ into 'ESUBQ       '                
   354      1297     no       no      Assertion                               
   355      1317     no       no      VARIABLE 'qc             '              
   356      1319     no       no      COEFFICIENT 'MAKEBCOMSHR '              
   357      1321     no       no      ZERODIVIDE instruction                  
   358      1322     no       no      ZERODIVIDE instruction                  
   359      1323     no       no      Formula for "MAKEBCOMSHR"               
   360      1325     no       no      ZERODIVIDE instruction                  
   361      1327     no       no      EQUATION 'E_pca               '         
   362      1333     no       no      EQUATION 'E_qc                '         
   363      1344     no       no      VARIABLE 'fincome        '              
   364      1346     no       no      COEFFICIENT 'FY          '              
   365      1348     no       no      Formula for "FY"                        
   366      1351     no       no      EQUATION 'E_fincome           '         
   367      1359     no       no      VARIABLE 'incomeslack    '              
   368      1362     no       no      VARIABLE 'del_indtaxr    '              
   369      1364     no       no      COEFFICIENT 'INDTAX      '              
   370      1366     no       no      Formula for "INDTAX"                    
   371      1370     no       no      EQUATION 'E_y                 '         
   372      1385     no       no      VARIABLE 'uelas          '              
   373      1387     no       no      VARIABLE 'dpsave         '              
   374      1389     no       no      VARIABLE 'dpgov          '              
   375      1391     no       no      VARIABLE 'dppriv         '              
   376      1394     no       no      EQUATION 'E_qsave             '         
   377      1399     no       no      EQUATION 'E_yg                '         
   378      1404     no       no      EQUATION 'E_yp                '         
   379      1409     no       no      VARIABLE 'dpav           '              
   380      1411     no       no      COEFFICIENT 'XSHRPRIV    '              
   381      1413     no       no      Formula for "XSHRPRIV"                  
   382      1415     no       no      COEFFICIENT 'XSHRGOV     '              
   383      1417     no       no      Formula for "XSHRGOV"                   
   384      1419     no       no      COEFFICIENT 'XSHRSAVE    '              
   385      1421     no       no      Formula for "XSHRSAVE"                  
   386      1424     no       no      EQUATION 'E_uelas             '         
   387      1429     no       no      EQUATION 'E_dpav              '         
   388      1437     no       no      VARIABLE 'p              '              
   389      1440     no       no      EQUATION 'E_p                 '         
   390      1446     no       no      VARIABLE 'au             '              
   391      1448     no       no      VARIABLE 'dpsum          '              
   392      1450     no       no      VARIABLE 'u              '              
   393      1452     no       no      COEFFICIENT 'DPARSUM     '              
   394      1454     no       no      READ into 'DPARSUM     '                
   395      1456     no       no      UPDATE of 'DPARSUM     '                
   396      1459     no       no      COEFFICIENT 'UTILELAS    '              
   397      1461     no       no      Formula for "UTILELAS"                  
   398      1464     no       no      COEFFICIENT 'DPARPRIV    '              
   399      1466     no       no      Formula for "DPARPRIV"                  
   400      1468     no       no      COEFFICIENT 'DPARGOV     '              
   401      1470     no       no      Formula for "DPARGOV"                   
   402      1473     no       no      COEFFICIENT 'DPARSAVE    '              
   403      1475     no       no      Formula for "DPARSAVE"                  
   404      1478     no       no      COEFFICIENT 'UTILPRIV    '              
   405      1480     no       no      Formula for "UTILPRIV"                  
   406      1480     no       no      READ into 'UTILPRIV    '                
   407      1482     no       no      UPDATE of 'UTILPRIV    '                
   408      1485     no       no      COEFFICIENT 'UTILGOV     '              
   409      1487     no       no      Formula for "UTILGOV"                   
   410      1487     no       no      READ into 'UTILGOV     '                
   411      1489     no       no      UPDATE of 'UTILGOV     '                
   412      1492     no       no      COEFFICIENT 'UTILSAVE    '              
   413      1494     no       no      Formula for "UTILSAVE"                  
   414      1494     no       no      READ into 'UTILSAVE    '                
   415      1496     no       no      UPDATE of 'UTILSAVE    '                
   416      1499     no       no      EQUATION 'E_u                 '         
   417      1507     no       no      EQUATION 'E_dpsum             '         
   418      1528     no       no      COEFFICIENT 'SUBPAR      '              
   419      1531     no       no      READ into 'SUBPAR      '                
   420      1533     no       no      COEFFICIENT 'ALPHA       '              
   421      1535     no       no      Formula for "ALPHA"                     
   422      1537     no       no      COEFFICIENT 'APE         '              
   423      1539     no       no      Formula for "APE"                       
   424      1542     no       no      Formula for "APE"                       
   425      1548     no       no      COEFFICIENT 'EY          '              
   426      1550     no       no      Formula for "EY"                        
   427      1557     no       no      COEFFICIENT 'EP          '              
   428      1560     no       no      Formula for "EP"                        
   429      1562     no       no      Formula for "EP"                        
   430      1565     no       no      VARIABLE 'ppa            '              
   431      1567     no       no      VARIABLE 'qpa            '              
   432      1570     no       no      EQUATION 'E_qpa               '         
   433      1582     no       no      COEFFICIENT 'XWCONSHR    '              
   434      1584     no       no      Formula for "XWCONSHR"                  
   435      1587     no       no      EQUATION 'E_uepriv            '         
   436      1592     no       no      EQUATION 'E_ppriv             '         
   437      1597     no       no      EQUATION 'E_up                '         
   438      1607     no       no      EQUATION 'E_qpd               '         
   439      1613     no       no      COEFFICIENT 'PMSHR       '              
   440      1615     no       no      Formula for "PMSHR"                     
   441      1618     no       no      EQUATION 'E_qpm               '         
   442      1623     no       no      EQUATION 'E_ppa               '         
   443      1633     no       no      VARIABLE 'pga            '              
   444      1635     no       no      VARIABLE 'qga            '              
   445      1637     no       no      COEFFICIENT 'ESUBG       '              
   446      1640     no       no      READ into 'ESUBG       '                
   447      1642     no       no      Assertion                               
   448      1644     no       no      EQUATION 'E_qga               '         
   449      1649     no       no      EQUATION 'E_pgov              '         
   450      1654     no       no      EQUATION 'E_ug                '         
   451      1660     no       no      COEFFICIENT 'GMSHR       '              
   452      1662     no       no      Formula for "GMSHR"                     
   453      1665     no       no      EQUATION 'E_qgd               '         
   454      1670     no       no      EQUATION 'E_qgm               '         
   455      1675     no       no      EQUATION 'E_pga               '         
   456      1685     no       no      VARIABLE 'pia            '              
   457      1687     no       no      VARIABLE 'qia            '              
   458      1689     no       no      VARIABLE 'qinv           '              
   459      1692     no       no      EQUATION 'E_qia               '         
   460      1697     no       no      EQUATION 'E_pinv              '         
   461      1702     no       no      EQUATION 'E_qid               '         
   462      1707     no       no      EQUATION 'E_qim               '         
   463      1713     no       no      COEFFICIENT 'IMSHR       '              
   464      1715     no       no      Formula for "IMSHR"                     
   465      1717     no       no      EQUATION 'E_pia               '         
   466      1733     no       no      COEFFICIENT 'VMB         '              
   467      1735     no       no      Formula for "VMB"                       
   468      1739     no       no      COEFFICIENT 'FMCSHR      '              
   469      1741     no       no      Formula for "FMCSHR"                    
   470      1744     no       no      COEFFICIENT 'PMCSHR      '              
   471      1746     no       no      Formula for "PMCSHR"                    
   472      1749     no       no      COEFFICIENT 'GMCSHR      '              
   473      1751     no       no      Formula for "GMCSHR"                    
   474      1754     no       no      COEFFICIENT 'IMCSHR      '              
   475      1756     no       no      Formula for "IMCSHR"                    
   476      1759     no       no      EQUATION 'E_qms               '         
   477      1768     no       no      VARIABLE 'ams            '              
   478      1770     no       no      COEFFICIENT 'ESUBM       '              
   479      1773     no       no      READ into 'ESUBM       '                
   480      1775     no       no      Assertion                               
   481      1777     no       no      EQUATION 'E_qxs               '         
   482      1784     no       no      COEFFICIENT 'IMPBASIC    '              
   483      1786     no       no      Formula for "IMPBASIC"                  
   484      1788     no       no      COEFFICIENT 'MSHRS       '              
   485      1790     no       no      Formula for "MSHRS"                     
   486      1793     no       no      EQUATION 'E_pms               '         
   487      1808     no       no      VARIABLE 'ptrans         '              
   488      1810     no       no      VARIABLE 'qtmfsd         '              
   489      1817     no       no      VARIABLE 'pt             '              
   490      1819     no       no      VARIABLE 'qtm            '              
   491      1821     no       no      VARIABLE 'atmfsd         '              
   492      1829     no       no      EQUATION 'E_qtmfsd            '         
   493      1848     no       no      COEFFICIENT 'VTMFSD      '              
   494      1851     no       no      READ into 'VTMFSD      '                
   495      1853     no       no      UPDATE of 'VTMFSD      '                
   496      1856     no       no      COEFFICIENT 'VTFSD       '              
   497      1858     no       no      Formula for "VTFSD"                     
   498      1865     no       no      COEFFICIENT 'VTUSE       '              
   499      1867     no       no      Formula for "VTUSE"                     
   500      1869     no       no      COEFFICIENT 'VTMUSE      '              
   501      1871     no       no      Formula for "VTMUSE"                    
   502      1874     no       no      COEFFICIENT 'VTFSD_MSH   '              
   503      1876     no       no      Formula for "VTFSD_MSH"                 
   504      1879     no       no      Formula for "VTFSD_MSH"                 
   505      1883     no       no      EQUATION 'E_ptrans            '         
   506      1892     no       no      COEFFICIENT 'VTMPROV     '              
   507      1894     no       no      Formula for "VTMPROV"                   
   508      1899     no       no      COEFFICIENT 'VTRPROV     '              
   509      1901     no       no      Formula for "VTRPROV"                   
   510      1903     no       no      COEFFICIENT 'VT          '              
   511      1905     no       no      Formula for "VT"                        
   512      1908     no       no      COEFFICIENT 'VTMUSESHR   '              
   513      1910     no       no      Formula for "VTMUSESHR"                 
   514      1912     no       no      Formula for "VTMUSESHR"                 
   515      1916     no       no      EQUATION 'E_qtm               '         
   516      1923     no       no      COEFFICIENT 'ESUBS       '              
   517      1926     no       no      READ into 'ESUBS       '                
   518      1928     no       no      Assertion                               
   519      1930     no       no      EQUATION 'E_qst               '         
   520      1940     no       no      COEFFICIENT 'VTSUPPSHR   '              
   521      1942     no       no      Formula for "VTSUPPSHR"                 
   522      1944     no       no      Formula for "VTSUPPSHR"                 
   523      1947     no       no      EQUATION 'E_pt                '         
   524      1961     no       no      VARIABLE 'atm            '              
   525      1963     no       no      VARIABLE 'atf            '              
   526      1965     no       no      VARIABLE 'ats            '              
   527      1967     no       no      VARIABLE 'atd            '              
   528      1969     no       no      VARIABLE 'atall          '              
   529      1972     no       no      EQUATION 'E_atmfsd            '         
   530      1987     no       no      VARIABLE 'tx             '              
   531      1989     no       no      VARIABLE 'txs            '              
   532      2005     no       no      EQUATION 'E_pfob              '         
   533      2010     no       no      COEFFICIENT 'VCIFCOST    '              
   534      2012     no       no      Formula for "VCIFCOST"                  
   535      2015     no       no      ZERODIVIDE instruction                  
   536      2016     no       no      COEFFICIENT 'FOBSHR      '              
   537      2018     no       no      Formula for "FOBSHR"                    
   538      2020     no       no      ZERODIVIDE instruction                  
   539      2022     no       no      COEFFICIENT 'TRNSHR      '              
   540      2024     no       no      Formula for "TRNSHR"                    
   541      2027     no       no      EQUATION 'E_pcif              '         
   542      2037     no       no      VARIABLE 'tm             '              
   543      2039     no       no      VARIABLE 'tms            '              
   544      2050     no       no      EQUATION 'E_pmds              '         
   545      2055     no       no      VARIABLE 'pr             '              
   546      2057     no       no      EQUATION 'E_pr                '         
   547      2077     no       no      COEFFICIENT 'FDCSHR      '              
   548      2079     no       no      Formula for "FDCSHR"                    
   549      2081     no       no      COEFFICIENT 'PDCSHR      '              
   550      2083     no       no      Formula for "PDCSHR"                    
   551      2085     no       no      COEFFICIENT 'GDCSHR      '              
   552      2087     no       no      Formula for "GDCSHR"                    
   553      2089     no       no      COEFFICIENT 'IDCSHR      '              
   554      2091     no       no      Formula for "IDCSHR"                    
   555      2094     no       no      VARIABLE 'qds            '              
   556      2096     no       no      EQUATION 'E_qds               '         
   557      2104     no       no      VARIABLE 'tradslack      '              
   558      2111     no       no      COEFFICIENT 'DSSHR       '              
   559      2113     no       no      Formula for "DSSHR"                     
   560      2115     no       no      COEFFICIENT 'STSHR       '              
   561      2117     no       no      Formula for "STSHR"                     
   562      2119     no       no      COEFFICIENT 'XSSHR       '              
   563      2121     no       no      Formula for "XSSHR"                     
   564      2124     no       no      EQUATION 'E_pds               '         
   565      2136     no       no      VARIABLE 'tfd            '              
   566      2138     no       no      VARIABLE 'tfm            '              
   567      2141     no       no      EQUATION 'E_pfd               '         
   568      2150     no       no      EQUATION 'E_pfm               '         
   569      2159     no       no      VARIABLE 'tpd            '              
   570      2161     no       no      VARIABLE 'tpm            '              
   571      2163     no       no      COEFFICIENT 'LevTPD      '              
   572      2164     no       no      ZERODIVIDE instruction                  
   573      2165     no       no      Formula for "LevTPD"                    
   574      2166     no       no      ZERODIVIDE instruction                  
   575      2168     no       no      EQUATION 'E_ppd               '         
   576      2173     no       no      EQUATION 'E_ppm               '         
   577      2178     no       no      VARIABLE 'tgd            '              
   578      2180     no       no      VARIABLE 'tgm            '              
   579      2183     no       no      EQUATION 'E_pgd               '         
   580      2188     no       no      EQUATION 'E_pgm               '         
   581      2193     no       no      VARIABLE 'tid            '              
   582      2195     no       no      VARIABLE 'tim            '              
   583      2198     no       no      EQUATION 'E_pid               '         
   584      2203     no       no      EQUATION 'E_pim               '         
   585      2214     no       no      VARIABLE 'atpd           '              
   586      2216     no       no      VARIABLE 'atpm           '              
   587      2218     no       no      VARIABLE 'tp             '              
   588      2226     no       no      EQUATION 'E_atpd              '         
   589      2231     no       no      EQUATION 'E_atpm              '         
   590      2242     no       no      VARIABLE 'pe             '              
   591      2244     no       no      VARIABLE 'qe             '              
   592      2252     no       no      COEFFICIENT 'VENDWM      '              
   593      2254     no       no      Formula for "VENDWM"                    
   594      2256     no       no      COEFFICIENT 'ENDWMSHR    '              
   595      2258     no       no      Formula for "ENDWMSHR"                  
   596      2261     no       no      EQUATION 'E_pe1               '         
   597      2266     no       no      EQUATION 'E_qes1              '         
   598      2276     no       no      COEFFICIENT 'ETRAE       '              
   599      2279     no       no      READ into 'ETRAE       '                
   600      2281     no       no      Assertion                               
   601      2283     no       no      EQUATION 'E_qes2              '         
   602      2289     no       no      COEFFICIENT 'REVSHR      '              
   603      2291     no       no      Formula for "REVSHR"                    
   604      2294     no       no      EQUATION 'E_pe2               '         
   605      2304     no       no      VARIABLE 'qesf           '              
   606      2307     no       no      EQUATION 'E_qes3              '         
   607      2320     no       no      VARIABLE 'tfe            '              
   608      2323     no       no      EQUATION 'E_pfe               '         
   609      2328     no       no      EQUATION 'E_pes               '         
   610      2333     no       no      EQUATION 'E_peb               '         
   611      2347     no       no      VARIABLE 'ke             '              
   612      2349     no       no      COEFFICIENT 'VKB         '              
   613      2351     no       no      UPDATE of 'VKB         '                
   614      2353     no       no      READ into 'VKB         '                
   615      2361     no       no      COEFFICIENT 'INVKERATIO  '              
   616      2364     no       no      Formula for "INVKERATIO"                
   617      2367     no       no      EQUATION 'E_ke                '         
   618      2372     no       no      COEFFICIENT 'GROSSCAP    '              
   619      2374     no       no      Formula for "GROSSCAP"                  
   620      2377     no       no      COEFFICIENT 'GRNETRATIO  '              
   621      2379     no       no      Formula for "GRNETRATIO"                
   622      2385     no       no      VARIABLE 'rore           '              
   623      2387     no       no      VARIABLE 'rorc           '              
   624      2389     no       no      VARIABLE 'rental         '              
   625      2392     no       no      EQUATION 'E_rental            '         
   626      2397     no       no      EQUATION 'E_rorc              '         
   627      2402     no       no      EQUATION 'E_kb                '         
   628      2416     no       no      COEFFICIENT 'RORFLEX     '              
   629      2419     no       no      READ into 'RORFLEX     '                
   630      2430     no       no      EQUATION 'E_rore              '         
   631      2435     no       no      COEFFICIENT 'RORDELTA    '              
   632      2438     no       no      READ into 'RORDELTA    '                
   633      2449     no       no      VARIABLE 'rorg           '              
   634      2451     no       no      VARIABLE 'cgdslack       '              
   635      2459     no       no      EQUATION 'E_qinv              '         
   636      2472     no       no      VARIABLE 'expand         '              
   637      2474     no       no      EQUATION 'E_expand            '         
   638      2488     no       no      EQUATION 'E_globalcgds        '         
   639      2506     no       no      VARIABLE 'psaveslack     '              
   640      2516     no       no      EQUATION 'E_psave             '         
   641      2530     no       no      EQUATION 'E_pcgdswld          '         
   642      2563     no       no      VARIABLE 'del_taxrout    '              
   643      2565     no       no      VARIABLE 'del_taxrfu     '              
   644      2567     no       no      VARIABLE 'del_taxriu     '              
   645      2569     no       no      VARIABLE 'del_taxrpc     '              
   646      2571     no       no      VARIABLE 'del_taxrgc     '              
   647      2573     no       no      VARIABLE 'del_taxric     '              
   648      2575     no       no      VARIABLE 'del_taxrexp    '              
   649      2577     no       no      VARIABLE 'del_taxrimp    '              
   650      2579     no       no      VARIABLE 'del_taxrinc    '              
   651      2582     no       no      EQUATION 'E_del_taxrout       '         
   652      2589     no       no      EQUATION 'E_del_taxrfu        '         
   653      2596     no       no      EQUATION 'E_del_taxriu        '         
   654      2610     no       no      EQUATION 'E_del_taxrpc        '         
   655      2619     no       no      EQUATION 'E_del_taxrgc        '         
   656      2628     no       no      EQUATION 'E_del_taxric        '         
   657      2642     no       no      EQUATION 'E_del_taxrexp       '         
   658      2649     no       no      EQUATION 'E_del_taxrimp       '         
   659      2662     no       no      COEFFICIENT 'TAXRINC     '              
   660      2664     no       no      Formula for "TAXRINC"                   
   661      2667     no       no      EQUATION 'E_del_taxrinc       '         
   662      2674     no       no      EQUATION 'E_del_indtaxr       '         
   663      2682     no       no      VARIABLE 'del_ttaxr      '              
   664      2684     no       no      EQUATION 'E_del_ttaxr         '         
   665      2700     no       no      VARIABLE 'pfactor        '              
   666      2702     no       no      COEFFICIENT 'VENDWREG    '              
   667      2704     no       no      Formula for "VENDWREG"                  
   668      2707     no       no      EQUATION 'E_pfactor           '         
   669      2713     no       no      VARIABLE 'pfactwld       '              
   670      2715     no       no      COEFFICIENT 'VENDWWLD    '              
   671      2717     no       no      Formula for "VENDWWLD"                  
   672      2720     no       no      EQUATION 'E_rorg              '         
   673      2738     no       no      VARIABLE 'walras_sup     '              
   674      2740     no       no      VARIABLE 'walras_dem     '              
   675      2742     no       no      VARIABLE 'walraslack     '              
   676      2745     no       no      EQUATION 'E_walras_sup        '         
   677      2754     no       no      EQUATION 'E_walras_dem        '         
   678      2763     no       no      EQUATION 'E_walraslack        '         
   679      2802     no       no      VARIABLE 'vxwfob         '              
   680      2804     no       no      VARIABLE 'vmwcif         '              
   681      2806     no       no      VARIABLE 'vxwreg         '              
   682      2808     no       no      VARIABLE 'vmwreg         '              
   683      2811     no       no      COEFFICIENT 'VXDFOB      '              
   684      2813     no       no      Formula for "VXDFOB"                    
   685      2816     no       no      COEFFICIENT 'VXW         '              
   686      2818     no       no      Formula for "VXW"                       
   687      2821     no       no      COEFFICIENT 'VXWREGION   '              
   688      2823     no       no      Formula for "VXWREGION"                 
   689      2826     no       no      COEFFICIENT 'VMCIF       '              
   690      2828     no       no      Formula for "VMCIF"                     
   691      2831     no       no      COEFFICIENT 'VMWREGION   '              
   692      2833     no       no      Formula for "VMWREGION"                 
   693      2841     no       no      VARIABLE 'pfactreal      '              
   694      2843     no       no      EQUATION 'E_pfactreal         '         
   695      2860     no       no      VARIABLE 'psw            '              
   696      2862     no       no      EQUATION 'E_psw               '         
   697      2874     no       no      VARIABLE 'pdw            '              
   698      2876     no       no      EQUATION 'E_pdw               '         
   699      2886     no       no      VARIABLE 'tot            '              
   700      2888     no       no      EQUATION 'E_tot               '         
   701      2899     no       no      SET 'GDPEX       '                      
   702      2901     no       no      COEFFICIENT 'GDPEXP      '              
   703      2903     no       no      Formula for "GDPEXP"                    
   704      2905     no       no      Formula for "GDPEXP"                    
   705      2906     no       no      Formula for "GDPEXP"                    
   706      2907     no       no      Formula for "GDPEXP"                    
   707      2908     no       no      Formula for "GDPEXP"                    
   708      2909     no       no      Formula for "GDPEXP"                    
   709      2910     no       no      WRITE from 'GDPEXP      '               
   710      2913     no       no      VARIABLE 'vgdp           '              
   711      2915     no       no      COEFFICIENT 'GDP         '              
   712      2917     no       no      Formula for "GDP"                       
   713      2923     no       no      EQUATION 'E_vgdp              '         
   714      2934     no       no      VARIABLE 'pgdp           '              
   715      2936     no       no      VARIABLE 'qgdp           '              
   716      2939     no       no      EQUATION 'E_pgdp              '         
   717      2950     no       no      EQUATION 'E_qgdp              '         
   718      2964     no       no      VARIABLE 'compvalad      '              
   719      2967     no       no      EQUATION 'E_compvalad         '         
   720      2991     no       no      VARIABLE 'pxw            '              
   721      2993     no       no      COEFFICIENT 'VXWCOMMOD   '              
   722      2995     no       no      Formula for "VXWCOMMOD"                 
   723      2997     no       no      COEFFICIENT 'VXWLD       '              
   724      2999     no       no      Formula for "VXWLD"                     
   725      3002     no       no      COEFFICIENT 'VMWCOMMOD   '              
   726      3004     no       no      Formula for "VMWCOMMOD"                 
   727      3007     no       no      COEFFICIENT 'VXDXSB      '              
   728      3009     no       no      Formula for "VXDXSB"                    
   729      3012     no       no      COEFFICIENT 'PW_PM       '              
   730      3014     no       no      Formula for "PW_PM"                     
   731      3017     no       no      COEFFICIENT 'VOW         '              
   732      3019     no       no      Formula for "VOW"                       
   733      3022     no       no      COEFFICIENT 'VWOW        '              
   734      3024     no       no      Formula for "VWOW"                      
   735      3027     no       no      COEFFICIENT 'VWOU        '              
   736      3029     no       no      Formula for "VWOU"                      
   737      3037     no       no      EQUATION 'E_vxwfob            '         
   738      3044     no       no      EQUATION 'E_vxwreg            '         
   739      3049     no       no      VARIABLE 'vxwcom         '              
   740      3051     no       no      EQUATION 'E_vxwcom            '         
   741      3056     no       no      VARIABLE 'vxwwld         '              
   742      3058     no       no      EQUATION 'E_vxwwld            '         
   743      3062     no       no      EQUATION 'E_vmwcif            '         
   744      3068     no       no      EQUATION 'E_vmwreg            '         
   745      3073     no       no      VARIABLE 'vmwcom         '              
   746      3075     no       no      EQUATION 'E_vmwcom            '         
   747      3080     no       no      VARIABLE 'valuew         '              
   748      3082     no       no      EQUATION 'E_valuew            '         
   749      3087     no       no      VARIABLE 'valuewu        '              
   750      3089     no       no      EQUATION 'E_valuewu           '         
   751      3102     no       no      EQUATION 'E_pxw               '         
   752      3109     no       no      VARIABLE 'pxwreg         '              
   753      3111     no       no      EQUATION 'E_pxwreg            '         
   754      3116     no       no      VARIABLE 'pxwcom         '              
   755      3118     no       no      EQUATION 'E_pxwcom            '         
   756      3123     no       no      VARIABLE 'pxwwld         '              
   757      3125     no       no      EQUATION 'E_pxwwld            '         
   758      3129     no       no      VARIABLE 'pmw            '              
   759      3131     no       no      EQUATION 'E_pmw               '         
   760      3136     no       no      VARIABLE 'pmwreg         '              
   761      3138     no       no      EQUATION 'E_pmwreg            '         
   762      3143     no       no      VARIABLE 'pmwcom         '              
   763      3145     no       no      EQUATION 'E_pmwcom            '         
   764      3150     no       no      VARIABLE 'pw             '              
   765      3152     no       no      EQUATION 'E_pw                '         
   766      3157     no       no      VARIABLE 'pwu            '              
   767      3159     no       no      EQUATION 'E_pwu               '         
   768      3173     no       no      VARIABLE 'qxw            '              
   769      3175     no       no      EQUATION 'E_qxw               '         
   770      3185     no       no      VARIABLE 'qxwreg         '              
   771      3187     no       no      EQUATION 'E_qxwreg            '         
   772      3195     no       no      VARIABLE 'qxwcom         '              
   773      3197     no       no      EQUATION 'E_qxwcom            '         
   774      3205     no       no      VARIABLE 'qxwwld         '              
   775      3207     no       no      EQUATION 'E_qxwwld            '         
   776      3214     no       no      VARIABLE 'qmw            '              
   777      3216     no       no      EQUATION 'E_qmw               '         
   778      3224     no       no      VARIABLE 'qmwreg         '              
   779      3226     no       no      EQUATION 'E_qmwreg            '         
   780      3234     no       no      VARIABLE 'qmwcom         '              
   781      3236     no       no      EQUATION 'E_qmwcom            '         
   782      3244     no       no      VARIABLE 'qow            '              
   783      3246     no       no      EQUATION 'E_qow               '         
   784      3254     no       no      VARIABLE 'qowu           '              
   785      3256     no       no      EQUATION 'E_qowu              '         
   786      3270     no       no      VARIABLE 'del_tbalc      '              
   787      3276     no       no      EQUATION 'E_del_tbalc         '         
   788      3282     no       no      VARIABLE 'del_tbal       '              
   789      3284     no       no      EQUATION 'E_del_tbal          '         
   790      3298     no       no      VARIABLE 'ywld           '              
   791      3300     no       no      COEFFICIENT 'INCOMEWLD   '              
   792      3302     no       no      Formula for "INCOMEWLD"                 
   793      3305     no       no      EQUATION 'E_ywld              '         
   794      3309     no       no      VARIABLE 'del_tbalry     '              
   795      3311     no       no      COEFFICIENT 'TBAL        '              
   796      3313     no       no      Formula for "TBAL"                      
   797      3316     no       no      EQUATION 'E_del_tbalry        '         
   798      3330     no       no      COEFFICIENT 'SX_CR       '              
   799      3332     no       no      Formula for "SX_CR"                     
   800      3337     no       no      Formula for "SX_CR"                     
   801      3343     no       no      COEFFICIENT 'VTMCOMM     '              
   802      3345     no       no      Formula for "VTMCOMM"                   
   803      3348     no       no      COEFFICIENT 'VMWDCRALL   '              
   804      3350     no       no      Formula for "VMWDCRALL"                 
   805      3353     no       no      COEFFICIENT 'VMWDATOT    '              
   806      3355     no       no      Formula for "VMWDATOT"                  
   807      3358     no       no      COEFFICIENT 'SM_CR       '              
   808      3360     no       no      Formula for "SM_CR"                     
   809      3363     no       no      COEFFICIENT 'SM_CRS      '              
   810      3365     no       no      Formula for "SM_CRS"                    
   811      3368     no       no      COEFFICIENT 'SMT_CR      '              
   812      3370     no       no      Formula for "SMT_CR"                    
   813      3373     no       no      VARIABLE 'pm_cr          '              
   814      3375     no       no      EQUATION 'E_pm_cr             '         
   815      3382     no       no      VARIABLE 'c1_cr          '              
   816      3384     no       no      EQUATION 'E_c1_cr             '         
   817      3389     no       no      VARIABLE 'c2_cr          '              
   818      3391     no       no      EQUATION 'E_c2_cr             '         
   819      3396     no       no      VARIABLE 'c3_cr          '              
   820      3398     no       no      EQUATION 'E_c3_cr             '         
   821      3403     no       no      VARIABLE 'c1_r           '              
   822      3405     no       no      EQUATION 'E_c1_r              '         
   823      3410     no       no      VARIABLE 'c2_r           '              
   824      3412     no       no      EQUATION 'E_c2_r              '         
   825      3417     no       no      VARIABLE 'c3_r           '              
   826      3419     no       no      EQUATION 'E_c3_r              '         
   827      3424     no       no      VARIABLE 'tot2           '              
   828      3426     no       no      EQUATION 'E_tot2              '         
   829      3466     no       no      VARIABLE 'uelasev        '              
   830      3468     no       no      VARIABLE 'ueprivev       '              
   831      3470     no       no      VARIABLE 'ugev           '              
   832      3472     no       no      VARIABLE 'upev           '              
   833      3474     no       no      VARIABLE 'qsaveev        '              
   834      3476     no       no      VARIABLE 'yev            '              
   835      3478     no       no      VARIABLE 'ypev           '              
   836      3480     no       no      VARIABLE 'ygev           '              
   837      3483     no       no      COEFFICIENT 'INCOMEEV    '              
   838      3485     no       no      Formula for "INCOMEEV"                  
   839      3485     no       no      READ into 'INCOMEEV    '                
   840      3487     no       no      UPDATE of 'INCOMEEV    '                
   841      3490     no       no      COEFFICIENT 'UTILPRIVEV  '              
   842      3492     no       no      Formula for "UTILPRIVEV"                
   843      3492     no       no      READ into 'UTILPRIVEV  '                
   844      3494     no       no      UPDATE of 'UTILPRIVEV  '                
   845      3497     no       no      COEFFICIENT 'UTILGOVEV   '              
   846      3499     no       no      Formula for "UTILGOVEV"                 
   847      3499     no       no      READ into 'UTILGOVEV   '                
   848      3501     no       no      UPDATE of 'UTILGOVEV   '                
   849      3504     no       no      COEFFICIENT 'UTILSAVEEV  '              
   850      3506     no       no      Formula for "UTILSAVEEV"                
   851      3506     no       no      READ into 'UTILSAVEEV  '                
   852      3508     no       no      UPDATE of 'UTILSAVEEV  '                
   853      3516     no       no      EQUATION 'E_ugev              '         
   854      3526     no       no      VARIABLE 'qpev           '              
   855      3530     no       no      COEFFICIENT 'VPPEV       '              
   856      3533     no       no      Formula for "VPPEV"                     
   857      3533     no       no      READ into 'VPPEV       '                
   858      3535     no       no      UPDATE of 'VPPEV       '                
   859      3538     no       no      COEFFICIENT 'VPPREGEV    '              
   860      3540     no       no      Formula for "VPPREGEV"                  
   861      3546     no       no      COEFFICIENT 'CONSHREV    '              
   862      3549     no       no      Formula for "CONSHREV"                  
   863      3551     no       no      COEFFICIENT 'EYEV        '              
   864      3554     no       no      Formula for "EYEV"                      
   865      3562     no       no      EQUATION 'E_qpev              '         
   866      3570     no       no      COEFFICIENT 'UELASPRIVEV '              
   867      3573     no       no      Formula for "UELASPRIVEV"               
   868      3576     no       no      EQUATION 'E_upev              '         
   869      3581     no       no      COEFFICIENT 'XWCONSHREV  '              
   870      3584     no       no      Formula for "XWCONSHREV"                
   871      3587     no       no      EQUATION 'E_ueprivev          '         
   872      3602     no       no      VARIABLE 'ysaveev        '              
   873      3605     no       no      COEFFICIENT 'PRIVEXPEV   '              
   874      3608     no       no      Formula for "PRIVEXPEV"                 
   875      3608     no       no      READ into 'PRIVEXPEV   '                
   876      3610     no       no      UPDATE of 'PRIVEXPEV   '                
   877      3616     no       no      COEFFICIENT 'GOVEXPEV    '              
   878      3619     no       no      Formula for "GOVEXPEV"                  
   879      3619     no       no      READ into 'GOVEXPEV    '                
   880      3621     no       no      UPDATE of 'GOVEXPEV    '                
   881      3624     no       no      COEFFICIENT 'SAVEEV      '              
   882      3627     no       no      Formula for "SAVEEV"                    
   883      3627     no       no      READ into 'SAVEEV      '                
   884      3629     no       no      UPDATE of 'SAVEEV      '                
   885      3632     no       no      COEFFICIENT 'XSHRPRIVEV  '              
   886      3635     no       no      Formula for "XSHRPRIVEV"                
   887      3638     no       no      COEFFICIENT 'XSHRGOVEV   '              
   888      3641     no       no      Formula for "XSHRGOVEV"                 
   889      3644     no       no      COEFFICIENT 'XSHRSAVEEV  '              
   890      3646     no       no      Formula for "XSHRSAVEEV"                
   891      3649     no       no      VARIABLE 'dpavev         '              
   892      3651     no       no      EQUATION 'E_dpavev            '         
   893      3659     no       no      EQUATION 'E_uelasev           '         
   894      3664     no       no      EQUATION 'E_ypev              '         
   895      3669     no       no      EQUATION 'E_ygev              '         
   896      3674     no       no      EQUATION 'E_ysaveev           '         
   897      3679     no       no      EQUATION 'E_qsaveev           '         
   898      3687     no       no      COEFFICIENT 'UTILELASEV  '              
   899      3690     no       no      Formula for "UTILELASEV"                
   900      3690     no       no      READ into 'UTILELASEV  '                
   901      3692     no       no      UPDATE of 'UTILELASEV  '                
   902      3695     no       no      EQUATION 'E_yev               '         
   903      3710     no       no      VARIABLE 'EV             '              
   904      3712     no       no      EQUATION 'E_EV                '         
   905      3717     no       no      VARIABLE 'WEV            '              
   906      3719     no       no      EQUATION 'E_WEV               '         
   907      3734     no       no      SET 'DIR         '                      
   908      3736     no       no      SET 'CTAX        '                      
   909      3738     no       no      SET 'TECHTYPE    '                      
   910      3740     no       no      SET 'COLUMN      '                      
   911      3743     no       no      COEFFICIENT 'EVSCALFACT  '              
   912      3745     no       no      Formula for "EVSCALFACT"                
   913      3748     no       no      COEFFICIENT 'VTMD        '              
   914      3750     no       no      Formula for "VTMD"                      
   915      3753     no       no      VARIABLE 'EV_ALT         '              
   916      3755     no       no      EQUATION 'E_EV_ALT            '         
   917      3807     no       no      VARIABLE 'WEV_ALT        '              
   918      3809     no       no      EQUATION 'E_WEV_ALT           '         
   919      3813     no       no      VARIABLE 'CNTdpar        '              
   920      3815     no       no      EQUATION 'E_CNTdpar           '         
   921      3824     no       no      VARIABLE 'CNTpop         '              
   922      3826     no       no      EQUATION 'E_CNTpop            '         
   923      3831     no       no      VARIABLE 'CNTqor         '              
   924      3833     no       no      EQUATION 'E_CNTqor            '         
   925      3839     no       no      VARIABLE 'CNTqo          '              
   926      3842     no       no      EQUATION 'E_CNTqo             '         
   927      3848     no       no      VARIABLE 'CNTqca         '              
   928      3851     no       no      EQUATION 'E_CNTqca            '         
   929      3857     no       no      VARIABLE 'CNTqe          '              
   930      3860     no       no      EQUATION 'E_CNTqe             '         
   931      3867     no       no      VARIABLE 'CNTqfer        '              
   932      3870     no       no      EQUATION 'E_CNTqfer           '         
   933      3877     no       no      VARIABLE 'CNTqfeer       '              
   934      3880     no       no      EQUATION 'E_CNTqfeer          '         
   935      3887     no       no      VARIABLE 'CNTqfe         '              
   936      3890     no       no      EQUATION 'E_CNTqfe            '         
   937      3896     no       no      VARIABLE 'CNTqfr         '              
   938      3899     no       no      EQUATION 'E_CNTqfr            '         
   939      3908     no       no      VARIABLE 'CNTqfm         '              
   940      3911     no       no      EQUATION 'E_CNTqfm            '         
   941      3917     no       no      VARIABLE 'CNTqfd         '              
   942      3920     no       no      EQUATION 'E_CNTqfd            '         
   943      3926     no       no      VARIABLE 'CNTqpm         '              
   944      3929     no       no      EQUATION 'E_CNTqpm            '         
   945      3934     no       no      VARIABLE 'CNTqpd         '              
   946      3937     no       no      EQUATION 'E_CNTqpd            '         
   947      3942     no       no      VARIABLE 'CNTqpr         '              
   948      3945     no       no      EQUATION 'E_CNTqpr            '         
   949      3954     no       no      VARIABLE 'CNTqia         '              
   950      3957     no       no      EQUATION 'E_CNTqia            '         
   951      3966     no       no      VARIABLE 'CNTqim         '              
   952      3969     no       no      EQUATION 'E_CNTqim            '         
   953      3974     no       no      VARIABLE 'CNTqid         '              
   954      3977     no       no      EQUATION 'E_CNTqid            '         
   955      3982     no       no      VARIABLE 'CNTqgr         '              
   956      3985     no       no      EQUATION 'E_CNTqgr            '         
   957      3994     no       no      VARIABLE 'CNTqgm         '              
   958      3997     no       no      EQUATION 'E_CNTqgm            '         
   959      4002     no       no      VARIABLE 'CNTqgd         '              
   960      4005     no       no      EQUATION 'E_CNTqgd            '         
   961      4010     no       no      VARIABLE 'CNTqxsr        '              
   962      4013     no       no      EQUATION 'E_CNTqxsr           '         
   963      4019     no       no      VARIABLE 'CNTqxs         '              
   964      4022     no       no      EQUATION 'E_CNTqxs            '         
   965      4028     no       no      VARIABLE 'CNTqmsr        '              
   966      4031     no       no      EQUATION 'E_CNTqmsr           '         
   967      4037     no       no      VARIABLE 'CNTqms         '              
   968      4040     no       no      EQUATION 'E_CNTqms            '         
   969      4046     no       no      VARIABLE 'CNTalleffr     '              
   970      4048     no       no      EQUATION 'E_CNTalleffr        '         
   971      4074     no       no      VARIABLE 'CNTalleffcr    '              
   972      4077     no       no      EQUATION 'E_CNTalleffcr       '         
   973      4093     no       no      VARIABLE 'CNTtotr        '              
   974      4096     no       no      EQUATION 'E_CNTtotr           '         
   975      4106     no       no      VARIABLE 'CNTpinv        '              
   976      4108     no       no      EQUATION 'E_CNTpinv           '         
   977      4115     no       no      VARIABLE 'CNTendwr       '              
   978      4117     no       no      EQUATION 'E_CNTendwr          '         
   979      4125     no       no      VARIABLE 'CNTendw        '              
   980      4127     no       no      EQUATION 'E_CNTendw           '         
   981      4133     no       no      VARIABLE 'CNTtechr       '              
   982      4135     no       no      EQUATION 'E_CNTtechr          '         
   983      4153     no       no      VARIABLE 'CNTtech_ao     '              
   984      4156     no       no      EQUATION 'E_CNTtech_ao        '         
   985      4161     no       no      VARIABLE 'CNTtech_afe    '              
   986      4164     no       no      EQUATION 'E_CNTtech_afe       '         
   987      4169     no       no      VARIABLE 'CNTtech_ava    '              
   988      4172     no       no      EQUATION 'E_CNTtech_ava       '         
   989      4177     no       no      VARIABLE 'CNTtech_aint   '              
   990      4180     no       no      EQUATION 'E_CNTtech_aint      '         
   991      4187     no       no      VARIABLE 'CNTtech_af     '              
   992      4190     no       no      EQUATION 'E_CNTtech_af        '         
   993      4196     no       no      VARIABLE 'CNTtech_atmfsd '              
   994      4199     no       no      EQUATION 'E_CNTtech_atmfsd    '         
   995      4205     no       no      VARIABLE 'CNTtech_ams    '              
   996      4208     no       no      EQUATION 'E_CNTtech_ams       '         
   997      4213     no       no      VARIABLE 'CNTkb          '              
   998      4216     no       no      EQUATION 'E_CNTkb             '         
   999      4254     no       no      ZERODIVIDE instruction                  
  1000      4255     no       no      ZERODIVIDE instruction                  
  1001      4257     no       no      COEFFICIENT 'BEVFP       '              
  1002      4259     no       no      Formula for "BEVFP"                     
  1003      4259     no       no      READ into 'BEVFP       '                
  1004      4262     no       no      COEFFICIENT 'BVMFP       '              
  1005      4264     no       no      Formula for "BVMFP"                     
  1006      4264     no       no      READ into 'BVMFP       '                
  1007      4267     no       no      COEFFICIENT 'BVDFP       '              
  1008      4269     no       no      Formula for "BVDFP"                     
  1009      4269     no       no      READ into 'BVDFP       '                
  1010      4272     no       no      COEFFICIENT 'BVOS        '              
  1011      4274     no       no      Formula for "BVOS"                      
  1012      4274     no       no      READ into 'BVOS        '                
  1013      4279     no       no      COEFFICIENT 'BVXSB       '              
  1014      4282     no       no      Formula for "BVXSB"                     
  1015      4282     no       no      READ into 'BVXSB       '                
  1016      4285     no       no      COEFFICIENT 'BVDPB       '              
  1017      4287     no       no      Formula for "BVDPB"                     
  1018      4287     no       no      READ into 'BVDPB       '                
  1019      4290     no       no      COEFFICIENT 'BVDGB       '              
  1020      4292     no       no      Formula for "BVDGB"                     
  1021      4292     no       no      READ into 'BVDGB       '                
  1022      4295     no       no      COEFFICIENT 'BVDFB       '              
  1023      4297     no       no      Formula for "BVDFB"                     
  1024      4297     no       no      READ into 'BVDFB       '                
  1025      4300     no       no      COEFFICIENT 'BEVFB       '              
  1026      4302     no       no      Formula for "BEVFB"                     
  1027      4302     no       no      READ into 'BEVFB       '                
  1028      4305     no       no      COEFFICIENT 'BVDB        '              
  1029      4307     no       no      Formula for "BVDB"                      
  1030      4307     no       no      READ into 'BVDB        '                
  1031      4310     no       no      COEFFICIENT 'BVST        '              
  1032      4313     no       no      Formula for "BVST"                      
  1033      4313     no       no      READ into 'BVST        '                
  1034      4316     no       no      COEFFICIENT 'BVCB        '              
  1035      4318     no       no      Formula for "BVCB"                      
  1036      4318     no       no      READ into 'BVCB        '                
  1037      4320     no       no      Formula for "BVCB"                      
  1038      4320     no       no      READ into 'BVCB        '                
  1039      4324     no       no      COEFFICIENT 'BVEB        '              
  1040      4326     no       no      Formula for "BVEB"                      
  1041      4326     no       no      READ into 'BVEB        '                
  1042      4329     no       no      COEFFICIENT 'BMAKEACT    '              
  1043      4331     no       no      Formula for "BMAKEACT"                  
  1044      4331     no       no      READ into 'BMAKEACT    '                
  1045      4334     no       no      COEFFICIENT 'BOUTAX      '              
  1046      4336     no       no      Formula for "BOUTAX"                    
  1047      4336     no       no      READ into 'BOUTAX      '                
  1048      4339     no       no      COEFFICIENT 'BEVOS       '              
  1049      4341     no       no      Formula for "BEVOS"                     
  1050      4341     no       no      READ into 'BEVOS       '                
  1051      4344     no       no      COEFFICIENT 'BINCTAX     '              
  1052      4346     no       no      Formula for "BINCTAX"                   
  1053      4346     no       no      READ into 'BINCTAX     '                
  1054      4350     no       no      COEFFICIENT 'BVMFB       '              
  1055      4352     no       no      Formula for "BVMFB"                     
  1056      4352     no       no      READ into 'BVMFB       '                
  1057      4355     no       no      COEFFICIENT 'BVMPB       '              
  1058      4357     no       no      Formula for "BVMPB"                     
  1059      4357     no       no      READ into 'BVMPB       '                
  1060      4360     no       no      COEFFICIENT 'BVMPP       '              
  1061      4362     no       no      Formula for "BVMPP"                     
  1062      4362     no       no      READ into 'BVMPP       '                
  1063      4365     no       no      COEFFICIENT 'BVDPP       '              
  1064      4367     no       no      Formula for "BVDPP"                     
  1065      4367     no       no      READ into 'BVDPP       '                
  1066      4370     no       no      COEFFICIENT 'BVMGB       '              
  1067      4372     no       no      Formula for "BVMGB"                     
  1068      4372     no       no      READ into 'BVMGB       '                
  1069      4375     no       no      COEFFICIENT 'BVMGP       '              
  1070      4377     no       no      Formula for "BVMGP"                     
  1071      4377     no       no      READ into 'BVMGP       '                
  1072      4380     no       no      COEFFICIENT 'BVDGP       '              
  1073      4382     no       no      Formula for "BVDGP"                     
  1074      4382     no       no      READ into 'BVDGP       '                
  1075      4385     no       no      COEFFICIENT 'BVMIB       '              
  1076      4387     no       no      Formula for "BVMIB"                     
  1077      4387     no       no      READ into 'BVMIB       '                
  1078      4390     no       no      COEFFICIENT 'BVMIP       '              
  1079      4392     no       no      Formula for "BVMIP"                     
  1080      4392     no       no      READ into 'BVMIP       '                
  1081      4395     no       no      COEFFICIENT 'BVDIP       '              
  1082      4397     no       no      Formula for "BVDIP"                     
  1083      4397     no       no      READ into 'BVDIP       '                
  1084      4400     no       no      COEFFICIENT 'BVDIB       '              
  1085      4402     no       no      Formula for "BVDIB"                     
  1086      4402     no       no      READ into 'BVDIB       '                
  1087      4405     no       no      COEFFICIENT 'BVMSB       '              
  1088      4407     no       no      Formula for "BVMSB"                     
  1089      4407     no       no      READ into 'BVMSB       '                
  1090      4410     no       no      COEFFICIENT 'BVCIF       '              
  1091      4412     no       no      Formula for "BVCIF"                     
  1092      4412     no       no      READ into 'BVCIF       '                
  1093      4415     no       no      COEFFICIENT 'BMTAX       '              
  1094      4417     no       no      Formula for "BMTAX"                     
  1095      4417     no       no      READ into 'BMTAX       '                
  1096      4420     no       no      COEFFICIENT 'BVFOB       '              
  1097      4422     no       no      Formula for "BVFOB"                     
  1098      4422     no       no      READ into 'BVFOB       '                
  1099      4425     no       no      COEFFICIENT 'BXTAX       '              
  1100      4427     no       no      Formula for "BXTAX"                     
  1101      4427     no       no      READ into 'BXTAX       '                
  1102      4430     no       no      COEFFICIENT 'BETAX       '              
  1103      4432     no       no      Formula for "BETAX"                     
  1104      4432     no       no      READ into 'BETAX       '                
  1105      4435     no       no      COEFFICIENT 'BSAVE       '              
  1106      4437     no       no      Formula for "BSAVE"                     
  1107      4437     no       no      READ into 'BSAVE       '                
  1108      4440     no       no      COEFFICIENT 'ISBAL       '              
  1109      4442     no       no      Formula for "ISBAL"                     
  1110      4442     no       no      READ into 'ISBAL       '                
  1111      4444     no       no      ZERODIVIDE instruction                  
  1112      4451     no       no      POSTSIM                                 
  1113      4452     no       no      ZERODIVIDE instruction                  
  1114      4454     no       no      FILE 'WELVIEW             '             
  1115      4460     no       no      SET 'ALLOCEFF    '                      
  1116      4460     no       no      SUBSET 'ENDW        ' of 'ALLOCEFF    ' 
  1117      4460     no       no      SUBSET 'ACTS        ' of 'ALLOCEFF    ' 
  1118      4460     no       no      SUBSET 'COMM        ' of 'ALLOCEFF    ' 
  1119      4462     no       no      SET 'ENDWACTS    '                      
  1120      4462     no       no      SUBSET 'ENDW        ' of 'ENDWACTS    ' 
  1121      4462     no       no      SUBSET 'ACTS        ' of 'ENDWACTS    ' 
  1122      4464     no       no      SET 'TAXSUM      '                      
  1123      4466     no       no      SET 'TYPE        '                      
  1124      4468     no       no      SUBSET 'TYPE        ' of 'CTAX        ' 
  1125      4470     no       no      SET 'PRICES      '                      
  1126      4472     no       no      SET 'ACTIVITY    '                      
  1127      4474     no       no      SET 'COL         '                      
  1128      4476     no       no      SET 'DIREC       '                      
  1129      4478     no       no      SET 'FORM        '                      
  1130      4480     no       no      SET 'COLM        '                      
  1131      4488     no       no      COEFFICIENT 'WELFARE     '              
  1132      4490     no       no      Formula for "WELFARE"                   
  1133      4492     no       no      Formula for "WELFARE"                   
  1134      4494     no       no      Formula for "WELFARE"                   
  1135      4496     no       no      Formula for "WELFARE"                   
  1136      4498     no       no      Formula for "WELFARE"                   
  1137      4500     no       no      Formula for "WELFARE"                   
  1138      4502     no       no      Formula for "WELFARE"                   
  1139      4505     no       no      WRITE from 'WELFARE     '               
  1140      4514     no       no      COEFFICIENT 'CNTalleff   '              
  1141      4516     no       no      Formula for "CNTalleff"                 
  1142      4518     no       no      Formula for "CNTalleff"                 
  1143      4520     no       no      Formula for "CNTalleff"                 
  1144      4523     no       no      WRITE from 'CNTalleff   '               
  1145      4531     no       no      COEFFICIENT 'CNTalleffkr '              
  1146      4533     no       no      Formula for "CNTalleffkr"               
  1147      4535     no       no      WRITE from 'CNTalleffkr '               
  1148      4554     no       no      COEFFICIENT 'OTAX        '              
  1149      4556     no       no      Formula for "OTAX"                      
  1150      4558     no       no      Formula for "OTAX"                      
  1151      4561     no       no      WRITE from 'OTAX        '               
  1152      4570     no       no      COEFFICIENT 'UOUTAX      '              
  1153      4572     no       no      Formula for "UOUTAX"                    
  1154      4575     no       no      COEFFICIENT 'UINCTAX     '              
  1155      4577     no       no      Formula for "UINCTAX"                   
  1156      4581     no       no      COEFFICIENT 'OUTPUT      '              
  1157      4583     no       no      Formula for "OUTPUT"                    
  1158      4589     no       no      Formula for "OUTPUT"                    
  1159      4596     no       no      WRITE from 'OUTPUT      '               
  1160      4618     no       no      COEFFICIENT 'ATAX        '              
  1161      4620     no       no      Formula for "ATAX"                      
  1162      4626     no       no      Formula for "ATAX"                      
  1163      4633     no       no      WRITE from 'ATAX        '               
  1164      4642     no       no      COEFFICIENT 'STAX        '              
  1165      4644     no       no      Formula for "STAX"                      
  1166      4649     no       no      WRITE from 'STAX        '               
  1167      4658     no       no      COEFFICIENT 'ITAX        '              
  1168      4660     no       no      Formula for "ITAX"                      
  1169      4665     no       no      WRITE from 'ITAX        '               
  1170      4674     no       no      COEFFICIENT 'FIRM        '              
  1171      4676     no       no      Formula for "FIRM"                      
  1172      4681     no       no      Formula for "FIRM"                      
  1173      4686     no       no      Formula for "FIRM"                      
  1174      4689     no       no      WRITE from 'FIRM        '               
  1175      4698     no       no      COEFFICIENT 'PRIVATE     '              
  1176      4700     no       no      Formula for "PRIVATE"                   
  1177      4705     no       no      Formula for "PRIVATE"                   
  1178      4710     no       no      Formula for "PRIVATE"                   
  1179      4713     no       no      WRITE from 'PRIVATE     '               
  1180      4722     no       no      COEFFICIENT 'GOVT        '              
  1181      4724     no       no      Formula for "GOVT"                      
  1182      4729     no       no      Formula for "GOVT"                      
  1183      4734     no       no      Formula for "GOVT"                      
  1184      4737     no       no      WRITE from 'GOVT        '               
  1185      4746     no       no      COEFFICIENT 'INVESTMENT  '              
  1186      4748     no       no      Formula for "INVESTMENT"                
  1187      4753     no       no      Formula for "INVESTMENT"                
  1188      4758     no       no      Formula for "INVESTMENT"                
  1189      4761     no       no      WRITE from 'INVESTMENT  '               
  1190      4778     no       no      COEFFICIENT 'TTAX        '              
  1191      4780     no       no      Formula for "TTAX"                      
  1192      4782     no       no      Formula for "TTAX"                      
  1193      4785     no       no      WRITE from 'TTAX        '               
  1194      4794     no       no      COEFFICIENT 'UMTAX       '              
  1195      4796     no       no      Formula for "UMTAX"                     
  1196      4799     no       no      COEFFICIENT 'UXTAX       '              
  1197      4801     no       no      Formula for "UXTAX"                     
  1198      4804     no       no      COEFFICIENT 'TRADE       '              
  1199      4806     no       no      Formula for "TRADE"                     
  1200      4812     no       no      Formula for "TRADE"                     
  1201      4819     no       no      WRITE from 'TRADE       '               
  1202      4828     no       no      COEFFICIENT 'UETAX       '              
  1203      4830     no       no      Formula for "UETAX"                     
  1204      4834     no       no      COEFFICIENT 'WPFACTOR    '              
  1205      4836     no       no      Formula for "WPFACTOR"                  
  1206      4843     no       no      WRITE from 'WPFACTOR    '               
  1207      4845     no       no      WRITE from variable 'CNTqfeer       '   
  1208      4853     no       no      COEFFICIENT 'CNTendowment'              
  1209      4855     no       no      Formula for "CNTendowment"              
  1210      4857     no       no      WRITE from 'CNTendowment'               
  1211      4866     no       no      WRITE from variable 'CNTkb          '   
  1212      4878     no       no      COEFFICIENT 'CNTtech     '              
  1213      4880     no       no      Formula for "CNTtech"                   
  1214      4883     no       no      WRITE from 'CNTtech     '               
  1215      4887     no       no      WRITE from variable 'CNTtech_ao     '   
  1216      4890     no       no      WRITE from variable 'CNTtech_afe    '   
  1217      4893     no       no      WRITE from variable 'CNTtech_ava    '   
  1218      4896     no       no      WRITE from variable 'CNTtech_aint   '   
  1219      4899     no       no      WRITE from variable 'CNTtech_af     '   
  1220      4902     no       no      WRITE from variable 'CNTtech_atmfsd '   
  1221      4905     no       no      WRITE from variable 'CNTtech_ams    '   
  1222      4923     no       no      COEFFICIENT 'WTOT        '              
  1223      4926     no       no      Formula for "WTOT"                      
  1224      4928     no       no      Formula for "WTOT"                      
  1225      4930     no       no      Formula for "WTOT"                      
  1226      4932     no       no      Formula for "WTOT"                      
  1227      4936     no       no      Formula for "WTOT"                      
  1228      4940     no       no      Formula for "WTOT"                      
  1229      4945     no       no      WRITE from 'WTOT        '               
  1230      4954     no       no      COEFFICIENT 'CGDSCOMP    '              
  1231      4956     no       no      Formula for "CGDSCOMP"                  
  1232      4958     no       no      Formula for "CGDSCOMP"                  
  1233      4960     no       no      Formula for "CGDSCOMP"                  
  1234      4962     no       no      WRITE from 'CGDSCOMP    '               
  1235      4983     no       no      COEFFICIENT 'DQXS        '              
  1236      4986     no       no      Formula for "DQXS"                      
  1237      4989     no       no      COEFFICIENT 'DQDS        '              
  1238      4992     no       no      Formula for "DQDS"                      
  1239      4995     no       no      COEFFICIENT 'DQFE        '              
  1240      4998     no       no      Formula for "DQFE"                      
  1241      5001     no       no      COEFFICIENT 'DQFM        '              
  1242      5004     no       no      Formula for "DQFM"                      
  1243      5007     no       no      COEFFICIENT 'DQFD        '              
  1244      5010     no       no      Formula for "DQFD"                      
  1245      5013     no       no      COEFFICIENT 'DQPM        '              
  1246      5016     no       no      Formula for "DQPM"                      
  1247      5019     no       no      COEFFICIENT 'DQPD        '              
  1248      5022     no       no      Formula for "DQPD"                      
  1249      5025     no       no      COEFFICIENT 'DQGM        '              
  1250      5028     no       no      Formula for "DQGM"                      
  1251      5031     no       no      COEFFICIENT 'DQGD        '              
  1252      5034     no       no      Formula for "DQGD"                      
  1253      5037     no       no      COEFFICIENT 'DQO         '              
  1254      5040     no       no      Formula for "DQO"                       
  1255      5043     no       no      COEFFICIENT 'DTOT        '              
  1256      5046     no       no      Formula for "DTOT"                      
  1257      5049     no       no      ZERODIVIDE instruction                  
  1258      5051     no       no      FILE 'GTAPVOL             '             
  1259      5055     no       no      WRITE from 'DQXS        '               
  1260      5057     no       no      WRITE from 'DQDS        '               
  1261      5058     no       no      WRITE from 'DQFE        '               
  1262      5059     no       no      WRITE from 'DQFM        '               
  1263      5060     no       no      WRITE from 'DQFD        '               
  1264      5061     no       no      WRITE from 'DQPM        '               
  1265      5062     no       no      WRITE from 'DQPD        '               
  1266      5063     no       no      WRITE from 'DTOT        '               
  1267      5064     no       no      WRITE from 'DQO         '               
  1268      5065     no       no      WRITE from 'DQGD        '               
  1269      5066     no       no      WRITE from 'DQGM        '               
  1270      5073     no       no      POSTSIM                                 
  1271      5086     no       no      SET 'COSTS       '                      
  1272      5086     no       no      SUBSET 'ENDW        ' of 'COSTS       ' 
  1273      5088     no       no      SET 'GDPIN       '                      
  1274      5088     no       no      SUBSET 'ENDW        ' of 'GDPIN       ' 
  1275      5090     no       no      SET 'SALES       '                      
  1276      5094     no       no      COEFFICIENT 'COSTSUM     '              
  1277      5096     no       no      SET 'S@IntDom    '                      
  1278      5096     no       no      SUBSET 'S@IntDom    ' of 'COSTS       ' 
  1279      5096     no       no      Formula for "COSTSUM"                   
  1280      5098     no       no      SET 'S@IntImp    '                      
  1281      5098     no       no      SUBSET 'S@IntImp    ' of 'COSTS       ' 
  1282      5098     no       no      Formula for "COSTSUM"                   
  1283      5099     no       no      Formula for "COSTSUM"                   
  1284      5100     no       no      SET 'S@PTAX      '                      
  1285      5100     no       no      SUBSET 'S@PTAX      ' of 'COSTS       ' 
  1286      5100     no       no      Formula for "COSTSUM"                   
  1287      5101     no       no      Formula for "COSTSUM"                   
  1288      5102     no       no      Formula for "COSTSUM"                   
  1289      5103     no       no      WRITE from 'COSTSUM     '               
  1290      5106     no       no      COEFFICIENT 'GDPINC      '              
  1291      5108     no       no      Formula for "GDPINC"                    
  1292      5110     no       no      SET 'S@IndTaxes  '                      
  1293      5110     no       no      SUBSET 'S@IndTaxes  ' of 'GDPIN       ' 
  1294      5110     no       no      Formula for "GDPINC"                    
  1295      5111     no       no      WRITE from 'GDPINC      '               
  1296      5114     no       no      COEFFICIENT 'SALESUM     '              
  1297      5116     no       no      Formula for "SALESUM"                   
  1298      5118     no       no      Formula for "SALESUM"                   
  1299      5119     no       no      Formula for "SALESUM"                   
  1300      5120     no       no      Formula for "SALESUM"                   
  1301      5121     no       no      Formula for "SALESUM"                   
  1302      5122     no       no      Formula for "SALESUM"                   
  1303      5123     no       no      Formula for "SALESUM"                   
  1304      5124     no       no      WRITE from 'SALESUM     '               
  1305      5127     no       no      COEFFICIENT 'VDBCHK      '              
  1306      5129     no       no      Formula for "VDBCHK"                    
  1307      5131     no       no      WRITE from 'VDBCHK      '               
  1308      5133     no       no      Formula for "VDBCHK"                    
  1309      5135     no       no      WRITE from 'VDBCHK      '               
  1310      5138     no       no      COEFFICIENT 'TRDCHK      '              
  1311      5140     no       no      Formula for "TRDCHK"                    
  1312      5142     no       no      WRITE from 'TRDCHK      '               
  1313      5144     no       no      Formula for "TRDCHK"                    
  1314      5146     no       no      WRITE from 'TRDCHK      '               
  1315      5149     no       no      COEFFICIENT 'VTMCHK      '              
  1316      5151     no       no      Formula for "VTMCHK"                    
  1317      5153     no       no      WRITE from 'VTMCHK      '               
  1318      5155     no       no      Formula for "VTMCHK"                    
  1319      5157     no       no      WRITE from 'VTMCHK      '               
  1320      5160     no       no      COEFFICIENT 'CHKMKClIMP  '              
  1321      5162     no       no      Formula for "CHKMKClIMP"                
  1322      5167     no       no      WRITE from 'CHKMKClIMP  '               
  1323      5169     no       no      Formula for "CHKMKClIMP"                
  1324      5172     no       no      WRITE from 'CHKMKClIMP  '               
  1325      5175     no       no      COEFFICIENT 'VOSCHK      '              
  1326      5177     no       no      Formula for "VOSCHK"                    
  1327      5179     no       no      WRITE from 'VOSCHK      '               
  1328      5181     no       no      Formula for "VOSCHK"                    
  1329      5183     no       no      WRITE from 'VOSCHK      '               
  1330      5186     no       no      POSTSIM                                 
  1331      5187     no       no      WRITE from 'VDBCHK      '               
  1332      5189     no       no      WRITE from 'TRDCHK      '               
  1333      5190     no       no      WRITE from 'VTMCHK      '               
  1334      5191     no       no      WRITE from 'CHKMKClIMP  '               
  1335      5192     no       no      WRITE from 'VOSCHK      '               
  1336      5193     no       no      POSTSIM                                 
  1337      5195     no       no      Assertion                               
  1338      5197     no       no      Assertion                               
  1339      5198     no       no      Assertion                               
  1340      5199     no       no      Assertion                               
  1341      5200     no       no      Assertion                               




 ============
 ++ SET TABLE
 ============

                    Defined   [Max] Inter             Set numbers this
  Number    Name    at line    Size temp? Elements    is subset of
  ---------------------------------------------------------------------
     1  REG           153 [       0]  no   read 
     2  COMM          156 [       0]  no   read     12    18
     3  MARG          159 [       0]  no   read      2
     4  NMRG          164 [       0]  no   other     2
     5  ACTS          166 [       0]  no   read     18    19
     6  ENDW          169 [       0]  no   read     12    18    19    28
                                                     29
     7  ENDWC         172         1   no   fixed     6    10
     8  ENDWM         176 [       0]  no   read      6    10
     9  ENDWS         181 [       0]  no   read      6    10
    10  ENDWMS        186 [       0]  no   other     6
    11  ENDWF         192 [       0]  no   other     6
    12  DEMD          194 [       0]  no   other
    13  GDPEX        2899         6   no   fixed
    14  DIR          3734         2   no   fixed
    15  CTAX         3736         8   no   fixed
    16  TECHTYPE     3738         7   no   fixed
    17  COLUMN       3740         7   no   fixed
    18  ALLOCEFF     4460 [       0]  no   other
    19  ENDWACTS     4462 [       0]  no   other
    20  TAXSUM       4464         3   no   fixed
    21  TYPE         4466         2   no   fixed    15
    22  PRICES       4470         3   no   fixed
    23  ACTIVITY     4472         4   no   fixed
    24  COL          4474         4   no   fixed
    25  DIREC        4476         2   no   fixed
    26  FORM         4478         2   no   fixed
    27  COLM         4480         3   no   fixed
    28  COSTS        5086 [       0]  no   other
    29  GDPIN        5088 [       0]  no   other
    30  SALES        5090         6   no   fixed
    31  S@IntDom     5096         1   no   fixed    28
    32  S@IntImp     5098         1   no   fixed    28
    33  S@PTAX       5100         1   no   fixed    28
    34  S@IndTaxes   5110         1   no   fixed    29




 ===============
 ++ SUBSET TABLE
 ===============
 
SSNO=1. Set 3 "MARG" is subset of set 2 "COMM"
SSNO=2. Set 4 "NMRG" is subset of set 2 "COMM"
SSNO=3. Set 7 "ENDWC" is subset of set 6 "ENDW"
SSNO=4. Set 8 "ENDWM" is subset of set 6 "ENDW"
SSNO=5. Set 9 "ENDWS" is subset of set 6 "ENDW"
SSNO=6. Set 8 "ENDWM" is subset of set 10 "ENDWMS"
SSNO=7. Set 9 "ENDWS" is subset of set 10 "ENDWMS"
SSNO=8. Set 10 "ENDWMS" is subset of set 6 "ENDW"
SSNO=9. Set 7 "ENDWC" is subset of set 10 "ENDWMS"
SSNO=10. Set 11 "ENDWF" is subset of set 6 "ENDW"
SSNO=11. Set 6 "ENDW" is subset of set 12 "DEMD"
SSNO=12. Set 2 "COMM" is subset of set 12 "DEMD"
SSNO=13. Set 6 "ENDW" is subset of set 18 "ALLOCEFF"
SSNO=14. Set 5 "ACTS" is subset of set 18 "ALLOCEFF"
SSNO=15. Set 2 "COMM" is subset of set 18 "ALLOCEFF"
SSNO=16. Set 6 "ENDW" is subset of set 19 "ENDWACTS"
SSNO=17. Set 5 "ACTS" is subset of set 19 "ENDWACTS"
SSNO=18. Set 21 "TYPE" is subset of set 15 "CTAX"
SSNO=19. Set 6 "ENDW" is subset of set 28 "COSTS"
SSNO=20. Set 6 "ENDW" is subset of set 29 "GDPIN"
SSNO=21. Set 31 "S@IntDom" is subset of set 28 "COSTS"
SSNO=22. Set 32 "S@IntImp" is subset of set 28 "COSTS"
SSNO=23. Set 33 "S@PTAX" is subset of set 28 "COSTS"
SSNO=24. Set 34 "S@IndTaxes" is subset of set 29 "GDPIN"




 =============
 ++ FILE TABLE
 =============

         Logical            Defined  File  File
  Number  Name              at line  Type  Form  Actual name (if given)
  --------------------------------------------------------------------
     1  GTAPSETS                83    old  head
     2  GTAPDATA                85    old  head
     3  GTAPPARM                87    old  head
     4  GTAPSUM                 89    new  head
     5  WELVIEW               4454    new  head
     6  GTAPVOL               5051    new  head




 =================
 ++ VARIABLE TABLE
 =================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1   pds               244     2  perc       2     1
     2   qfd               246     3  perc       2     5     1
     3   pms               256     2  perc       2     1
     4   qfm               258     3  perc       2     5     1
     5   pfd               268     3  perc       2     5     1
     6   pfm               278     3  perc       2     5     1
     7   pes               288     3  perc       6     5     1
     8   qes               290     3  perc       6     5     1
     9   peb               300     3  perc       6     5     1
    10   qfe               302     3  perc       6     5     1
    11   pfe               312     3  perc       6     5     1
    12   ps                327     3  perc       2     5     1
    13   qca               329     3  perc       2     5     1
    14   pca               339     3  perc       2     5     1
    15   qgd               354     2  perc       2     1
    16   qgm               364     2  perc       2     1
    17   pgd               374     2  perc       2     1
    18   pgm               384     2  perc       2     1
    19   qpd               399     2  perc       2     1
    20   qpm               409     2  perc       2     1
    21   ppd               419     2  perc       2     1
    22   ppm               429     2  perc       2     1
    23   qid               444     2  perc       2     1
    24   qim               454     2  perc       2     1
    25   pid               464     2  perc       2     1
    26   pim               474     2  perc       2     1
    27   psave             488     1  perc       1
    28   qsave             490     1  perc       1
    29   pinv              504     1  perc       1
    30   kb                506     1  perc       1
    31   qxs               525     3  perc       2     1     1
    32   pfob              536     3  perc       2     1     1
    33   pcif              547     3  perc       2     1     1
    34   pmds              558     3  perc       2     1     1
    35   qst               573     2  perc       3     1
    36   y                 867     1  perc       1
    37   pop               869     1  perc       1
    38   pgov              872     1  perc       1
    39   yg                874     1  perc       1
    40   ug                876     1  perc       1
    41   ppriv             879     1  perc       1
    42   yp                881     1  perc       1
    43   uepriv            883     1  perc       1
    44   up                885     1  perc       1
    45   to                888     3  perc       2     5     1
    46   tinc              890     3  perc       6     5     1
    47   endwslack         892     2  perc       6     1
    48   qms               900     2  perc       2     1
    49   globalcgds        902     0  perc
    50   pcgdswld          904     0  perc
    51   po                964     2  perc       5     1
    52   qo                966     2  perc       5     1
    53   ao                968     2  perc       5     1
    54   pint              970     2  perc       5     1
    55   qint              972     2  perc       5     1
    56   aint              974     2  perc       5     1
    57   pva               990     2  perc       5     1
    58   qva               992     2  perc       5     1
    59   ava               994     2  perc       5     1
    60   pfa              1004     3  perc       2     5     1
    61   qfa              1006     3  perc       2     5     1
    62   afa              1008     3  perc       2     5     1
    63   afe              1010     3  perc       6     5     1
    64   profitslack      1012     2  perc       5     1
    65   aosec            1148     1  perc       5
    66   aoreg            1150     1  perc       1
    67   aoall            1152     2  perc       5     1
    68   afcom            1160     1  perc       2
    69   afsec            1162     1  perc       5
    70   afreg            1164     1  perc       1
    71   afall            1166     3  perc       2     5     1
    72   avasec           1174     1  perc       5
    73   avareg           1176     1  perc       1
    74   avaall           1178     2  perc       5     1
    75   afecom           1186     1  perc       6
    76   afesec           1188     1  perc       5
    77   afereg           1190     1  perc       1
    78   afeall           1192     3  perc       6     5     1
    79   aintsec          1200     1  perc       5
    80   aintreg          1202     1  perc       1
    81   aintall          1204     2  perc       5     1
    82   pb               1276     2  perc       5     1
    83   qc               1317     2  perc       2     1
    84   fincome          1344     1  perc       1
    85   incomeslack      1359     1  perc       1
    86   del_indtaxr      1362     1  chng       1
    87   uelas            1385     1  perc       1
    88   dpsave           1387     1  perc       1
    89   dpgov            1389     1  perc       1
    90   dppriv           1391     1  perc       1
    91   dpav             1409     1  perc       1
    92   p                1437     1  perc       1
    93   au               1446     1  perc       1
    94   dpsum            1448     1  perc       1
    95   u                1450     1  perc       1
    96   ppa              1565     2  perc       2     1
    97   qpa              1567     2  perc       2     1
    98   pga              1633     2  perc       2     1
    99   qga              1635     2  perc       2     1
   100   pia              1685     2  perc       2     1
   101   qia              1687     2  perc       2     1
   102   qinv             1689     1  perc       1
   103   ams              1768     3  perc       2     1     1
   104   ptrans           1808     3  perc       2     1     1
   105   qtmfsd           1810     4  perc       3     2     1     1
   106   pt               1817     1  perc       3
   107   qtm              1819     1  perc       3
   108   atmfsd           1821     4  perc       3     2     1     1
   109   atm              1961     1  perc       2
   110   atf              1963     1  perc       2
   111   ats              1965     1  perc       1
   112   atd              1967     1  perc       1
   113   atall            1969     4  perc       3     2     1     1
   114   tx               1987     2  perc       2     1
   115   txs              1989     3  perc       2     1     1
   116   tm               2037     2  perc       2     1
   117   tms              2039     3  perc       2     1     1
   118   pr               2055     2  perc       2     1
   119   qds              2094     2  perc       2     1
   120   tradslack        2104     2  perc       2     1
   121   tfd              2136     3  perc       2     5     1
   122   tfm              2138     3  perc       2     5     1
   123   tpd              2159     2  perc       2     1
   124   tpm              2161     2  perc       2     1
   125   tgd              2178     2  perc       2     1
   126   tgm              2180     2  perc       2     1
   127   tid              2193     2  perc       2     1
   128   tim              2195     2  perc       2     1
   129   atpd             2214     2  perc       2     1
   130   atpm             2216     2  perc       2     1
   131   tp               2218     1  perc       1
   132   pe               2242     2  perc      10     1
   133   qe               2244     2  perc      10     1
   134   qesf             2304     3  perc      11     5     1
   135   tfe              2320     3  perc       6     5     1
   136   ke               2347     1  perc       1
   137   rore             2385     1  perc       1
   138   rorc             2387     1  perc       1
   139   rental           2389     1  perc       1
   140   rorg             2449     0  perc
   141   cgdslack         2451     1  perc       1
   142   expand           2472     2  perc       7     1
   143   psaveslack       2506     1  perc       1
   144   del_taxrout      2563     1  chng       1
   145   del_taxrfu       2565     1  chng       1
   146   del_taxriu       2567     1  chng       1
   147   del_taxrpc       2569     1  chng       1
   148   del_taxrgc       2571     1  chng       1
   149   del_taxric       2573     1  chng       1
   150   del_taxrexp      2575     1  chng       1
   151   del_taxrimp      2577     1  chng       1
   152   del_taxrinc      2579     1  chng       1
   153   del_ttaxr        2682     1  chng       1
   154   pfactor          2700     1  perc       1
   155   pfactwld         2713     0  perc
   156   walras_sup       2738     0  perc
   157   walras_dem       2740     0  perc
   158   walraslack       2742     0  perc
   159   vxwfob           2802     2  perc       2     1
   160   vmwcif           2804     2  perc       2     1
   161   vxwreg           2806     1  perc       1
   162   vmwreg           2808     1  perc       1
   163   pfactreal        2841     3  perc       6     5     1
   164   psw              2860     1  perc       1
   165   pdw              2874     1  perc       1
   166   tot              2886     1  perc       1
   167   vgdp             2913     1  perc       1
   168   pgdp             2934     1  perc       1
   169   qgdp             2936     1  perc       1
   170   compvalad        2964     2  perc       5     1
   171   pxw              2991     2  perc       2     1
   172   vxwcom           3049     1  perc       2
   173   vxwwld           3056     0  perc
   174   vmwcom           3073     1  perc       2
   175   valuew           3080     1  perc       2
   176   valuewu          3087     1  perc       2
   177   pxwreg           3109     1  perc       1
   178   pxwcom           3116     1  perc       2
   179   pxwwld           3123     0  perc
   180   pmw              3129     2  perc       2     1
   181   pmwreg           3136     1  perc       1
   182   pmwcom           3143     1  perc       2
   183   pw               3150     1  perc       2
   184   pwu              3157     1  perc       2
   185   qxw              3173     2  perc       2     1
   186   qxwreg           3185     1  perc       1
   187   qxwcom           3195     1  perc       2
   188   qxwwld           3205     0  perc
   189   qmw              3214     2  perc       2     1
   190   qmwreg           3224     1  perc       1
   191   qmwcom           3234     1  perc       2
   192   qow              3244     1  perc       2
   193   qowu             3254     1  perc       2
   194   del_tbalc        3270     2  chng       2     1
   195   del_tbal         3282     1  chng       1
   196   ywld             3298     0  perc
   197   del_tbalry       3309     1  chng       1
   198   pm_cr            3373     2  perc       2     1
   199   c1_cr            3382     2  perc       2     1
   200   c2_cr            3389     2  perc       2     1
   201   c3_cr            3396     2  perc       2     1
   202   c1_r             3403     1  perc       1
   203   c2_r             3410     1  perc       1
   204   c3_r             3417     1  perc       1
   205   tot2             3424     1  perc       1
   206   uelasev          3466     1  perc       1
   207   ueprivev         3468     1  perc       1
   208   ugev             3470     1  perc       1
   209   upev             3472     1  perc       1
   210   qsaveev          3474     1  perc       1
   211   yev              3476     1  perc       1
   212   ypev             3478     1  perc       1
   213   ygev             3480     1  perc       1
   214   qpev             3526     2  perc       2     1
   215   ysaveev          3602     1  perc       1
   216   dpavev           3649     1  perc       1
   217   EV               3710     1  chng       1
   218   WEV              3717     0  chng
   219   EV_ALT           3753     1  chng       1
   220   WEV_ALT          3807     0  chng
   221   CNTdpar          3813     1  chng       1
   222   CNTpop           3824     1  chng       1
   223   CNTqor           3831     1  chng       1
   224   CNTqo            3839     2  chng       5     1
   225   CNTqca           3848     3  chng       2     5     1
   226   CNTqe            3857     2  chng       6     1
   227   CNTqfer          3867     1  chng       1
   228   CNTqfeer         3877     2  chng       6     1
   229   CNTqfe           3887     3  chng       6     5     1
   230   CNTqfr           3896     2  chng       1    14
   231   CNTqfm           3908     3  chng       2     5     1
   232   CNTqfd           3917     3  chng       2     5     1
   233   CNTqpm           3926     2  chng       2     1
   234   CNTqpd           3934     2  chng       2     1
   235   CNTqpr           3942     2  chng       1    14
   236   CNTqia           3954     2  chng       1    14
   237   CNTqim           3966     2  chng       2     1
   238   CNTqid           3974     2  chng       2     1
   239   CNTqgr           3982     2  chng       1    14
   240   CNTqgm           3994     2  chng       2     1
   241   CNTqgd           4002     2  chng       2     1
   242   CNTqxsr          4010     1  chng       1
   243   CNTqxs           4019     3  chng       2     1     1
   244   CNTqmsr          4028     1  chng       1
   245   CNTqms           4037     3  chng       2     1     1
   246   CNTalleffr       4046     2  chng       1    15
   247   CNTalleffcr      4074     2  chng       2     1
   248   CNTtotr          4093     1  chng       1
   249   CNTpinv          4106     1  chng       1
   250   CNTendwr         4115     1  chng       1
   251   CNTendw          4125     2  chng       6     1
   252   CNTtechr         4133     2  chng      16     1
   253   CNTtech_ao       4153     2  chng       5     1
   254   CNTtech_afe      4161     3  chng       6     5     1
   255   CNTtech_ava      4169     2  chng       5     1
   256   CNTtech_aint     4177     2  chng       5     1
   257   CNTtech_af       4187     3  chng       2     5     1
   258   CNTtech_atmfsd   4196     4  chng       3     2     1     1
   259   CNTtech_ams      4205     3  chng       2     1     1
   260   CNTkb            4213     1  chng       1




 ====================
 ++ COEFFICIENT TABLE
 ====================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1    VERNUM           146     0  real
     2    VDFB             248     3  real       2     5     1
     3    VMFB             260     3  real       2     5     1
     4    VDFP             270     3  real       2     5     1
     5    VMFP             280     3  real       2     5     1
     6    EVOS             292     3  real       6     5     1
     7    EVFB             304     3  real       6     5     1
     8    EVFP             314     3  real       6     5     1
     9    MAKES            331     3  real       2     5     1
    10    MAKEB            341     3  real       2     5     1
    11    VDGB             356     2  real       2     1
    12    VMGB             366     2  real       2     1
    13    VDGP             376     2  real       2     1
    14    VMGP             386     2  real       2     1
    15    VDPB             401     2  real       2     1
    16    VMPB             411     2  real       2     1
    17    VDPP             421     2  real       2     1
    18    VMPP             431     2  real       2     1
    19    VDIB             446     2  real       2     1
    20    VMIB             456     2  real       2     1
    21    VDIP             466     2  real       2     1
    22    VMIP             476     2  real       2     1
    23    SAVE             492     1  real       1
    24    VDEP             508     1  real       1
    25    VXSB             527     3  real       2     1     1
    26    VFOB             538     3  real       2     1     1
    27    VCIF             549     3  real       2     1     1
    28    VMSB             560     3  real       2     1     1
    29    VST              575     2  real       3     1
    30    VFP              596     3  real      12     5     1
    31    VOS              604     2  real       5     1
    32    VES              610     2  real       6     1
    33    MAKEBACT         616     2  real       5     1
    34    MAKEBCOM         621     2  real       2     1
    35    VDB              626     2  real       2     1
    36    VCB              632     2  real       2     1
    37    VGP              668     2  real       2     1
    38    GOVEXP           672     1  real       1
    39    VPP              678     2  real       2     1
    40    PRIVEXP          682     1  real       1
    41    VIP              688     2  real       2     1
    42    INCOME           694     1  real       1
    43    PTAX             705     3  real       2     5     1
    44    TAXROUT          709     1  real       1
    45    DGTAX            715     2  real       2     1
    46    MGTAX            719     2  real       2     1
    47    TAXRGC           723     1  real       1
    48    DPTAX            729     2  real       2     1
    49    MPTAX            733     2  real       2     1
    50    TAXRPC           737     1  real       1
    51    DITAX            743     2  real       2     1
    52    MITAX            747     2  real       2     1
    53    TAXRIC           751     1  real       1
    54    DFTAX            757     3  real       2     5     1
    55    MFTAX            761     3  real       2     5     1
    56    TAXRIU           765     1  real       1
    57    ETAX             771     3  real       6     5     1
    58    TAXRFU           775     1  real       1
    59    INCTAX           781     3  real       6     5     1
    60    XTAXD            787     3  real       2     1     1
    61    TAXREXP          791     1  real       1
    62    MTAX             797     3  real       2     1     1
    63    TAXRIMP          801     1  real       1
    64    REGINV           816     1  real       1
    65    NETINV           820     1  real       1
    66    GLOBINV          826     0  real
    67    CONSHR           832     2  real       2     1
    68    INCPAR           837     2  real       2     1
    69    UELASPRIV        841     1  real       1
    70    ESUBD            848     2  real       2     1
    71    ESUBT            976     2  real       5     1
    72    STC             1019     3  real      12     5     1
    73    ESUBC           1045     2  real       5     1
    74    TINTCOM         1059     2  real       5     1
    75    INTSHR          1063     3  real       2     5     1
    76    ESUBVA          1079     2  real       5     1
    77    VVA             1086     2  real       5     1
    78    DEFAULTVASHR    1090     1  real       6
    79    VASHR           1096     3  real       6     5     1
    80    FMSHR           1130     3  real       2     5     1
    81    ETRAQ           1234     2  real       5     1
    82    MAKESCOM        1241     2  real       5     1
    83    MAKESACTSHR     1245     3  real       2     5     1
    84    MAKEBACTSHR     1278     3  real       2     5     1
    85    ESUBQ           1291     2  real       2     1
    86    MAKEBCOMSHR     1319     3  real       2     5     1
    87    FY              1346     1  real       1
    88    INDTAX          1364     1  real       1
    89    XSHRPRIV        1411     1  real       1
    90    XSHRGOV         1415     1  real       1
    91    XSHRSAVE        1419     1  real       1
    92    DPARSUM         1452     1  real       1
    93    UTILELAS        1459     1  real       1
    94    DPARPRIV        1464     1  real       1
    95    DPARGOV         1468     1  real       1
    96    DPARSAVE        1473     1  real       1
    97    UTILPRIV        1478     1  real       1
    98    UTILGOV         1485     1  real       1
    99    UTILSAVE        1492     1  real       1
   100    SUBPAR          1528     2  real       2     1
   101    ALPHA           1533     2  real       2     1
   102    APE             1537     3  real       2     2     1
   103    EY              1548     2  real       2     1
   104    EP              1557     3  real       2     2     1
   105    XWCONSHR        1582     2  real       2     1
   106    PMSHR           1613     2  real       2     1
   107    ESUBG           1637     1  real       1
   108    GMSHR           1660     2  real       2     1
   109    IMSHR           1713     2  real       2     1
   110    VMB             1733     2  real       2     1
   111    FMCSHR          1739     3  real       2     5     1
   112    PMCSHR          1744     2  real       2     1
   113    GMCSHR          1749     2  real       2     1
   114    IMCSHR          1754     2  real       2     1
   115    ESUBM           1770     2  real       2     1
   116    IMPBASIC        1784     2  real       2     1
   117    MSHRS           1788     3  real       2     1     1
   118    VTMFSD          1848     4  real       3     2     1     1
   119    VTFSD           1856     3  real       2     1     1
   120    VTUSE           1865     0  real
   121    VTMUSE          1869     1  real       3
   122    VTFSD_MSH       1874     4  real       3     2     1     1
   123    VTMPROV         1892     1  real       3
   124    VTRPROV         1899     1  real       1
   125    VT              1903     0  real
   126    VTMUSESHR       1908     4  real       3     2     1     1
   127    ESUBS           1923     1  real       3
   128    VTSUPPSHR       1940     2  real       3     1
   129    VCIFCOST        2010     3  real       2     1     1
   130    FOBSHR          2016     3  real       2     1     1
   131    TRNSHR          2022     3  real       2     1     1
   132    FDCSHR          2077     3  real       2     5     1
   133    PDCSHR          2081     2  real       2     1
   134    GDCSHR          2085     2  real       2     1
   135    IDCSHR          2089     2  real       2     1
   136    DSSHR           2111     2  real       2     1
   137    STSHR           2115     2  real       3     1
   138    XSSHR           2119     3  real       2     1     1
   139    LevTPD          2163     2  real       2     1
   140    VENDWM          2252     2  real       8     1
   141    ENDWMSHR        2256     3  real       8     5     1
   142    ETRAE           2276     2  real       6     1
   143    REVSHR          2289     3  real       6     5     1
   144    VKB             2349     1  real       1
   145    INVKERATIO      2361     1  real       1
   146    GROSSCAP        2372     1  real       1
   147    GRNETRATIO      2377     1  real       1
   148    RORFLEX         2416     1  real       1
   149    RORDELTA        2435     0  int 
   150    TAXRINC         2662     1  real       1
   151    VENDWREG        2702     1  real       1
   152    VENDWWLD        2715     0  real
   153    VXDFOB          2811     2  real       2     1
   154    VXW             2816     2  real       2     1
   155    VXWREGION       2821     1  real       1
   156    VMCIF           2826     2  real       2     1
   157    VMWREGION       2831     1  real       1
   158    GDPEXP          2901     2  real       1    13
   159    GDP             2915     1  real       1
   160    VXWCOMMOD       2993     1  real       2
   161    VXWLD           2997     0  real
   162    VMWCOMMOD       3002     1  real       2
   163    VXDXSB          3007     2  real       2     1
   164    PW_PM           3012     2  real       2     1
   165    VOW             3017     2  real       2     1
   166    VWOW            3022     1  real       2
   167    VWOU            3027     1  real       2
   168    INCOMEWLD       3300     0  real
   169    TBAL            3311     1  real       1
   170    SX_CR           3330     2  real       2     1
   171    VTMCOMM         3343     2  real       3     1
   172    VMWDCRALL       3348     2  real       2     1
   173    VMWDATOT        3353     1  real       1
   174    SM_CR           3358     2  real       2     1
   175    SM_CRS          3363     3  real       2     1     1
   176    SMT_CR          3368     2  real       3     1
   177    INCOMEEV        3483     1  real       1
   178    UTILPRIVEV      3490     1  real       1
   179    UTILGOVEV       3497     1  real       1
   180    UTILSAVEEV      3504     1  real       1
   181    VPPEV           3530     2  real       2     1
   182    VPPREGEV        3538     1  real       1
   183    CONSHREV        3546     2  real       2     1
   184    EYEV            3551     2  real       2     1
   185    UELASPRIVEV     3570     1  real       1
   186    XWCONSHREV      3581     2  real       2     1
   187    PRIVEXPEV       3605     1  real       1
   188    GOVEXPEV        3616     1  real       1
   189    SAVEEV          3624     1  real       1
   190    XSHRPRIVEV      3632     1  real       1
   191    XSHRGOVEV       3638     1  real       1
   192    XSHRSAVEEV      3644     1  real       1
   193    UTILELASEV      3687     1  real       1
   194    EVSCALFACT      3743     1  real       1
   195    VTMD            3748     2  real       3     1
   196    BEVFP           4257     3  real       6     5     1
   197    BVMFP           4262     3  real       2     5     1
   198    BVDFP           4267     3  real       2     5     1
   199    BVOS            4272     2  real       5     1
   200    BVXSB           4279     3  real       2     1     1
   201    BVDPB           4285     2  real       2     1
   202    BVDGB           4290     2  real       2     1
   203    BVDFB           4295     3  real       2     5     1
   204    BEVFB           4300     3  real       6     5     1
   205    BVDB            4305     2  real       2     1
   206    BVST            4310     2  real       3     1
   207    BVCB            4316     2  real       2     1
   208    BVEB            4324     3  real       6     5     1
   209    BMAKEACT        4329     2  real       5     1
   210    BOUTAX          4334     2  real       5     1
   211    BEVOS           4339     3  real       6     5     1
   212    BINCTAX         4344     2  real       6     1
   213    BVMFB           4350     3  real       2     5     1
   214    BVMPB           4355     2  real       2     1
   215    BVMPP           4360     2  real       2     1
   216    BVDPP           4365     2  real       2     1
   217    BVMGB           4370     2  real       2     1
   218    BVMGP           4375     2  real       2     1
   219    BVDGP           4380     2  real       2     1
   220    BVMIB           4385     2  real       2     1
   221    BVMIP           4390     2  real       2     1
   222    BVDIP           4395     2  real       2     1
   223    BVDIB           4400     2  real       2     1
   224    BVMSB           4405     3  real       2     1     1
   225    BVCIF           4410     3  real       2     1     1
   226    BMTAX           4415     3  real       2     1     1
   227    BVFOB           4420     3  real       2     1     1
   228    BXTAX           4425     3  real       2     1     1
   229    BETAX           4430     3  real       6     5     1
   230    BSAVE           4435     1  real       1
   231    ISBAL           4440     1  real       1
   232    WELFARE         4488     2  real       1    17
   233    CNTalleff       4514     2  real      18     1
   234    CNTalleffkr     4531     2  real       1    15
   235    OTAX            4554     2  real      19     1
   236    UOUTAX          4570     2  real       5     1
   237    UINCTAX         4575     2  real       6     1
   238    OUTPUT          4581     3  real      19     1    24
   239    ATAX            4618     4  real       2    23     1    14
   240    STAX            4642     4  real       2     5     1    14
   241    ITAX            4658     3  real       2     1    14
   242    FIRM            4674     5  real       2     5     1    14    24

   243    PRIVATE         4698     4  real       2     1    14    24
   244    GOVT            4722     4  real       2     1    14    24
   245    INVESTMENT      4746     4  real       2     1    14    24
   246    TTAX            4778     4  real       2     1     1    21
   247    UMTAX           4794     3  real       2     1     1
   248    UXTAX           4799     3  real       2     1     1
   249    TRADE           4804     5  real       2     1     1    24    25

   250    UETAX           4828     3  real       6     5     1
   251    WPFACTOR        4834     4  real       6     5     1    24
   252    CNTendowment    4853     2  real       1     6
   253    CNTtech         4878     2  real       1    16
   254    WTOT            4923     4  real       2     1    22    26
   255    CGDSCOMP        4954     2  real       1    27
   256    DQXS            4983     3  real       2     1     1
   257    DQDS            4989     2  real       2     1
   258    DQFE            4995     3  real       6     5     1
   259    DQFM            5001     3  real       2     5     1
   260    DQFD            5007     3  real       2     5     1
   261    DQPM            5013     2  real       2     1
   262    DQPD            5019     2  real       2     1
   263    DQGM            5025     2  real       2     1
   264    DQGD            5031     2  real       2     1
   265    DQO             5037     2  real       2     1
   266    DTOT            5043     2  real       1     1
   267    COSTSUM         5094     3  real       5     1    28
   268    GDPINC          5106     2  real       1    29
   269    SALESUM         5114     3  real       2     1    30
   270    VDBCHK          5127     2  real       2     1
   271    TRDCHK          5138     3  real       2     1     1
   272    VTMCHK          5149     1  real       3
   273    CHKMKClIMP      5160     2  real       2     1
   274    VOSCHK          5175     3  real       2     5     1




 =================
 ++ EQUATION TABLE
 =================

           Defined     Semantic                        ALL quantifiers range
  Number   at line      Error?   Equation name         over sets numbered
  --------------------------------------------------------------------------
     1         983       no      E_qint                     5     1
     2         997       no      E_qva                      5     1
     3        1027       no      E_qo                       5     1
     4        1052       no      E_qfa                      2     5     1
     5        1071       no      E_pint                     5     1
     6        1103       no      E_qfe                      6     5     1
     7        1110       no      E_pva                      5     1
     8        1120       no      E_qfd                      2     5     1
     9        1125       no      E_qfm                      2     5     1
    10        1137       no      E_pfa                      2     5     1
    11        1154       no      E_ao                       5     1
    12        1168       no      E_afa                      2     5     1
    13        1180       no      E_ava                      5     1
    14        1194       no      E_afe                      6     5     1
    15        1206       no      E_aint                     5     1
    16        1253       no      E_qca                      2     5     1
    17        1259       no      E_po                       5     1
    18        1264       no      E_ps                       2     5     1
    19        1286       no      E_pb                       5     1
    20        1327       no      E_pca                      2     5     1
    21        1333       no      E_qc                       2     1
    22        1351       no      E_fincome                  1
    23        1370       no      E_y                        1
    24        1394       no      E_qsave                    1
    25        1399       no      E_yg                       1
    26        1404       no      E_yp                       1
    27        1424       no      E_uelas                    1
    28        1429       no      E_dpav                     1
    29        1440       no      E_p                        1
    30        1499       no      E_u                        1
    31        1507       no      E_dpsum                    1
    32        1570       no      E_qpa                      2     1
    33        1587       no      E_uepriv                   1
    34        1592       no      E_ppriv                    1
    35        1597       no      E_up                       1
    36        1607       no      E_qpd                      2     1
    37        1618       no      E_qpm                      2     1
    38        1623       no      E_ppa                      2     1
    39        1644       no      E_qga                      2     1
    40        1649       no      E_pgov                     1
    41        1654       no      E_ug                       1
    42        1665       no      E_qgd                      2     1
    43        1670       no      E_qgm                      2     1
    44        1675       no      E_pga                      2     1
    45        1692       no      E_qia                      2     1
    46        1697       no      E_pinv                     1
    47        1702       no      E_qid                      2     1
    48        1707       no      E_qim                      2     1
    49        1717       no      E_pia                      2     1
    50        1759       no      E_qms                      2     1
    51        1777       no      E_qxs                      2     1     1
    52        1793       no      E_pms                      2     1
    53        1829       no      E_qtmfsd                   3     2     1     1

    54        1883       no      E_ptrans                   2     1     1
    55        1916       no      E_qtm                      3
    56        1930       no      E_qst                      3     1
    57        1947       no      E_pt                       3
    58        1972       no      E_atmfsd                   3     2     1     1

    59        2005       no      E_pfob                     2     1     1
    60        2027       no      E_pcif                     2     1     1
    61        2050       no      E_pmds                     2     1     1
    62        2057       no      E_pr                       2     1
    63        2096       no      E_qds                      2     1
    64        2124       no      E_pds                      2     1
    65        2141       no      E_pfd                      2     5     1
    66        2150       no      E_pfm                      2     5     1
    67        2168       no      E_ppd                      2     1
    68        2173       no      E_ppm                      2     1
    69        2183       no      E_pgd                      2     1
    70        2188       no      E_pgm                      2     1
    71        2198       no      E_pid                      2     1
    72        2203       no      E_pim                      2     1
    73        2226       no      E_atpd                     2     1
    74        2231       no      E_atpm                     2     1
    75        2261       no      E_pe1                      8     1
    76        2266       no      E_qes1                     8     5     1
    77        2283       no      E_qes2                     9     5     1
    78        2294       no      E_pe2                      9     1
    79        2307       no      E_qes3                    11     5     1
    80        2323       no      E_pfe                      6     5     1
    81        2328       no      E_pes                      6     5     1
    82        2333       no      E_peb                      6     5     1
    83        2367       no      E_ke                       1
    84        2392       no      E_rental                   1
    85        2397       no      E_rorc                     1
    86        2402       no      E_kb                       1
    87        2430       no      E_rore                     1
    88        2459       no      E_qinv                     1
    89        2474       no      E_expand                   7     1
    90        2488       no      E_globalcgds        
    91        2516       no      E_psave                    1
    92        2530       no      E_pcgdswld          
    93        2582       no      E_del_taxrout              1
    94        2589       no      E_del_taxrfu               1
    95        2596       no      E_del_taxriu               1
    96        2610       no      E_del_taxrpc               1
    97        2619       no      E_del_taxrgc               1
    98        2628       no      E_del_taxric               1
    99        2642       no      E_del_taxrexp              1
   100        2649       no      E_del_taxrimp              1
   101        2667       no      E_del_taxrinc              1
   102        2674       no      E_del_indtaxr              1
   103        2684       no      E_del_ttaxr                1
   104        2707       no      E_pfactor                  1
   105        2720       no      E_rorg              
   106        2745       no      E_walras_sup        
   107        2754       no      E_walras_dem        
   108        2763       no      E_walraslack        
   109        2843       no      E_pfactreal                6     5     1
   110        2862       no      E_psw                      1
   111        2876       no      E_pdw                      1
   112        2888       no      E_tot                      1
   113        2923       no      E_vgdp                     1
   114        2939       no      E_pgdp                     1
   115        2950       no      E_qgdp                     1
   116        2967       no      E_compvalad                5     1
   117        3037       no      E_vxwfob                   2     1
   118        3044       no      E_vxwreg                   1
   119        3051       no      E_vxwcom                   2
   120        3058       no      E_vxwwld            
   121        3062       no      E_vmwcif                   2     1
   122        3068       no      E_vmwreg                   1
   123        3075       no      E_vmwcom                   2
   124        3082       no      E_valuew                   2
   125        3089       no      E_valuewu                  2
   126        3102       no      E_pxw                      2     1
   127        3111       no      E_pxwreg                   1
   128        3118       no      E_pxwcom                   2
   129        3125       no      E_pxwwld            
   130        3131       no      E_pmw                      2     1
   131        3138       no      E_pmwreg                   1
   132        3145       no      E_pmwcom                   2
   133        3152       no      E_pw                       2
   134        3159       no      E_pwu                      2
   135        3175       no      E_qxw                      2     1
   136        3187       no      E_qxwreg                   1
   137        3197       no      E_qxwcom                   2
   138        3207       no      E_qxwwld            
   139        3216       no      E_qmw                      2     1
   140        3226       no      E_qmwreg                   1
   141        3236       no      E_qmwcom                   2
   142        3246       no      E_qow                      2
   143        3256       no      E_qowu                     2
   144        3276       no      E_del_tbalc                2     1
   145        3284       no      E_del_tbal                 1
   146        3305       no      E_ywld              
   147        3316       no      E_del_tbalry               1
   148        3375       no      E_pm_cr                    2     1
   149        3384       no      E_c1_cr                    2     1
   150        3391       no      E_c2_cr                    2     1
   151        3398       no      E_c3_cr                    2     1
   152        3405       no      E_c1_r                     1
   153        3412       no      E_c2_r                     1
   154        3419       no      E_c3_r                     1
   155        3426       no      E_tot2                     1
   156        3516       no      E_ugev                     1
   157        3562       no      E_qpev                     2     1
   158        3576       no      E_upev                     1
   159        3587       no      E_ueprivev                 1
   160        3651       no      E_dpavev                   1
   161        3659       no      E_uelasev                  1
   162        3664       no      E_ypev                     1
   163        3669       no      E_ygev                     1
   164        3674       no      E_ysaveev                  1
   165        3679       no      E_qsaveev                  1
   166        3695       no      E_yev                      1
   167        3712       no      E_EV                       1
   168        3719       no      E_WEV               
   169        3755       no      E_EV_ALT                   1
   170        3809       no      E_WEV_ALT           
   171        3815       no      E_CNTdpar                  1
   172        3826       no      E_CNTpop                   1
   173        3833       no      E_CNTqor                   1
   174        3842       no      E_CNTqo                    5     1
   175        3851       no      E_CNTqca                   2     5     1
   176        3860       no      E_CNTqe                    6     1
   177        3870       no      E_CNTqfer                  1
   178        3880       no      E_CNTqfeer                 6     1
   179        3890       no      E_CNTqfe                   6     5     1
   180        3899       no      E_CNTqfr                   1    14
   181        3911       no      E_CNTqfm                   2     5     1
   182        3920       no      E_CNTqfd                   2     5     1
   183        3929       no      E_CNTqpm                   2     1
   184        3937       no      E_CNTqpd                   2     1
   185        3945       no      E_CNTqpr                   1    14
   186        3957       no      E_CNTqia                   1    14
   187        3969       no      E_CNTqim                   2     1
   188        3977       no      E_CNTqid                   2     1
   189        3985       no      E_CNTqgr                   1    14
   190        3997       no      E_CNTqgm                   2     1
   191        4005       no      E_CNTqgd                   2     1
   192        4013       no      E_CNTqxsr                  1
   193        4022       no      E_CNTqxs                   2     1     1
   194        4031       no      E_CNTqmsr                  1
   195        4040       no      E_CNTqms                   2     1     1
   196        4048       no      E_CNTalleffr               1    15
   197        4077       no      E_CNTalleffcr              2     1
   198        4096       no      E_CNTtotr                  1
   199        4108       no      E_CNTpinv                  1
   200        4117       no      E_CNTendwr                 1
   201        4127       no      E_CNTendw                  6     1
   202        4135       no      E_CNTtechr                16     1
   203        4156       no      E_CNTtech_ao               5     1
   204        4164       no      E_CNTtech_afe              6     5     1
   205        4172       no      E_CNTtech_ava              5     1
   206        4180       no      E_CNTtech_aint             5     1
   207        4190       no      E_CNTtech_af               2     5     1
   208        4199       no      E_CNTtech_atmfsd           3     2     1     1

   209        4208       no      E_CNTtech_ams              2     1     1
   210        4216       no      E_CNTkb                    1




 ================
 ++ FORMULA TABLE
 ================

           Defined   Semantic      LHS                RHS
  Number   at line    Error?    coefficient       coefficient numbers
  -------------------------------------------------------------------
     1         598     no      VFP                8
     2         600     no      VFP                4     5
     3         606     no      VOS               30
     4         612     no      VES                6
     5         618     no      MAKEBACT          10
     6         623     no      MAKEBCOM          10
     7         628     no      VDB               15    11    19     2
     8         634     no      VCB               35    25    29
     9         670     no      VGP               13    14
    10         674     no      GOVEXP            37
    11         680     no      VPP               17    18
    12         684     no      PRIVEXP           39
    13         690     no      VIP               21    22
    14         696     no      INCOME            40    38    23
    15         707     no      PTAX              10     9
    16         711     no      TAXROUT           43
    17         717     no      DGTAX             13    11
    18         721     no      MGTAX             14    12
    19         725     no      TAXRGC            45    46
    20         731     no      DPTAX             17    15
    21         735     no      MPTAX             18    16
    22         739     no      TAXRPC            48    49
    23         745     no      DITAX             21    19
    24         749     no      MITAX             22    20
    25         753     no      TAXRIC            51    52
    26         759     no      DFTAX              4     2
    27         763     no      MFTAX              5     3
    28         767     no      TAXRIU            54    55
    29         773     no      ETAX               8     7
    30         777     no      TAXRFU            57
    31         783     no      INCTAX             7     6
    32         789     no      XTAXD             26    25
    33         793     no      TAXREXP           60
    34         799     no      MTAX              28    27
    35         803     no      TAXRIMP           62
    36         818     no      REGINV            41
    37         822     no      NETINV            64    24
    38         828     no      GLOBINV           65
    39         834     no      CONSHR            39    40
    40         844     no      UELASPRIV         67    68
    41         853     no      Assertion         70
    42         981     no      Assertion         71
    43        1023     no      STC               30    31
    44        1050     no      Assertion         73
    45        1061     no      TINTCOM           30
    46        1067     no      INTSHR            30    74
    47        1084     no      Assertion         76
    48        1088     no      VVA               30
    49        1092     no      DEFAULTVASHR      30    77
    50        1098     no      VASHR             77    30
    51        1100     no      VASHR             77    78
    52        1133     no      FMSHR              5    30
    53        1239     no      Assertion         81
    54        1243     no      MAKESCOM           9
    55        1249     no      MAKESACTSHR        9    82
    56        1282     no      MAKEBACTSHR       10    33
    57        1294     no      ESUBQ       
    58        1297     no      Assertion         85
    59        1323     no      MAKEBCOMSHR       10    34
    60        1348     no      FY                 7    24
    61        1366     no      INDTAX            50    47    53    56    58
                                                 44    61    63
    62        1413     no      XSHRPRIV          40    42
    63        1417     no      XSHRGOV           38    42
    64        1421     no      XSHRSAVE          23    42
    65        1461     no      UTILELAS          69    89    90    91    92

    66        1466     no      DPARPRIV          69    89    93
    67        1470     no      DPARGOV           90    93
    68        1475     no      DPARSAVE          91    93
    69        1480     no      UTILPRIV    
    70        1487     no      UTILGOV     
    71        1494     no      UTILSAVE    
    72        1535     no      ALPHA            100
    73        1539     no      APE              101    67
    74        1542     no      APE              101    67
    75        1550     no      EY                67    68   101
    76        1560     no      EP          
    77        1562     no      EP               102   103    67
    78        1584     no      XWCONSHR          67    68    69
    79        1615     no      PMSHR             18    39
    80        1642     no      Assertion        107
    81        1662     no      GMSHR             14    37
    82        1715     no      IMSHR             22    41
    83        1735     no      VMB                3    20    16    12
    84        1741     no      FMCSHR             3   110
    85        1746     no      PMCSHR            16   110
    86        1751     no      GMCSHR            12   110
    87        1756     no      IMCSHR            20   110
    88        1775     no      Assertion        115
    89        1786     no      IMPBASIC          28
    90        1790     no      MSHRS             28   116
    91        1858     no      VTFSD            118
    92        1867     no      VTUSE            118
    93        1871     no      VTMUSE           118
    94        1876     no      VTFSD_MSH        119   118
    95        1879     no      VTFSD_MSH        119   121   120
    96        1894     no      VTMPROV           29
    97        1901     no      VTRPROV           29
    98        1905     no      VT                29
    99        1910     no      VTMUSESHR        119   125
   100        1912     no      VTMUSESHR        121   118
   101        1928     no      Assertion        127
   102        1942     no      VTSUPPSHR        124   125
   103        1944     no      VTSUPPSHR        123    29
   104        2012     no      VCIFCOST          26   119
   105        2018     no      FOBSHR            26   129
   106        2024     no      TRNSHR           130
   107        2079     no      FDCSHR             2    35
   108        2083     no      PDCSHR            15    35
   109        2087     no      GDCSHR            11    35
   110        2091     no      IDCSHR            19    35
   111        2113     no      DSSHR             35    36
   112        2117     no      STSHR             29    36
   113        2121     no      XSSHR             25    36
   114        2165     no      LevTPD            17    15
   115        2254     no      VENDWM             7
   116        2258     no      ENDWMSHR           7   140
   117        2281     no      Assertion        142
   118        2291     no      REVSHR             6    32
   119        2364     no      INVKERATIO        64   144    65
   120        2374     no      GROSSCAP          32
   121        2379     no      GRNETRATIO       146    24
   122        2664     no      TAXRINC           59
   123        2704     no      VENDWREG           7
   124        2717     no      VENDWWLD         151
   125        2813     no      VXDFOB            26
   126        2818     no      VXW              153    29
   127        2823     no      VXWREGION        154
   128        2828     no      VMCIF             27
   129        2833     no      VMWREGION        156
   130        2903     no      GDPEXP            39
   131        2905     no      GDPEXP            41
   132        2906     no      GDPEXP            37
   133        2907     no      GDPEXP            26
   134        2908     no      GDPEXP            29
   135        2909     no      GDPEXP            27
   136        2917     no      GDP              158
   137        2995     no      VXWCOMMOD        154
   138        2999     no      VXWLD            155
   139        3004     no      VMWCOMMOD        156
   140        3009     no      VXDXSB            25
   141        3014     no      PW_PM            153   163
   142        3019     no      VOW               35   164   153    29
   143        3024     no      VWOW             165
   144        3029     no      VWOU              39    37    30
   145        3302     no      INCOMEWLD         42
   146        3313     no      TBAL             155   157
   147        3332     no      SX_CR             26    29
   148        3337     no      SX_CR             26    29
   149        3345     no      VTMCOMM          118
   150        3350     no      VMWDCRALL         26   171
   151        3355     no      VMWDATOT         172
   152        3360     no      SM_CR            172   173
   153        3365     no      SM_CRS            26   172
   154        3370     no      SMT_CR           171   172
   155        3485     no      INCOMEEV          42
   156        3492     no      UTILPRIVEV        97
   157        3499     no      UTILGOVEV         98
   158        3506     no      UTILSAVEEV        99
   159        3533     no      VPPEV             39
   160        3540     no      VPPREGEV         181
   161        3549     no      CONSHREV         181   182
   162        3554     no      EYEV             183    68   101
   163        3573     no      UELASPRIVEV      183    68
   164        3584     no      XWCONSHREV       183    68   185
   165        3608     no      PRIVEXPEV         40
   166        3619     no      GOVEXPEV          38
   167        3627     no      SAVEEV            23
   168        3635     no      XSHRPRIVEV       187   177
   169        3641     no      XSHRGOVEV        188   177
   170        3646     no      XSHRSAVEEV       189   177
   171        3690     no      UTILELASEV        93
   172        3745     no      EVSCALFACT       193    93   177    42
   173        3750     no      VTMD             118
   174        4259     no      BEVFP              8
   175        4264     no      BVMFP              5
   176        4269     no      BVDFP              4
   177        4274     no      BVOS             196   197   198
   178        4282     no      BVXSB             25
   179        4287     no      BVDPB             15
   180        4292     no      BVDGB             11
   181        4297     no      BVDFB              2
   182        4302     no      BEVFB              7
   183        4307     no      BVDB              35
   184        4313     no      BVST              29
   185        4318     no      BVCB              36
   186        4320     no      BVCB             205   200   206
   187        4326     no      BVEB               7
   188        4331     no      BMAKEACT          33
   189        4336     no      BOUTAX           209   199
   190        4341     no      BEVOS              6
   191        4346     no      BINCTAX          208   211
   192        4352     no      BVMFB              3
   193        4357     no      BVMPB             16
   194        4362     no      BVMPP             18
   195        4367     no      BVDPP             17
   196        4372     no      BVMGB             12
   197        4377     no      BVMGP             14
   198        4382     no      BVDGP             13
   199        4387     no      BVMIB             20
   200        4392     no      BVMIP             22
   201        4397     no      BVDIP             21
   202        4402     no      BVDIB             19
   203        4407     no      BVMSB             28
   204        4412     no      BVCIF             27
   205        4417     no      BMTAX            224   225
   206        4422     no      BVFOB             26
   207        4427     no      BXTAX            227   200
   208        4432     no      BETAX            196   204
   209        4437     no      BSAVE             23
   210        4442     no      ISBAL             65   230
   211        4490     no      WELFARE         -246
   212        4492     no      WELFARE         -250
   213        4494     no      WELFARE         -252
   214        4496     no      WELFARE         -222
   215        4498     no      WELFARE         -248
   216        4500     no      WELFARE         -249
   217        4502     no      WELFARE         -221
   218        4516     no      CNTalleff       -228  -226
   219        4518     no      CNTalleff       -247
   220        4520     no      CNTalleff       -225
   221        4533     no      CNTalleffkr     -246
   222        4556     no      OTAX            -226
   223        4558     no      OTAX            -224
   224        4572     no      UOUTAX            33    31
   225        4577     no      UINCTAX            7     6
   226        4583     no      OUTPUT           235   209   -52   210   236

   227        4589     no      OUTPUT           235   208    -8   212   237

   228        4620     no      ATAX            -232  -234  -241  -238
   229        4626     no      ATAX            -231  -233  -240  -237
   230        4644     no      STAX            -232  -231
   231        4660     no      ITAX            -238  -237
   232        4676     no      FIRM             203    -2   198     4     2

   233        4681     no      FIRM             213    -4   197     5     3

   234        4686     no      FIRM             240
   235        4700     no      PRIVATE          201   -19   216    17    15

   236        4705     no      PRIVATE          214   -20   215    18    16

   237        4710     no      PRIVATE          239
   238        4724     no      GOVT             202   -15   219    13    11

   239        4729     no      GOVT             217   -16   218    14    12

   240        4734     no      GOVT             239
   241        4748     no      INVESTMENT       223   -23   222    21    19

   242        4753     no      INVESTMENT       220   -24   221    22    20

   243        4758     no      INVESTMENT       239
   244        4780     no      TTAX            -243
   245        4782     no      TTAX            -245
   246        4796     no      UMTAX             28    27
   247        4801     no      UXTAX             26    25
   248        4806     no      TRADE            246   200   -31   228   248

   249        4812     no      TRADE            246   200   -31   226   247

   250        4830     no      UETAX              8     7
   251        4836     no      WPFACTOR        -229   204   -10   229   250

   252        4855     no      CNTendowment    -251
   253        4880     no      CNTtech         -252
   254        4926     no      WTOT            -199
   255        4928     no      WTOT            -200
   256        4930     no      WTOT            -201
   257        4932     no      WTOT            -248  -199   254
   258        4936     no      WTOT            -248  -200   254
   259        4940     no      WTOT            -201  -248   254
   260        4956     no      CGDSCOMP         231
   261        4958     no      CGDSCOMP         -29
   262        4960     no      CGDSCOMP         -27
   263        4986     no      DQXS             -31   200
   264        4992     no      DQDS            -119   205
   265        4998     no      DQFE             -10   204
   266        5004     no      DQFM              -4   213
   267        5010     no      DQFD              -2   203
   268        5016     no      DQPM             -20   214
   269        5022     no      DQPD             -19   201
   270        5028     no      DQGM             -16   217
   271        5034     no      DQGD             -15   202
   272        5040     no      DQO              -83   207
   273        5046     no      DTOT             256
   274        5096     no      COSTSUM            4
   275        5098     no      COSTSUM            5
   276        5099     no      COSTSUM            8
   277        5100     no      COSTSUM           43
   278        5101     no      COSTSUM            8
   279        5102     no      COSTSUM           43
   280        5108     no      GDPINC             8
   281        5110     no      GDPINC            88    58
   282        5116     no      SALESUM            2
   283        5118     no      SALESUM           15
   284        5119     no      SALESUM           19
   285        5120     no      SALESUM           11
   286        5121     no      SALESUM          163
   287        5122     no      SALESUM           29
   288        5123     no      SALESUM     
   289        5129     no      VDBCHK            36    34
   290        5133     no      VDBCHK           270    36
   291        5140     no      TRDCHK            27    26   119
   292        5144     no      TRDCHK           271    27
   293        5151     no      VTMCHK           121   123
   294        5155     no      VTMCHK           272   121
   295        5162     no      CHKMKClIMP        28     3    16    12    20

   296        5169     no      CHKMKClIMP       273    28     3
   297        5177     no      VOSCHK            10     9    43
   298        5181     no      VOSCHK           274    10
   299        5195     no      Assertion        270
   300        5197     no      Assertion        271
   301        5198     no      Assertion        272
   302        5199     no      Assertion        273
   303        5200     no      Assertion        274




 ===============
 ++ UPDATE TABLE
 ===============

           Defined   Semantic    Updated         RHS coeff/var nos
  Number   at line    Error?    coefficient       (vars are negative)
  -------------------------------------------------------------------
     1         150     no      VERNUM             1
     2         252     no      VDFB               2    -1    -2
     3         264     no      VMFB               3    -3    -4
     4         274     no      VDFP               4    -5    -2
     5         284     no      VMFP               5    -6    -4
     6         296     no      EVOS               6    -7    -8
     7         308     no      EVFB               7    -9   -10
     8         318     no      EVFP               8   -11   -10
     9         335     no      MAKES              9   -12   -13
    10         345     no      MAKEB             10   -14   -13
    11         360     no      VDGB              11    -1   -15
    12         370     no      VMGB              12    -3   -16
    13         380     no      VDGP              13   -17   -15
    14         390     no      VMGP              14   -18   -16
    15         405     no      VDPB              15    -1   -19
    16         415     no      VMPB              16    -3   -20
    17         425     no      VDPP              17   -21   -19
    18         435     no      VMPP              18   -22   -20
    19         450     no      VDIB              19    -1   -23
    20         460     no      VMIB              20    -3   -24
    21         470     no      VDIP              21   -25   -23
    22         480     no      VMIP              22   -26   -24
    23         496     no      SAVE              23   -27   -28
    24         512     no      VDEP              24   -29   -30
    25         532     no      VXSB              25    -1   -31
    26         543     no      VFOB              26   -32   -31
    27         554     no      VCIF              27   -33   -31
    28         565     no      VMSB              28   -34   -31
    29         580     no      VST               29    -1   -35
    30        1456     no      DPARSUM           92   -94
    31        1482     no      UTILPRIV          97   -44
    32        1489     no      UTILGOV           98   -40
    33        1496     no      UTILSAVE          99   -28   -37
    34        1853     no      VTMFSD           118  -106  -105
    35        2351     no      VKB              144   -29   -30
    36        3487     no      INCOMEEV         177  -211
    37        3494     no      UTILPRIVEV       178  -209
    38        3501     no      UTILGOVEV        179  -208
    39        3508     no      UTILSAVEEV       180  -210   -37
    40        3535     no      VPPEV            181  -214
    41        3610     no      PRIVEXPEV        187  -212
    42        3621     no      GOVEXPEV         188  -213
    43        3629     no      SAVEEV           189  -215
    44        3692     no      UTILELASEV       193  -206




 =============
 ++ READ TABLE
 =============

           Defined    Semantic  Coefficient   File number
  Number   at line     Error?    read into     read from   Header
  ---------------------------------------------------------------
     1        148       no      VERNUM              2       DVER
     2        250       no      VDFB                2       VDFB
     3        262       no      VMFB                2       VMFB
     4        272       no      VDFP                2       VDFP
     5        282       no      VMFP                2       VMFP
     6        294       no      EVOS                2       EVOS
     7        306       no      EVFB                2       EVFB
     8        316       no      EVFP                2       EVFP
     9        333       no      MAKES               2       MAKS
    10        343       no      MAKEB               2       MAKB
    11        358       no      VDGB                2       VDGB
    12        368       no      VMGB                2       VMGB
    13        378       no      VDGP                2       VDGP
    14        388       no      VMGP                2       VMGP
    15        403       no      VDPB                2       VDPB
    16        413       no      VMPB                2       VMPB
    17        423       no      VDPP                2       VDPP
    18        433       no      VMPP                2       VMPP
    19        448       no      VDIB                2       VDIB
    20        458       no      VMIB                2       VMIB
    21        468       no      VDIP                2       VDIP
    22        478       no      VMIP                2       VMIP
    23        494       no      SAVE                2       SAVE
    24        510       no      VDEP                2       VDEP
    25        530       no      VXSB                2       VXSB
    26        541       no      VFOB                2       VFOB
    27        552       no      VCIF                2       VCIF
    28        563       no      VMSB                2       VMSB
    29        578       no      VST                 2       VST 
    30        839       no      INCPAR              3       INCP
    31        851       no      ESUBD               3       ESBD
    32        979       no      ESUBT               3       ESBT
    33       1048       no      ESUBC               3       ESBC
    34       1082       no      ESUBVA              3       ESBV
    35       1237       no      ETRAQ               3       ETRQ
    36       1294       no      ESUBQ          TERMINAL         
    37       1296       no      ESUBQ               3       ESBQ
    38       1454       no      DPARSUM             2       DPSM
    39       1480       no      UTILPRIV       TERMINAL         
    40       1487       no      UTILGOV        TERMINAL         
    41       1494       no      UTILSAVE       TERMINAL         
    42       1531       no      SUBPAR              3       SUBP
    43       1640       no      ESUBG               3       ESBG
    44       1773       no      ESUBM               3       ESBM
    45       1851       no      VTMFSD              2       VTWR
    46       1926       no      ESUBS               3       ESBS
    47       2279       no      ETRAE               3       ETRE
    48       2353       no      VKB                 2       VKB 
    49       2419       no      RORFLEX             3       RFLX
    50       2438       no      RORDELTA            3       RDLT
    51       3485       no      INCOMEEV       TERMINAL         
    52       3492       no      UTILPRIVEV     TERMINAL         
    53       3499       no      UTILGOVEV      TERMINAL         
    54       3506       no      UTILSAVEEV     TERMINAL         
    55       3533       no      VPPEV          TERMINAL         
    56       3608       no      PRIVEXPEV      TERMINAL         
    57       3619       no      GOVEXPEV       TERMINAL         
    58       3627       no      SAVEEV         TERMINAL         
    59       3690       no      UTILELASEV     TERMINAL         
    60       4259       no      BEVFP          TERMINAL         
    61       4264       no      BVMFP          TERMINAL         
    62       4269       no      BVDFP          TERMINAL         
    63       4274       no      BVOS           TERMINAL         
    64       4282       no      BVXSB          TERMINAL         
    65       4287       no      BVDPB          TERMINAL         
    66       4292       no      BVDGB          TERMINAL         
    67       4297       no      BVDFB          TERMINAL         
    68       4302       no      BEVFB          TERMINAL         
    69       4307       no      BVDB           TERMINAL         
    70       4313       no      BVST           TERMINAL         
    71       4318       no      BVCB           TERMINAL         
    72       4320       no      BVCB           TERMINAL         
    73       4326       no      BVEB           TERMINAL         
    74       4331       no      BMAKEACT       TERMINAL         
    75       4336       no      BOUTAX         TERMINAL         
    76       4341       no      BEVOS          TERMINAL         
    77       4346       no      BINCTAX        TERMINAL         
    78       4352       no      BVMFB          TERMINAL         
    79       4357       no      BVMPB          TERMINAL         
    80       4362       no      BVMPP          TERMINAL         
    81       4367       no      BVDPP          TERMINAL         
    82       4372       no      BVMGB          TERMINAL         
    83       4377       no      BVMGP          TERMINAL         
    84       4382       no      BVDGP          TERMINAL         
    85       4387       no      BVMIB          TERMINAL         
    86       4392       no      BVMIP          TERMINAL         
    87       4397       no      BVDIP          TERMINAL         
    88       4402       no      BVDIB          TERMINAL         
    89       4407       no      BVMSB          TERMINAL         
    90       4412       no      BVCIF          TERMINAL         
    91       4417       no      BMTAX          TERMINAL         
    92       4422       no      BVFOB          TERMINAL         
    93       4427       no      BXTAX          TERMINAL         
    94       4432       no      BETAX          TERMINAL         
    95       4437       no      BSAVE          TERMINAL         
    96       4442       no      ISBAL          TERMINAL         




 ==============
 ++ WRITE TABLE
 ==============

        Defined   Sem      Coeff        Write
 Number at line  Error?   written       file   Header     Long Name
 --------------------------------------------------------------------------------
     1     2910   no      GDPEXP            4  GDPE    Not defined by the user
     2     4505   no      WELFARE           5  A      "EV Decomposition: Summar
                                                       y"
     3     4523   no      CNTalleff         5  A1     "Allocative Efficiency Ef
                                                       fect: Summary"
     4     4535   no      CNTalleffkr       5  A2     "Allocative Efficiency Ef
                                                       fect: Tax Type Summary"
     5     4561   no      OTAX              5  A21    "Output Tax Effect"
     6     4596   no      OUTPUT            5  A211   "Output Tax Effect: Expla
                                                       natory Factors"
     7     4633   no      ATAX              5  A22    "Domestic Tax Effect: Sum
                                                       mary"
     8     4649   no      STAX              5  A221   "Intermed. Input Tax Effe
                                                       ct"
     9     4665   no      ITAX              5  A222   "Investment Intermed. Inp
                                                       ut Tax Effect"
    10     4689   no      FIRM              5  A22F   "Intermed. Input Tax Effe
                                                       ct: Explanatory Factors"
    11     4713   no      PRIVATE           5  A22P   "Private Cons. Tax Effect
                                                       : Explanatory Factors"
    12     4737   no      GOVT              5  A22G   "Government Cons. Tax Eff
                                                       ect: Explanatory Factors"
    13     4761   no      INVESTMENT        5  A22I   "Investment Tax Effect: E
                                                       xplanatory Factors"
    14     4785   no      TTAX              5  A23    "Trade Tax Effect"
    15     4819   no      TRADE             5  A231   "Trade Tax Effect: Explan
                                                       atory Factors"
    16     4843   no      WPFACTOR          5  A31    "Endowment Tax Effect: Ex
                                                       planatory Factors"
    17     4845   no      BXTAX             5  A3     "Endowment Tax Effect"
    18     4857   no      CNTendowment      5  B1     "Endowment Effect, Gross 
                                                       of Depreciation"
    19     4866   no      DQFD              5  B2     "Endowment Effect: Deprec
                                                       iation"
    20     4883   no      CNTtech           5  C1     "Technical Change Effect:
                                                        Summary"
    21     4887   no      CNTtech           5  C11    "(ao) Output Augm. Tech. 
                                                       Change Effect"
    22     4890   no      WTOT              5  C12    "(afe) Primary Factor Aug
                                                       m. Tech. Change Effect"
    23     4893   no      CGDSCOMP          5  C13    "(ava) Value Added Augm. 
                                                       Tech. Change Effect"
    24     4896   no      DQXS              5  C14    "(aint) Composite Interme
                                                       d. Input Augm. Tech. Cha
                                                       nge Effect"
    25     4899   no      DQDS              5  C15    "(af) Intermed. Input Aug
                                                       m. Tech. Change Effect"
    26     4902   no      DQFE              5  C16    "(atmfsd) Internat. Margi
                                                       n Augm. Tech. Change Eff
                                                       ect"
    27     4905   no      DQFM              5  C17    "(ams) Bilateral Import A
                                                       ugm. Tech. Change Effect"
    28     4945   no      WTOT              5  E1     "Terms of Trade Effect"
    29     4962   no      CGDSCOMP          5  F1     "I-S Effect: Explanatory 
                                                       Factors"
    30     5055   no      DQXS              6  DQXS    Not defined by the user
    31     5057   no      DQDS              6  DQDS    Not defined by the user
    32     5058   no      DQFE              6  DQFE    Not defined by the user
    33     5059   no      DQFM              6  DQFM    Not defined by the user
    34     5060   no      DQFD              6  DQFD    Not defined by the user
    35     5061   no      DQPM              6  DQPM    Not defined by the user
    36     5062   no      DQPD              6  DQPD    Not defined by the user
    37     5063   no      DTOT              6  DTOT    Not defined by the user
    38     5064   no      DQO               6  DQO     Not defined by the user
    39     5065   no      DQGD              6  DQGD    Not defined by the user
    40     5066   no      DQGM              6  DQGM    Not defined by the user
    41     5103   no      COSTSUM           4  COST    Not defined by the user
    42     5111   no      GDPINC            4  GDPI    Not defined by the user
    43     5124   no      SALESUM           4  SALE    Not defined by the user
    44     5131   no      VDBCHK            4  VMCK    Not defined by the user
    45     5135   no      VDBCHK            4  VMCP   "VDBCHK as %"
    46     5142   no      TRDCHK            4  TRCK    Not defined by the user
    47     5146   no      TRDCHK            4  TRCP   "TRDCHK as %"
    48     5153   no      VTMCHK            4  VTCK    Not defined by the user
    49     5157   no      VTMCHK            4  VTCP   "VTMCHK as %"
    50     5167   no      CHKMKClIMP        4  MPCK    Not defined by the user
    51     5172   no      CHKMKClIMP        4  MPCP   "CHKMKClIMP as %"
    52     5179   no      VOSCHK            4  VOCK    Not defined by the user
    53     5183   no      VOSCHK            4  VOCS   "VOSCHK as %"
    54     5187   no      VDBCHK            4  VMCQ   "PostSim VDBCHK as %"
    55     5189   no      TRDCHK            4  TRCQ   "PostSim TRDCHK as %"
    56     5190   no      VTMCHK            4  VTCQ   "PostSim VTMCHK as %"
    57     5191   no      CHKMKClIMP        4  MPCQ   "PostSim CHKMKClIMP as %"
    58     5192   no      VOSCHK            4  VOCQ   "PostSim VOPCHK as %"




 ===================
 ++ ZERODIVIDE TABLE
 ===================

           Defined          Coefficient or
  Number   at line   Type   real value specified
  -----------------------------------------------
     1       1021     ZDZ   0.5                 
     2       1022     NDZ   0.5                 
     3       1025     ZDZ   (Turned OFF)
     4       1065     ZDZ   0.5                 
     5       1066     NDZ   0.5                 
     6       1069     ZDZ   (Turned OFF)
     7       1132     ZDZ   0.5                 
     8       1135     ZDZ   (Turned OFF)
     9       1247     ZDZ   0.5                 
    10       1248     NDZ   0.5                 
    11       1251     ZDZ   (Turned OFF)
    12       1280     ZDZ   0.5                 
    13       1281     NDZ   0.5                 
    14       1284     ZDZ   (Turned OFF)
    15       1321     ZDZ   0.5                 
    16       1322     NDZ   0.5                 
    17       1325     ZDZ   (Turned OFF)
    18       2015     ZDZ   0.5                 
    19       2020     ZDZ   (Turned OFF)
    20       2164     ZDZ   0.5                 
    21       2166     ZDZ   (Turned OFF)
    22       4254     NDZ   0                   
    23       4255     ZDZ   0                   
    24       4444     NDZ   (Turned OFF)
    25       4452     NDZ   0.5                 
    26       5049     ZDZ   (Turned OFF)


   
 ======================
 ++ INPUT CHECK SUMMARY
 ======================
 
 Total number of statements is 1341.
 There are NO syntax errors or semantic problems.


 ******************************************************************************
 -3-
 -->                     Starting CONDENSATION

 ******************************************************************************



 ==================================================
 +1+
 ++>Task   1 - omission of  11 variables
 ==================================================


     List of variables to omit :
     ---------------------------

      1  atall          
      2  avaall         
      3  tfe            
      4  tfd            
      5  tfm            
      6  tgd            
      7  tgm            
      8  tpd            
      9  tpm            
     10  tid            
     11  tim            

     Equations affected by this omission :
     --------------------------------------

      Equation  Equation name
      --------------------------
      This omission was made in the following updates :
      -------------------------------------------------

         13     E_ava               
         58     E_atmfsd            
         65     E_pfd               
         66     E_pfm               
         67     E_ppd               
         68     E_ppm               
         69     E_pgd               
         70     E_pgm               
         71     E_pid               
         72     E_pim               
         73     E_atpd              
         74     E_atpm              
         80     E_pfe               
         94     E_del_taxrfu        
         95     E_del_taxriu        
         96     E_del_taxrpc        
         97     E_del_taxrgc        
         98     E_del_taxric        
      This omission was made in the following updates :
      -------------------------------------------------

 
 This omission was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 1.

 ==================================================
 +2+
 ++> Task   2 - Substituting out variable 'pfactreal'
 ==================================================


  >> Equation number 109 selected for substitution.
     Equation name is 'E_pfactreal'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 2.

 ==================================================
 +3+
 ++> Task   3 - Substituting out variable 'CNTqpm'
 ==================================================


  >> Equation number 183 selected for substitution.
     Equation name is 'E_CNTqpm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 3.

 ==================================================
 +4+
 ++> Task   4 - Substituting out variable 'CNTqfd'
 ==================================================


  >> Equation number 182 selected for substitution.
     Equation name is 'E_CNTqfd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 4.

 ==================================================
 +5+
 ++> Task   5 - Substituting out variable 'CNTqfr'
 ==================================================


  >> Equation number 180 selected for substitution.
     Equation name is 'E_CNTqfr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 5.

 ==================================================
 +6+
 ++> Task   6 - Substituting out variable 'CNTtechr'
 ==================================================


  >> Equation number 202 selected for substitution.
     Equation name is 'E_CNTtechr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 6.

 ==================================================
 +7+
 ++> Task   7 - Substituting out variable 'CNTqfm'
 ==================================================


  >> Equation number 181 selected for substitution.
     Equation name is 'E_CNTqfm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 7.

 ==================================================
 +8+
 ++> Task   8 - Substituting out variable 'qfe'
 ==================================================


  >> Equation number   6 selected for substitution.
     Equation name is 'E_qfe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pe1 (equation number  75)
     E_peb (equation number  82)
     E_del_taxrfu (equation number  94)
 
 To simplify the 'pva' part of equation 'E_del_taxrfu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00275(a,r)

  equal to the following expression:
 
          -SUM(e,ENDW,ETAX(e,a,r) * ESUBVA(a,r))

 
 To simplify the 'qva' part of equation 'E_del_taxrfu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00276(a,r)

  equal to the following expression:
 
          -SUM(e,ENDW,ETAX(e,a,r))

     E_del_taxrinc (equation number 101)
 
 To simplify the 'pva' part of equation 'E_del_taxrinc', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00277(a,r)

  equal to the following expression:
 
          -SUM(e,ENDW,INCTAX(e,a,r) * ESUBVA(a,r))

 
 To simplify the 'qva' part of equation 'E_del_taxrinc', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00278(a,r)

  equal to the following expression:
 
          -SUM(e,ENDW,INCTAX(e,a,r))

     E_EV_ALT (equation number 169)
 
 To simplify the 'pop' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00279(r)

  equal to the following expression:
 
          -{0.01   * EVSCALFACT(r) * [SUM(c,COMM,SUM(a,ACTS,-PTAX(c,a,r))) + 

          SUM(e,ENDW,SUM(a,ACTS,-INCTAX(e,a,r))) + SUM(e,ENDW,SUM(a,ACTS,-

          ETAX(e,a,r))) + SUM(c,COMM,SUM(a,ACTS,-MFTAX(c,a,r))) + SUM(c,COMM,

          SUM(a,ACTS,-DFTAX(c,a,r))) + SUM(c,COMM,-MPTAX(c,r)) + SUM(c,COMM,-

          DPTAX(c,r)) + SUM(c,COMM,-MGTAX(c,r)) + SUM(c,COMM,-DGTAX(c,r)) + 

          SUM(c,COMM,-MITAX(c,r)) + SUM(c,COMM,-DITAX(c,r)) + SUM(c,COMM,

          SUM(d,REG,-XTAXD(c,r,d))) + SUM(c,COMM,SUM(s,REG,-MTAX(c,s,r))) + 

          SUM(e,ENDW,SUM(a,ACTS,-EVOS(e,a,r))) + VDEP(r)] + 0.01   * 

          INCOMEEV(r)}

 
 To simplify the 'aint' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00280(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,VFP(c,a,r))

 
 To simplify the 'pva' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00281(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(e,ENDW,ETAX(e,a,r) * ESUBVA(a,r))

 
 To simplify the 'qva' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00282(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(e,ENDW,ETAX(e,a,r))

     E_CNTqfer (equation number 177)
 
 To simplify the 'pop' part of equation 'E_CNTqfer', we will set
 
          (ALL,r,REG) C00283(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(e,ENDW,SUM(a,ACTS,-ETAX(e,a,r)))

     E_CNTqfeer (equation number 178)
 
 To simplify the 'pop' part of equation 'E_CNTqfeer', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00284(e,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(a,ACTS,-ETAX(e,a,r))

     E_CNTqfe (equation number 179)
     E_CNTalleffr (equation number 196)
 
 To simplify the 'pop' part of equation 'E_CNTalleffr', we will set
 
          (ALL,r,REG) (ALL,t,CTAX) C00285(r,t)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * { IF( $POS(t , CTAX ) EQ 

          $POS("prodtax" , CTAX ) , SUM(c,COMM,SUM(a,ACTS,-PTAX(c,a,r))) + 

          SUM(e,ENDW,SUM(a,ACTS,-INCTAX(e,a,r)))) +  IF( $POS(t , CTAX ) EQ 

          $POS("pfacttax" , CTAX ) , SUM(e,ENDW,SUM(a,ACTS,-ETAX(e,a,r)))) + 

           IF( $POS(t , CTAX ) EQ $POS("inputtax" , CTAX ) , SUM(c,COMM,

          SUM(a,ACTS,-MFTAX(c,a,r))) + SUM(c,COMM,SUM(a,ACTS,-DFTAX(c,a,r))))

           +  IF( $POS(t , CTAX ) EQ $POS("contax" , CTAX ) , SUM(c,COMM,-

          MPTAX(c,r)) + SUM(c,COMM,-DPTAX(c,r))) +  IF( $POS(t , CTAX ) EQ 

          $POS("govtax" , CTAX ) , SUM(c,COMM,-MGTAX(c,r)) + SUM(c,COMM,-

          DGTAX(c,r))) +  IF( $POS(t , CTAX ) EQ $POS("invtax" , CTAX ) , 

          SUM(c,COMM,-MITAX(c,r)) + SUM(c,COMM,-DITAX(c,r))) +  IF( 

          $POS(t , CTAX ) EQ $POS("xtax" , CTAX ) , SUM(c,COMM,SUM(s,REG,-

          XTAXD(c,r,s)))) +  IF( $POS(t , CTAX ) EQ $POS("mtax" , CTAX ) , 

          SUM(c,COMM,SUM(s,REG,-MTAX(c,s,r))))}

 
 To simplify the 'pva' part of equation 'E_CNTalleffr', we will set
 
          (ALL,a,ACTS) (ALL,t,CTAX) (ALL,r,REG) C00286(a,t,r)

  equal to the following expression:
 
           IF( $POS(t , CTAX ) EQ $POS("pfacttax" , CTAX ) , -0.01   * 

          EVSCALFACT(r) * SUM(e,ENDW,ETAX(e,a,r) * ESUBVA(a,r)))

 
 To simplify the 'qva' part of equation 'E_CNTalleffr', we will set
 
          (ALL,a,ACTS) (ALL,t,CTAX) (ALL,r,REG) C00287(a,t,r)

  equal to the following expression:
 
           IF( $POS(t , CTAX ) EQ $POS("pfacttax" , CTAX ) , -0.01   * 

          EVSCALFACT(r) * SUM(e,ENDW,ETAX(e,a,r)))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 8.

 ==================================================
 +9+
 ++> Task   9 - Substituting out variable 'CNTalleffr'
 ==================================================


  >> Equation number 196 selected for substitution.
     Equation name is 'E_CNTalleffr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 9.

 ==================================================
 +10+
 ++> Task  10 - Substituting out variable 'CNTqim'
 ==================================================


  >> Equation number 187 selected for substitution.
     Equation name is 'E_CNTqim'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 10.

 ==================================================
 +11+
 ++> Task  11 - Substituting out variable 'pfd'
 ==================================================


  >> Equation number  65 selected for substitution.
     Equation name is 'E_pfd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qfd (equation number   8)
     E_pfa (equation number  10)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 11.

 ==================================================
 +12+
 ++> Task  12 - Substituting out variable 'qia'
 ==================================================


  >> Equation number  45 selected for substitution.
     Equation name is 'E_qia'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qid (equation number  47)
     E_qim (equation number  48)
     E_qgdp (equation number 115)
 
 To simplify the 'qinv' part of equation 'E_qgdp', we will set
 
          (ALL,r,REG) C00288(r)

  equal to the following expression:
 
          -SUM(c,COMM,VIP(c,r))

     E_qowu (equation number 143)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 12.

 ==================================================
 +13+
 ++> Task  13 - Substituting out variable 'qtmfsd'
 ==================================================


  >> Equation number  53 selected for substitution.
     Equation name is 'E_qtmfsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qtm (equation number  55)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 13.

 ==================================================
 +14+
 ++> Task  14 - Substituting out variable 'qfd'
 ==================================================


  >> Equation number   8 selected for substitution.
     Equation name is 'E_qfd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qds (equation number  63)
 
 To simplify the 'pds' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00289(c,r)

  equal to the following expression:
 
          -SUM(a,ACTS,-FDCSHR(c,a,r) * ESUBD(c,r))

     E_del_taxriu (equation number  95)
 
 To simplify the 'pds' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00290(c,r)

  equal to the following expression:
 
          -SUM(a,ACTS,DFTAX(c,a,r) * {1.0 - ESUBD(c,r)})

 
 To simplify the 'pms' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00291(c,r)

  equal to the following expression:
 
          -SUM(a,ACTS,MFTAX(c,a,r))

     E_EV_ALT (equation number 169)
 
 To simplify the 'pds' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00292(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBD(c,r))

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'pds' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00293(c,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(a,ACTS,-DFTAX(c,a,r) * ESUBD(c,r))

 
 To simplify the 'pop' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00294(c,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {SUM(a,ACTS,-MFTAX(c,a,r)) + SUM(a,ACTS,-

          DFTAX(c,a,r)) - MPTAX(c,r) - DPTAX(c,r) - MGTAX(c,r) - DGTAX(c,r) - 

          MITAX(c,r) - DITAX(c,r) + SUM(s,REG,-XTAXD(c,r,s)) + SUM(s,REG,-

          MTAX(c,s,r))}

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 14.

 ==================================================
 +15+
 ++> Task  15 - Substituting out variable 'CNTqfe'
 ==================================================


  >> Equation number 179 selected for substitution.
     Equation name is 'E_CNTqfe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 15.

 ==================================================
 +16+
 ++> Task  16 - Substituting out variable 'CNTqgr'
 ==================================================


  >> Equation number 189 selected for substitution.
     Equation name is 'E_CNTqgr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 16.

 ==================================================
 +17+
 ++> Task  17 - Substituting out variable 'c2_cr'
 ==================================================


  >> Equation number 150 selected for substitution.
     Equation name is 'E_c2_cr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_c2_r (equation number 153)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 17.

 ==================================================
 +18+
 ++> Task  18 - Substituting out variable 'ptrans'
 ==================================================


  >> Equation number  54 selected for substitution.
     Equation name is 'E_ptrans'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pcif (equation number  60)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 18.

 ==================================================
 +19+
 ++> Task  19 - Substituting out variable 'atmfsd'
 ==================================================


  >> Equation number  58 selected for substitution.
     Equation name is 'E_atmfsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qtm (equation number  55)
 
 To simplify the 'atm' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) C00295(m)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,SUM(d,REG,VTMUSESHR(m,c,s,d))))

 
 To simplify the 'atf' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) C00296(m,c)

  equal to the following expression:
 
          SUM(s,REG,SUM(d,REG,VTMUSESHR(m,c,s,d)))

 
 To simplify the 'ats' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00297(m,s)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,VTMUSESHR(m,c,s,d)))

 
 To simplify the 'atd' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00298(m,d)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,VTMUSESHR(m,c,s,d)))

     E_pcif (equation number  60)
 
 To simplify the 'atf' part of equation 'E_pcif', we will set
 
          (ALL,c,COMM) (ALL,s,REG) (ALL,d,REG) C00299(c,s,d)

  equal to the following expression:
 
          SUM(m,MARG,TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d))

     E_EV_ALT (equation number 169)
 
 To simplify the 'atm' part of equation 'E_EV_ALT', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00300(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,c,s,r)))

 
 To simplify the 'atf' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00301(c,r)

  equal to the following expression:
 
          SUM(m,MARG,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,c,s,r)))

 
 To simplify the 'ats' part of equation 'E_EV_ALT', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00302(s,r)

  equal to the following expression:
 
          SUM(m,MARG,SUM(c,COMM,-0.01   * EVSCALFACT(r) * VTMFSD(m,c,s,r)))

 
 To simplify the 'atd' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00303(r)

  equal to the following expression:
 
          SUM(m,MARG,SUM(c,COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,c,

          s,r))))

     E_CNTtech_atmfsd (equation number 208)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 19.

 ==================================================
 +20+
 ++> Task  20 - Substituting out variable 'afa'
 ==================================================


  >> Equation number  12 selected for substitution.
     Equation name is 'E_afa'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
 
 To simplify the 'aint' part of equation 'E_qo', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00304(a,r)

  equal to the following expression:
 
          -SUM(c,COMM,-STC(c,a,r))

 
 To simplify the 'ava' part of equation 'E_qo', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00305(a,r)

  equal to the following expression:
 
          -SUM(e,ENDW,-STC(e,a,r))

     E_qfa (equation number   4)
     E_pint (equation number   5)
 
 To simplify the 'afsec' part of equation 'E_pint', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00306(a,r)

  equal to the following expression:
 
          -SUM(c,COMM,-INTSHR(c,a,r))

     E_EV_ALT (equation number 169)
 
 To simplify the 'afcom' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00307(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * VFP(c,a,r))

 
 To simplify the 'afsec' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00308(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * VFP(c,a,r))

 
 To simplify the 'afreg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00309(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(a,ACTS,-0.01   * EVSCALFACT(r) * VFP(c,a,r)))

     E_CNTtech_af (equation number 207)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 20.

 ==================================================
 +21+
 ++> Task  21 - Substituting out variable 'qca'
 ==================================================


  >> Equation number  16 selected for substitution.
     Equation name is 'E_qca'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pca (equation number  20)
     E_qc (equation number  21)
     E_del_taxrout (equation number  93)
 
 To simplify the 'po' part of equation 'E_del_taxrout', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00310(a,r)

  equal to the following expression:
 
          -SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , PTAX(c,a,r) * ETRAQ(a,r)))

 
 To simplify the 'qo' part of equation 'E_del_taxrout', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00311(a,r)

  equal to the following expression:
 
          -SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , PTAX(c,a,r) * 1.0))

     E_EV_ALT (equation number 169)
 
 To simplify the 'po' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00312(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , -0.01   * EVSCALFACT(r) * 

          PTAX(c,a,r) * ETRAQ(a,r)))

 
 To simplify the 'qo' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00313(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , -0.01   * EVSCALFACT(r) * 

          PTAX(c,a,r) * 1.0))

     E_CNTqor (equation number 173)
 
 To simplify the 'pop' part of equation 'E_CNTqor', we will set
 
          (ALL,r,REG) C00314(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,SUM(a,ACTS,-PTAX(c,a,r)))

 
 To simplify the 'po' part of equation 'E_CNTqor', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00315(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , 

          PTAX(c,a,r) * ETRAQ(a,r)))

 
 To simplify the 'qo' part of equation 'E_CNTqor', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00316(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM, IF( MAKES(c,a,r) GT 0   , 

          PTAX(c,a,r) * 1.0))

     E_CNTqo (equation number 174)
 
 To simplify the 'pop' part of equation 'E_CNTqo', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00317(a,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,-PTAX(c,a,r))

     E_CNTqca (equation number 175)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 21.

 ==================================================
 +22+
 ++> Task  22 - Substituting out variable 'qfa'
 ==================================================


  >> Equation number   4 selected for substitution.
     Equation name is 'E_qfa'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qfm (equation number   9)
     E_qds (equation number  63)
 
 To simplify the 'afcom' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00318(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-FDCSHR(c,a,r) * {-1.0 + ESUBC(a,r)})

     E_del_taxriu (equation number  95)
 
 To simplify the 'pint' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00319(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-DFTAX(c,a,r) * ESUBC(a,r))

 
 To simplify the 'qint' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00320(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-DFTAX(c,a,r))

 
 To simplify the 'afcom' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00321(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-DFTAX(c,a,r) * {-1.0 + ESUBC(a,r)})

 
 To simplify the 'afsec' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00322(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-DFTAX(c,a,r) * {-1.0 + ESUBC(a,r)})

 
 To simplify the 'afreg' part of equation 'E_del_taxriu', we will set
 
          (ALL,r,REG) C00323(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(a,ACTS,-DFTAX(c,a,r) * {-1.0 + ESUBC(a,r)}))

     E_valuewu (equation number 125)
 
 To simplify the 'afcom' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) C00324(c)

  equal to the following expression:
 
          -SUM(s,REG,SUM(a,ACTS,VFP(c,a,s) * {-1.0 + ESUBC(a,s)}))

 
 To simplify the 'afsec' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) C00325(c,a)

  equal to the following expression:
 
          -SUM(s,REG,VFP(c,a,s) * {-1.0 + ESUBC(a,s)})

 
 To simplify the 'afreg' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00326(c,s)

  equal to the following expression:
 
          -SUM(a,ACTS,VFP(c,a,s) * {-1.0 + ESUBC(a,s)})

     E_qowu (equation number 143)
 
 To simplify the 'afcom' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) C00327(c)

  equal to the following expression:
 
          SUM(a,ACTS,SUM(s,REG,-VFP(c,a,s) * {-1.0 + ESUBC(a,s)}))

 
 To simplify the 'afsec' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) C00328(c,a)

  equal to the following expression:
 
          SUM(s,REG,-VFP(c,a,s) * {-1.0 + ESUBC(a,s)})

 
 To simplify the 'afreg' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00329(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-VFP(c,a,s) * {-1.0 + ESUBC(a,s)})

     E_EV_ALT (equation number 169)
 
 To simplify the 'pint' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00330(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r))

 
 To simplify the 'qint' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00331(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r))

 
 To simplify the 'afcom' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00332(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)}) + C00307(c,r)

 
 To simplify the 'afsec' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00333(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)}) + C00308(a,r)

 
 To simplify the 'afreg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00334(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(a,ACTS,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * {-1.0

           + ESUBC(a,r)})) + C00309(r)

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'afcom' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00335(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 22.

 ==================================================
 +23+
 ++> Task  23 - Substituting out variable 'pca'
 ==================================================


  >> Equation number  20 selected for substitution.
     Equation name is 'E_pca'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_ps (equation number  18)
     E_pb (equation number  19)
 
 To simplify the 'po' part of equation 'E_pb', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00336(a,r)

  equal to the following expression:
 
          -SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , -MAKEBACTSHR(c,a,r) *  IF( 

          MAKES(c,a,r) GT 0   , ESUBQ(c,r) * ETRAQ(a,r))))

 
 To simplify the 'qo' part of equation 'E_pb', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00337(a,r)

  equal to the following expression:
 
          -SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , -MAKEBACTSHR(c,a,r) *  IF( 

          MAKES(c,a,r) GT 0   , ESUBQ(c,r))))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 23.

 ==================================================
 +24+
 ++> Task  24 - Substituting out variable 'qfm'
 ==================================================


  >> Equation number   9 selected for substitution.
     Equation name is 'E_qfm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
 
 To simplify the 'afcom' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00338(c,r)

  equal to the following expression:
 
          -SUM(a,ACTS,FMCSHR(c,a,r) * {-1.0 + ESUBC(a,r)})

     E_del_taxriu (equation number  95)
 
 To simplify the 'pint' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00339(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-MFTAX(c,a,r) * ESUBC(a,r)) + C00319(a,r)

 
 To simplify the 'qint' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00340(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-MFTAX(c,a,r)) + C00320(a,r)

 
 To simplify the 'afcom' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00341(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-MFTAX(c,a,r) * {-1.0 + ESUBC(a,r)}) + C00321(c,r)

 
 To simplify the 'afsec' part of equation 'E_del_taxriu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00342(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-MFTAX(c,a,r) * {-1.0 + ESUBC(a,r)}) + C00322(a,r)

 
 To simplify the 'afreg' part of equation 'E_del_taxriu', we will set
 
          (ALL,r,REG) C00343(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(a,ACTS,-MFTAX(c,a,r) * {-1.0 + ESUBC(a,r)})) + 

          C00323(r)

     E_EV_ALT (equation number 169)
 
 To simplify the 'pint' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00344(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBC(a,r)) + 

          C00330(a,r)

 
 To simplify the 'qint' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00345(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r)) + C00331(a,r)

 
 To simplify the 'afcom' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00346(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)}) + C00332(c,r)

 
 To simplify the 'afsec' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00347(a,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)}) + C00333(a,r)

 
 To simplify the 'afreg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00348(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(a,ACTS,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * {-1.0

           + ESUBC(a,r)})) + C00334(r)

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'afcom' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00349(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * {-1.0 + ESUBC(a,

          r)}) + C00335(c,r)

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 24.

 ==================================================
 +25+
 ++> Task  25 - Substituting out variable 'compvalad'
 ==================================================


  >> Equation number 116 selected for substitution.
     Equation name is 'E_compvalad'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 25.

 ==================================================
 +26+
 ++> Task  26 - Substituting out variable 'qgd'
 ==================================================


  >> Equation number  42 selected for substitution.
     Equation name is 'E_qgd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qds (equation number  63)
     E_del_taxrgc (equation number  97)
     E_EV_ALT (equation number 169)
     E_CNTqgd (equation number 191)
     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 26.

 ==================================================
 +27+
 ++> Task  27 - Substituting out variable 'pfa'
 ==================================================


  >> Equation number  10 selected for substitution.
     Equation name is 'E_pfa'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
     E_pint (equation number   5)
     E_qms (equation number  50)
 
 To simplify the 'pds' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00350(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-FMCSHR(c,a,r) * {-ESUBC(a,r) + ESUBD(c,r)} * {1   - 

          FMSHR(c,a,r)})

     E_qds (equation number  63)
 
 To simplify the 'pds' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00351(c,r)

  equal to the following expression:
 
          C00289(c,r) + SUM(a,ACTS,{-FDCSHR(c,a,r) * ESUBD(c,r) + FDCSHR(c,a,r)

           * ESUBC(a,r)} * {1   - FMSHR(c,a,r)})

     E_del_taxriu (equation number  95)
 
 To simplify the 'pds' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00352(c,r)

  equal to the following expression:
 
          C00290(c,r) + SUM(a,ACTS,{-MFTAX(c,a,r) * [-ESUBC(a,r) + ESUBD(c,r)]

           - DFTAX(c,a,r) * ESUBD(c,r) + DFTAX(c,a,r) * ESUBC(a,r)} * {1   - 

          FMSHR(c,a,r)})

     E_valuewu (equation number 125)
 
 To simplify the 'pds' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00353(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-VFP(c,a,s) * {1.0 - ESUBC(a,s)} * {1   - FMSHR(c,a,s)})

     E_pwu (equation number 134)
 
 To simplify the 'pds' part of equation 'E_pwu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00354(c,s)

  equal to the following expression:
 
          -SUM(a,ACTS,VFP(c,a,s) * {1   - FMSHR(c,a,s)})

     E_qowu (equation number 143)
 
 To simplify the 'pds' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00355(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,VFP(c,a,s) * ESUBC(a,s) * {1   - FMSHR(c,a,s)})

     E_EV_ALT (equation number 169)
 
 To simplify the 'pds' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00356(c,r)

  equal to the following expression:
 
          C00292(c,r) + SUM(a,ACTS,{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * [-

          ESUBC(a,r) + ESUBD(c,r)] - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * 

          ESUBD(c,r) + 0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r)} * {

          1   - FMSHR(c,a,r)})

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'pds' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00357(c,r)

  equal to the following expression:
 
          C00293(c,r) + SUM(a,ACTS,{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * [-

          ESUBC(a,r) + ESUBD(c,r)] - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * 

          ESUBD(c,r) + 0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r)} * {

          1   - FMSHR(c,a,r)})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 27.

 ==================================================
 +28+
 ++> Task  28 - Substituting out variable 'pes'
 ==================================================


  >> Equation number  81 selected for substitution.
     Equation name is 'E_pes'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {-1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qes1 (equation number  76)
     E_qes2 (equation number  77)
     E_pe2 (equation number  78)
     E_del_taxrinc (equation number 101)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 28.

 ==================================================
 +29+
 ++> Task  29 - Substituting out variable 'pgd'
 ==================================================


  >> Equation number  69 selected for substitution.
     Equation name is 'E_pgd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pga (equation number  44)
     E_qds (equation number  63)
     E_del_taxrgc (equation number  97)
     E_EV_ALT (equation number 169)
     E_CNTqgd (equation number 191)
     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 29.

 ==================================================
 +30+
 ++> Task  30 - Substituting out variable 'ps'
 ==================================================


  >> Equation number  18 selected for substitution.
     Equation name is 'E_ps'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          { IF( MAKEB(c,a,r) GT 0   ,  IF( MAKES(c,a,r) GT 0   , ESUBQ(c,r) * 

          ETRAQ(a,r))) - 1.0}

 
 %W% Check above coefficient will never be zero.
 
 (To simplify the rewritten equations, we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) (ALL,r,REG) C00358(c,a,r)

  equal to  -1.0  divided by the coefficient shown above.)
 
     This substitution was made in the following equations :
     -------------------------------------------------------

     E_po (equation number  17)
 
 To simplify the 'po' part of equation 'E_po', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00359(a,r)

  equal to the following expression:
 
          1.0 - SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , MAKESACTSHR(c,a,r) * 

          C00358(c,a,r) *  IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r) * ETRAQ(a,r)))

          )

 
 To simplify the 'qo' part of equation 'E_po', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00360(a,r)

  equal to the following expression:
 
          -SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , MAKESACTSHR(c,a,r) * C00358(c,

          a,r) *  IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r))))

     E_pb (equation number  19)
 
 To simplify the 'po' part of equation 'E_pb', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00361(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , - IF( MAKES(c,a,r) GT 0   , 

          MAKEBACTSHR(c,a,r) * ESUBQ(c,r) * ETRAQ(a,r)) * C00358(c,a,r) *  IF( 

          MAKES(c,a,r) GT 0   , -ESUBQ(c,r) * ETRAQ(a,r)))) + C00336(a,r)

 
 To simplify the 'qo' part of equation 'E_pb', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00362(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , - IF( MAKES(c,a,r) GT 0   , 

          MAKEBACTSHR(c,a,r) * ESUBQ(c,r) * ETRAQ(a,r)) * C00358(c,a,r) *  IF( 

          MAKES(c,a,r) GT 0   , -ESUBQ(c,r)))) + C00337(a,r)

     E_qc (equation number  21)
 
 To simplify the 'pds' part of equation 'E_qc', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00363(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          MAKEBCOMSHR(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 1.0))

 
 To simplify the 'qc' part of equation 'E_qc', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00364(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          MAKEBCOMSHR(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * ESUBQ(c,r))) + 1.0

     E_del_taxrout (equation number  93)
 
 To simplify the 'pds' part of equation 'E_del_taxrout', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00365(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( MAKEB(c,a,r) GT 0   , -PTAX(c,a,r) * {1.0 +  IF( 

          MAKES(c,a,r) GT 0   , -ETRAQ(a,r))} * C00358(c,a,r) * 1.0))

 
 To simplify the 'po' part of equation 'E_del_taxrout', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00366(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , -PTAX(c,a,r) * {1.0 +  IF( 

          MAKES(c,a,r) GT 0   , -ETRAQ(a,r))} * C00358(c,a,r) *  IF( MAKES(c,a,

          r) GT 0   , -ESUBQ(c,r) * ETRAQ(a,r)))) + C00310(a,r)

 
 To simplify the 'qo' part of equation 'E_del_taxrout', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00367(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( MAKEB(c,a,r) GT 0   , -PTAX(c,a,r) * {1.0 +  IF( 

          MAKES(c,a,r) GT 0   , -ETRAQ(a,r))} * C00358(c,a,r) *  IF( MAKES(c,a,

          r) GT 0   , -ESUBQ(c,r)))) + C00311(a,r)

 
 To simplify the 'qc' part of equation 'E_del_taxrout', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00368(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( MAKEB(c,a,r) GT 0   , -PTAX(c,a,r) * {1.0 +  IF( 

          MAKES(c,a,r) GT 0   , -ETRAQ(a,r))} * C00358(c,a,r) * ESUBQ(c,r)))

     E_EV_ALT (equation number 169)
 
 To simplify the 'pds' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00369(c,r)

  equal to the following expression:
 
          C00356(c,r) + 0.01   * EVSCALFACT(r) * DGTAX(c,r) * ESUBD(c,r) + 

          SUM(a,ACTS, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

          1.0))

 
 To simplify the 'po' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00370(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

           IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r) * ETRAQ(a,r)))) + C00312(a,r)

 
 To simplify the 'qo' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00371(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

           IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r)))) + C00313(a,r)

 
 To simplify the 'qc' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00372(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

          ESUBQ(c,r)))

     E_CNTqor (equation number 173)
 
 To simplify the 'pds' part of equation 'E_CNTqor', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00373(c,r)

  equal to the following expression:
 
          SUM(a,ACTS, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

          1.0))

 
 To simplify the 'po' part of equation 'E_CNTqor', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00374(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

           IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r) * ETRAQ(a,r)))) + C00315(a,r)

 
 To simplify the 'qo' part of equation 'E_CNTqor', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00375(a,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( {MAKES(c,a,r) GT 0  } AND {MAKEB(c,a,r) GT 0  } , 

          0.01   * EVSCALFACT(r) * PTAX(c,a,r) * ETRAQ(a,r) * C00358(c,a,r) * 

           IF( MAKES(c,a,r) GT 0   , -ESUBQ(c,r)))) + C00316(a,r)

     E_CNTqo (equation number 174)
     E_CNTqca (equation number 175)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 30.

 ==================================================
 +31+
 ++> Task  31 - Substituting out variable 'CNTtech_ava'
 ==================================================


  >> Equation number 205 selected for substitution.
     Equation name is 'E_CNTtech_ava'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 31.

 ==================================================
 +32+
 ++> Task  32 - Substituting out variable 'CNTendw'
 ==================================================


  >> Equation number 201 selected for substitution.
     Equation name is 'E_CNTendw'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 32.

 ==================================================
 +33+
 ++> Task  33 - Substituting out variable 'qint'
 ==================================================


  >> Equation number   1 selected for substitution.
     Equation name is 'E_qint'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
     E_qds (equation number  63)
     E_del_taxriu (equation number  95)
     E_valuewu (equation number 125)
     E_qowu (equation number 143)
     E_EV_ALT (equation number 169)
     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 33.

 ==================================================
 +34+
 ++> Task  34 - Substituting out variable 'CNTqe'
 ==================================================


  >> Equation number 176 selected for substitution.
     Equation name is 'E_CNTqe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 34.

 ==================================================
 +35+
 ++> Task  35 - Substituting out variable 'pmds'
 ==================================================


  >> Equation number  61 selected for substitution.
     Equation name is 'E_pmds'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qxs (equation number  51)
     E_pms (equation number  52)
 
 To simplify the 'tm' part of equation 'E_pms', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00376(c,d)

  equal to the following expression:
 
          -SUM(s,REG,MSHRS(c,s,d))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 35.

 ==================================================
 +36+
 ++> Task  36 - Substituting out variable 'pcif'
 ==================================================


  >> Equation number  60 selected for substitution.
     Equation name is 'E_pcif'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qxs (equation number  51)
     E_pms (equation number  52)
 
 To simplify the 'pt' part of equation 'E_pms', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00377(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,-MSHRS(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d))

 
 To simplify the 'atm' part of equation 'E_pms', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00378(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,MSHRS(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d))

 
 To simplify the 'atf' part of equation 'E_pms', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00379(c,d)

  equal to the following expression:
 
          SUM(s,REG,MSHRS(c,s,d) * C00299(c,s,d))

     E_del_taxrimp (equation number 100)
 
 To simplify the 'pt' part of equation 'E_del_taxrimp', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00380(m,d)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,MTAX(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,

          d)))

 
 To simplify the 'atm' part of equation 'E_del_taxrimp', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00381(m,d)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,

          d)))

 
 To simplify the 'atf' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00382(c,d)

  equal to the following expression:
 
          -SUM(s,REG,-MTAX(c,s,d) * C00299(c,s,d))

 
 To simplify the 'ats' part of equation 'E_del_taxrimp', we will set
 
          (ALL,s,REG) (ALL,d,REG) C00383(s,d)

  equal to the following expression:
 
          -SUM(c,COMM,-MTAX(c,s,d) * C00299(c,s,d))

 
 To simplify the 'atd' part of equation 'E_del_taxrimp', we will set
 
          (ALL,d,REG) C00384(d)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d) * C00299(c,s,d)))

 
 To simplify the 'tm' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00385(c,d)

  equal to the following expression:
 
          -SUM(s,REG,VMSB(c,s,d))

     E_pdw (equation number 111)
 
 To simplify the 'pt' part of equation 'E_pdw', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00386(m,r)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,

          r)))

 
 To simplify the 'atm' part of equation 'E_pdw', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00387(m,r)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,

          r)))

 
 To simplify the 'atf' part of equation 'E_pdw', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00388(c,r)

  equal to the following expression:
 
          -SUM(s,REG,-VCIF(c,s,r) * C00299(c,s,r))

 
 To simplify the 'ats' part of equation 'E_pdw', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00389(s,r)

  equal to the following expression:
 
          -SUM(c,COMM,-VCIF(c,s,r) * C00299(c,s,r))

 
 To simplify the 'atd' part of equation 'E_pdw', we will set
 
          (ALL,r,REG) C00390(r)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * C00299(c,s,r)))

     E_vgdp (equation number 113)
 
 To simplify the 'pt' part of equation 'E_vgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00391(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r)

          ))

 
 To simplify the 'atm' part of equation 'E_vgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00392(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,

          r)))

 
 To simplify the 'atf' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00393(c,r)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,r) * C00299(c,s,r))

 
 To simplify the 'ats' part of equation 'E_vgdp', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00394(s,r)

  equal to the following expression:
 
          SUM(c,COMM,-VCIF(c,s,r) * C00299(c,s,r))

 
 To simplify the 'atd' part of equation 'E_vgdp', we will set
 
          (ALL,r,REG) C00395(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * C00299(c,s,r)))

     E_pgdp (equation number 114)
     E_vmwcif (equation number 121)
 
 To simplify the 'pt' part of equation 'E_vmwcif', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00396(m,c,d)

  equal to the following expression:
 
          -SUM(s,REG,VCIF(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d))

 
 To simplify the 'atm' part of equation 'E_vmwcif', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00397(m,c,d)

  equal to the following expression:
 
          -SUM(s,REG,-VCIF(c,s,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d))

 
 To simplify the 'atf' part of equation 'E_vmwcif', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00398(c,d)

  equal to the following expression:
 
          -SUM(s,REG,-VCIF(c,s,d) * C00299(c,s,d))

     E_pmw (equation number 130)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 36.

 ==================================================
 +37+
 ++> Task  37 - Substituting out variable 'qpd'
 ==================================================


  >> Equation number  36 selected for substitution.
     Equation name is 'E_qpd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qds (equation number  63)
     E_del_taxrpc (equation number  96)
     E_EV_ALT (equation number 169)
     E_CNTqpd (equation number 184)
     E_CNTqpr (equation number 185)
 
 To simplify the 'pop' part of equation 'E_CNTqpr', we will set
 
          (ALL,d,DIR) (ALL,r,REG) C00399(d,r)

  equal to the following expression:
 
          -{ IF( $POS(d , DIR ) EQ $POS("domestic" , DIR ) , 0.01   * 

          EVSCALFACT(r) * SUM(c,COMM,-DPTAX(c,r))) +  IF( $POS(d , DIR ) EQ 

          $POS("imported" , DIR ) , 0.01   * EVSCALFACT(r) * SUM(c,COMM,-

          MPTAX(c,r)))}

     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 37.

 ==================================================
 +38+
 ++> Task  38 - Substituting out variable 'CNTqpd'
 ==================================================


  >> Equation number 184 selected for substitution.
     Equation name is 'E_CNTqpd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 38.

 ==================================================
 +39+
 ++> Task  39 - Substituting out variable 'CNTqid'
 ==================================================


  >> Equation number 188 selected for substitution.
     Equation name is 'E_CNTqid'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 39.

 ==================================================
 +40+
 ++> Task  40 - Substituting out variable 'c3_cr'
 ==================================================


  >> Equation number 151 selected for substitution.
     Equation name is 'E_c3_cr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_c3_r (equation number 154)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 40.

 ==================================================
 +41+
 ++> Task  41 - Substituting out variable 'CNTqms'
 ==================================================


  >> Equation number 195 selected for substitution.
     Equation name is 'E_CNTqms'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 41.

 ==================================================
 +42+
 ++> Task  42 - Substituting out variable 'qim'
 ==================================================


  >> Equation number  48 selected for substitution.
     Equation name is 'E_qim'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
     E_del_taxric (equation number  98)
 
 To simplify the 'qinv' part of equation 'E_del_taxric', we will set
 
          (ALL,r,REG) C00400(r)

  equal to the following expression:
 
          -SUM(c,COMM,MITAX(c,r))

     E_EV_ALT (equation number 169)
 
 To simplify the 'qinv' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00401(r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * MITAX(c,r))

     E_CNTqia (equation number 186)
 
 To simplify the 'pop' part of equation 'E_CNTqia', we will set
 
          (ALL,d,DIR) (ALL,r,REG) C00402(d,r)

  equal to the following expression:
 
          -{ IF( $POS(d , DIR ) EQ $POS("domestic" , DIR ) , SUM(c,COMM,-

          DITAX(c,r) * 0.01   * EVSCALFACT(r))) +  IF( $POS(d , DIR ) EQ 

          $POS("imported" , DIR ) , SUM(c,COMM,-MITAX(c,r) * 0.01   * 

          EVSCALFACT(r)))}

 
 To simplify the 'qinv' part of equation 'E_CNTqia', we will set
 
          (ALL,d,DIR) (ALL,r,REG) C00403(d,r)

  equal to the following expression:
 
           IF( $POS(d , DIR ) EQ $POS("imported" , DIR ) , -SUM(c,COMM,MITAX(c,

          r) * 0.01   * EVSCALFACT(r)))

     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 42.

 ==================================================
 +43+
 ++> Task  43 - Substituting out variable 'CNTtech_ao'
 ==================================================


  >> Equation number 203 selected for substitution.
     Equation name is 'E_CNTtech_ao'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 43.

 ==================================================
 +44+
 ++> Task  44 - Substituting out variable 'CNTqca'
 ==================================================


  >> Equation number 175 selected for substitution.
     Equation name is 'E_CNTqca'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 44.

 ==================================================
 +45+
 ++> Task  45 - Substituting out variable 'qxs'
 ==================================================


  >> Equation number  51 selected for substitution.
     Equation name is 'E_qxs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qtm (equation number  55)
 
 To simplify the 'pms' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00404(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,-VTMUSESHR(m,c,s,d) * ESUBM(c,d))

 
 To simplify the 'qms' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00405(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,-VTMUSESHR(m,c,s,d))

 
 To simplify the 'pt' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,XX01,MARG) C00406(m,XX01)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,SUM(d,REG,VTMUSESHR(m,c,s,d) * ESUBM(c,d) * 

          TRNSHR(c,s,d) * VTFSD_MSH(XX01,c,s,d))))

 
 To simplify the 'atm' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,XX02,MARG) C00407(m,XX02)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,SUM(d,REG,-VTMUSESHR(m,c,s,d) * ESUBM(c,d) * 

          TRNSHR(c,s,d) * VTFSD_MSH(XX02,c,s,d))))

 
 To simplify the 'atf' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) C00408(m,c)

  equal to the following expression:
 
          SUM(s,REG,SUM(d,REG,-VTMUSESHR(m,c,s,d) * ESUBM(c,d) * C00299(c,s,d))

          ) + C00296(m,c)

 
 To simplify the 'ats' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00409(m,s)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-VTMUSESHR(m,c,s,d) * ESUBM(c,d) * C00299(c,s,d)

          )) + C00297(m,s)

 
 To simplify the 'atd' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00410(m,d)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-VTMUSESHR(m,c,s,d) * ESUBM(c,d) * C00299(c,s,d)

          )) + C00298(m,d)

 
 To simplify the 'tm' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00411(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,VTMUSESHR(m,c,s,d) * ESUBM(c,d))

     E_pds (equation number  64)
 
 To simplify the 'pt' part of equation 'E_pds', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00412(m,c,r)

  equal to the following expression:
 
          -SUM(d,REG,-XSSHR(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * VTFSD_MSH(m,

          c,r,d))

 
 To simplify the 'atm' part of equation 'E_pds', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00413(m,c,r)

  equal to the following expression:
 
          -SUM(d,REG,XSSHR(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * VTFSD_MSH(m,c,

          r,d))

 
 To simplify the 'atf' part of equation 'E_pds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00414(c,r)

  equal to the following expression:
 
          -SUM(d,REG,XSSHR(c,r,d) * ESUBM(c,d) * C00299(c,r,d))

     E_del_taxrexp (equation number  99)
 
 To simplify the 'pds' part of equation 'E_del_taxrexp', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00415(c,s)

  equal to the following expression:
 
          -SUM(d,REG,XTAXD(c,s,d))

 
 To simplify the 'pt' part of equation 'E_del_taxrexp', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00416(m,s)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(d,REG,-XTAXD(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * 

          VTFSD_MSH(m,c,s,d)))

 
 To simplify the 'atm' part of equation 'E_del_taxrexp', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00417(m,s)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(d,REG,XTAXD(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * 

          VTFSD_MSH(m,c,s,d)))

 
 To simplify the 'atf' part of equation 'E_del_taxrexp', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00418(c,s)

  equal to the following expression:
 
          -SUM(d,REG,XTAXD(c,s,d) * ESUBM(c,d) * C00299(c,s,d))

 
 To simplify the 'ats' part of equation 'E_del_taxrexp', we will set
 
          (ALL,s,REG) C00419(s)

  equal to the following expression:
 
          -SUM(c,COMM,SUM(d,REG,XTAXD(c,s,d) * ESUBM(c,d) * C00299(c,s,d)))

 
 To simplify the 'atd' part of equation 'E_del_taxrexp', we will set
 
          (ALL,s,REG) (ALL,d,REG) C00420(s,d)

  equal to the following expression:
 
          -SUM(c,COMM,XTAXD(c,s,d) * ESUBM(c,d) * C00299(c,s,d))

 
 To simplify the 'tx' part of equation 'E_del_taxrexp', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00421(c,s)

  equal to the following expression:
 
          -SUM(d,REG,VFOB(c,s,d))

     E_del_taxrimp (equation number 100)
 
 To simplify the 'pms' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00422(c,d)

  equal to the following expression:
 
          SUM(s,REG,-MTAX(c,s,d) * ESUBM(c,d))

 
 To simplify the 'qms' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00423(c,d)

  equal to the following expression:
 
          SUM(s,REG,-MTAX(c,s,d))

 
 To simplify the 'pt' part of equation 'E_del_taxrimp', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00424(m,d)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,MTAX(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * 

          VTFSD_MSH(m,c,s,d))) + C00380(m,d)

 
 To simplify the 'atm' part of equation 'E_del_taxrimp', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00425(m,d)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * 

          VTFSD_MSH(m,c,s,d))) + C00381(m,d)

 
 To simplify the 'atf' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00426(c,d)

  equal to the following expression:
 
          SUM(s,REG,-MTAX(c,s,d) * ESUBM(c,d) * C00299(c,s,d)) + C00382(c,d)

 
 To simplify the 'ats' part of equation 'E_del_taxrimp', we will set
 
          (ALL,s,REG) (ALL,d,REG) C00427(s,d)

  equal to the following expression:
 
          SUM(c,COMM,-MTAX(c,s,d) * ESUBM(c,d) * C00299(c,s,d)) + C00383(s,d)

 
 To simplify the 'atd' part of equation 'E_del_taxrimp', we will set
 
          (ALL,d,REG) C00428(d)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d) * ESUBM(c,d) * C00299(c,s,d))) + 

          C00384(d)

 
 To simplify the 'tm' part of equation 'E_del_taxrimp', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00429(c,d)

  equal to the following expression:
 
          SUM(s,REG,MTAX(c,s,d) * ESUBM(c,d)) + C00385(c,d)

     E_vgdp (equation number 113)
 
 To simplify the 'pms' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00430(c,r)

  equal to the following expression:
 
          SUM(s,REG,VCIF(c,s,r) * ESUBM(c,r))

 
 To simplify the 'qms' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00431(c,r)

  equal to the following expression:
 
          SUM(s,REG,VCIF(c,s,r))

 
 To simplify the 'pt' part of equation 'E_vgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00432(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * 

          VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * ESUBM(c,r)

           * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r))) + C00391(m,r)

 
 To simplify the 'atm' part of equation 'E_vgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00433(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * 

          VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * ESUBM(c,r)

           * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r))) + C00392(m,r)

 
 To simplify the 'atf' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00434(c,r)

  equal to the following expression:
 
          SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * C00299(c,r,d)) + SUM(s,REG,

          VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r)) + C00393(c,r)

 
 To simplify the 'ats' part of equation 'E_vgdp', we will set
 
          (ALL,r,REG) C00435(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * C00299(c,r,d)))

 
 To simplify the 'ats' part of equation 'E_vgdp', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00436(s,r)

  equal to the following expression:
 
          SUM(c,COMM,VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r)) + C00394(s,r)

 
 To simplify the 'atd' part of equation 'E_vgdp', we will set
 
          (ALL,r,REG) (ALL,d,REG) C00437(r,d)

  equal to the following expression:
 
          SUM(c,COMM,-VFOB(c,r,d) * ESUBM(c,d) * C00299(c,r,d))

 
 To simplify the 'atd' part of equation 'E_vgdp', we will set
 
          (ALL,r,REG) C00438(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r))) + 

          C00395(r)

 
 To simplify the 'tm' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00439(c,r)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,r) * ESUBM(c,r))

     E_qgdp (equation number 115)
 
 To simplify the 'pt' part of equation 'E_qgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00440(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * 

          VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,SUM(s,REG,-VCIF(c,s,r) * ESUBM(c,r)

           * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r)))

 
 To simplify the 'atm' part of equation 'E_qgdp', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00441(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * 

          VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * ESUBM(c,r)

           * TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r)))

 
 To simplify the 'atf' part of equation 'E_qgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00442(c,r)

  equal to the following expression:
 
          SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * C00299(c,r,d)) + SUM(s,REG,

          VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r))

 
 To simplify the 'ats' part of equation 'E_qgdp', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00443(s,r)

  equal to the following expression:
 
          SUM(c,COMM,VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r))

 
 To simplify the 'atd' part of equation 'E_qgdp', we will set
 
          (ALL,r,REG) C00444(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,VCIF(c,s,r) * ESUBM(c,r) * C00299(c,s,r)))

     E_vxwfob (equation number 117)
 
 To simplify the 'pt' part of equation 'E_vxwfob', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00445(m,c,r)

  equal to the following expression:
 
          -SUM(d,REG,-VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * VTFSD_MSH(m,c,

          r,d))

 
 To simplify the 'atm' part of equation 'E_vxwfob', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00446(m,c,r)

  equal to the following expression:
 
          -SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * TRNSHR(c,r,d) * VTFSD_MSH(m,c,

          r,d))

 
 To simplify the 'atf' part of equation 'E_vxwfob', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00447(c,r)

  equal to the following expression:
 
          -SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * C00299(c,r,d))

     E_vmwcif (equation number 121)
 
 To simplify the 'pms' part of equation 'E_vmwcif', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00448(c,d)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,d) * ESUBM(c,d))

 
 To simplify the 'qms' part of equation 'E_vmwcif', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00449(c,d)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,d))

 
 To simplify the 'pt' part of equation 'E_vmwcif', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00450(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,VCIF(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,

          d)) + C00396(m,c,d)

 
 To simplify the 'atm' part of equation 'E_vmwcif', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00451(m,c,d)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,

          s,d)) + C00397(m,c,d)

 
 To simplify the 'atf' part of equation 'E_vmwcif', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00452(c,d)

  equal to the following expression:
 
          SUM(s,REG,-VCIF(c,s,d) * ESUBM(c,d) * C00299(c,s,d)) + C00398(c,d)

 
 To simplify the 'tm' part of equation 'E_vmwcif', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00453(c,d)

  equal to the following expression:
 
          SUM(s,REG,VCIF(c,s,d) * ESUBM(c,d))

     E_qxw (equation number 135)
     E_qmw (equation number 139)
 
 To simplify the 'pms' part of equation 'E_qmw', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00454(c,d)

  equal to the following expression:
 
          -SUM(s,REG,VCIF(c,s,d) * ESUBM(c,d))

 
 To simplify the 'qms' part of equation 'E_qmw', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00455(c,d)

  equal to the following expression:
 
          -SUM(s,REG,VCIF(c,s,d))

 
 To simplify the 'pt' part of equation 'E_qmw', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00456(m,c,d)

  equal to the following expression:
 
          -SUM(s,REG,-VCIF(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,

          s,d))

 
 To simplify the 'atm' part of equation 'E_qmw', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,d,REG) C00457(m,c,d)

  equal to the following expression:
 
          -SUM(s,REG,VCIF(c,s,d) * ESUBM(c,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,

          s,d))

 
 To simplify the 'atf' part of equation 'E_qmw', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00458(c,d)

  equal to the following expression:
 
          -SUM(s,REG,VCIF(c,s,d) * ESUBM(c,d) * C00299(c,s,d))

 
 To simplify the 'tm' part of equation 'E_qmw', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00459(c,d)

  equal to the following expression:
 
          -SUM(s,REG,-VCIF(c,s,d) * ESUBM(c,d))

     E_EV_ALT (equation number 169)
 
 To simplify the 'pms' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00460(c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r))

 
 To simplify the 'qms' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00461(c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r))

 
 To simplify the 'pt' part of equation 'E_EV_ALT', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00462(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * ESUBM(c,

          d) * TRNSHR(c,r,d) * VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,SUM(s,REG,

          0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * TRNSHR(c,s,r) * 

          VTFSD_MSH(m,c,s,r))) + 0.01   * EVSCALFACT(r) * VTMD(m,r)

 
 To simplify the 'atm' part of equation 'E_EV_ALT', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00463(m,r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * 

          ESUBM(c,d) * TRNSHR(c,r,d) * VTFSD_MSH(m,c,r,d))) + SUM(c,COMM,

          SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * 

          TRNSHR(c,s,r) * VTFSD_MSH(m,c,s,r))) + C00300(m,r)

 
 To simplify the 'atf' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00464(c,r)

  equal to the following expression:
 
          SUM(d,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * ESUBM(c,d) * 

          C00299(c,r,d)) + SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * 

          ESUBM(c,r) * C00299(c,s,r)) + C00301(c,r)

 
 To simplify the 'ats' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00465(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(d,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * 

          ESUBM(c,d) * C00299(c,r,d)))

 
 To simplify the 'ats' part of equation 'E_EV_ALT', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00466(s,r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * 

          C00299(c,s,r)) + C00302(s,r)

 
 To simplify the 'atd' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) (ALL,d,REG) C00467(r,d)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * ESUBM(c,d) * 

          C00299(c,r,d))

 
 To simplify the 'atd' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00468(r)

  equal to the following expression:
 
          SUM(c,COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,

          r) * C00299(c,s,r))) + C00303(r)

 
 To simplify the 'tm' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00469(c,r)

  equal to the following expression:
 
          SUM(s,REG,0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r))

     E_CNTqxsr (equation number 192)
 
 To simplify the 'pop' part of equation 'E_CNTqxsr', we will set
 
          (ALL,r,REG) C00470(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,SUM(s,REG,-XTAXD(c,r,s)))

 
 To simplify the 'pt' part of equation 'E_CNTqxsr', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00471(m,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,SUM(s,REG,-XTAXD(c,r,s) * 

          ESUBM(c,s) * TRNSHR(c,r,s) * VTFSD_MSH(m,c,r,s)))

 
 To simplify the 'atm' part of equation 'E_CNTqxsr', we will set
 
          (ALL,m,MARG) (ALL,r,REG) C00472(m,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,SUM(s,REG,XTAXD(c,r,s) * 

          ESUBM(c,s) * TRNSHR(c,r,s) * VTFSD_MSH(m,c,r,s)))

 
 To simplify the 'atf' part of equation 'E_CNTqxsr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00473(c,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,XTAXD(c,r,s) * ESUBM(c,s) * 

          C00299(c,r,s))

 
 To simplify the 'ats' part of equation 'E_CNTqxsr', we will set
 
          (ALL,r,REG) C00474(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,SUM(s,REG,XTAXD(c,r,s) * 

          ESUBM(c,s) * C00299(c,r,s)))

 
 To simplify the 'atd' part of equation 'E_CNTqxsr', we will set
 
          (ALL,r,REG) (ALL,s,REG) C00475(r,s)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(c,COMM,XTAXD(c,r,s) * ESUBM(c,s) * 

          C00299(c,r,s))

     E_CNTqxs (equation number 193)
     E_CNTqmsr (equation number 194)
 
 To simplify the 'pms' part of equation 'E_CNTqmsr', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00476(c,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(s,REG,MTAX(c,s,d) * ESUBM(c,d))

 
 To simplify the 'pop' part of equation 'E_CNTqmsr', we will set
 
          (ALL,d,REG) C00477(d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d)))

 
 To simplify the 'qms' part of equation 'E_CNTqmsr', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00478(c,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(s,REG,MTAX(c,s,d))

 
 To simplify the 'pt' part of equation 'E_CNTqmsr', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00479(m,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(c,COMM,SUM(s,REG,-MTAX(c,s,d) * 

          ESUBM(c,d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d)))

 
 To simplify the 'atm' part of equation 'E_CNTqmsr', we will set
 
          (ALL,m,MARG) (ALL,d,REG) C00480(m,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(c,COMM,SUM(s,REG,MTAX(c,s,d) * ESUBM(c,

          d) * TRNSHR(c,s,d) * VTFSD_MSH(m,c,s,d)))

 
 To simplify the 'atf' part of equation 'E_CNTqmsr', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00481(c,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(s,REG,MTAX(c,s,d) * ESUBM(c,d) * 

          C00299(c,s,d))

 
 To simplify the 'ats' part of equation 'E_CNTqmsr', we will set
 
          (ALL,s,REG) (ALL,d,REG) C00482(s,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(c,COMM,MTAX(c,s,d) * ESUBM(c,d) * 

          C00299(c,s,d))

 
 To simplify the 'atd' part of equation 'E_CNTqmsr', we will set
 
          (ALL,d,REG) C00483(d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(c,COMM,SUM(s,REG,MTAX(c,s,d) * ESUBM(c,

          d) * C00299(c,s,d)))

 
 To simplify the 'tm' part of equation 'E_CNTqmsr', we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00484(c,d)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(d) * SUM(s,REG,-MTAX(c,s,d) * ESUBM(c,d))

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'pt' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00485(m,c,r)

  equal to the following expression:
 
          SUM(s,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          TRNSHR(c,r,s) * VTFSD_MSH(m,c,r,s)) + SUM(s,REG,0.01   * 

          EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * TRNSHR(c,s,r) * 

          VTFSD_MSH(m,c,s,r))

 
 To simplify the 'atm' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,r,REG) C00486(m,c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          TRNSHR(c,r,s) * VTFSD_MSH(m,c,r,s)) + SUM(s,REG,-0.01   * 

          EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * TRNSHR(c,s,r) * 

          VTFSD_MSH(m,c,s,r))

 
 To simplify the 'atf' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00487(c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          C00299(c,r,s)) + SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * 

          ESUBM(c,r) * C00299(c,s,r))

 
 To simplify the 'ats' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00488(c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          C00299(c,r,s))

 
 To simplify the 'atd' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00489(c,r)

  equal to the following expression:
 
          SUM(s,REG,-0.01   * EVSCALFACT(r) * MTAX(c,s,r) * ESUBM(c,r) * 

          C00299(c,s,r))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 45.

 ==================================================
 +46+
 ++> Task  46 - Substituting out variable 'c1_cr'
 ==================================================


  >> Equation number 149 selected for substitution.
     Equation name is 'E_c1_cr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_c1_r (equation number 152)
 
 To simplify the 'pxwwld' part of equation 'E_c1_r', we will set
 
          (ALL,r,REG) C00490(r)

  equal to the following expression:
 
          -SUM(c,COMM,-{SX_CR(c,r) - SM_CR(c,r)})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 46.

 ==================================================
 +47+
 ++> Task  47 - Substituting out variable 'CNTqfeer'
 ==================================================


  >> Equation number 178 selected for substitution.
     Equation name is 'E_CNTqfeer'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 47.

 ==================================================
 +48+
 ++> Task  48 - Substituting out variable 'qmw'
 ==================================================


  >> Equation number 139 selected for substitution.
     Equation name is 'E_qmw'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {VMCIF(c,d)}

 
 %W% Check above coefficient will never be zero.
 
 (To simplify the rewritten equations, we will set
 
          (ALL,c,COMM) (ALL,d,REG) C00491(c,d)

  equal to  -1.0  divided by the coefficient shown above.)
 
     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qmwreg (equation number 140)
 
 To simplify the 'pt' part of equation 'E_qmwreg', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00492(m,s)

  equal to the following expression:
 
          -SUM(c,COMM,VMCIF(c,s) * C00491(c,s) * C00456(m,c,s))

 
 To simplify the 'atm' part of equation 'E_qmwreg', we will set
 
          (ALL,m,MARG) (ALL,s,REG) C00493(m,s)

  equal to the following expression:
 
          -SUM(c,COMM,VMCIF(c,s) * C00491(c,s) * C00457(m,c,s))

 
 To simplify the 'ats' part of equation 'E_qmwreg', we will set
 
          (ALL,XX03,REG) (ALL,s,REG) C00494(XX03,s)

  equal to the following expression:
 
          -SUM(c,COMM,-VMCIF(c,s) * C00491(c,s) * VCIF(c,XX03,s) * ESUBM(c,s)

           * C00299(c,XX03,s))

 
 To simplify the 'atd' part of equation 'E_qmwreg', we will set
 
          (ALL,s,REG) C00495(s)

  equal to the following expression:
 
          -SUM(c,COMM,VMCIF(c,s) * C00491(c,s) * C00458(c,s))

     E_qmwcom (equation number 141)
 
 To simplify the 'pt' part of equation 'E_qmwcom', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) C00496(m,c)

  equal to the following expression:
 
          -SUM(s,REG,VMCIF(c,s) * C00491(c,s) * C00456(m,c,s))

 
 To simplify the 'atm' part of equation 'E_qmwcom', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) C00497(m,c)

  equal to the following expression:
 
          -SUM(s,REG,VMCIF(c,s) * C00491(c,s) * C00457(m,c,s))

 
 To simplify the 'atf' part of equation 'E_qmwcom', we will set
 
          (ALL,c,COMM) C00498(c)

  equal to the following expression:
 
          -SUM(s,REG,VMCIF(c,s) * C00491(c,s) * C00458(c,s))

 
 To simplify the 'ats' part of equation 'E_qmwcom', we will set
 
          (ALL,c,COMM) (ALL,XX03,REG) C00499(c,XX03)

  equal to the following expression:
 
          -SUM(s,REG,-VMCIF(c,s) * C00491(c,s) * VCIF(c,XX03,s) * ESUBM(c,s) * 

          C00299(c,XX03,s))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 48.

 ==================================================
 +49+
 ++> Task  49 - Substituting out variable 'ppm'
 ==================================================


  >> Equation number  68 selected for substitution.
     Equation name is 'E_ppm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qpm (equation number  37)
     E_ppa (equation number  38)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 49.

 ==================================================
 +50+
 ++> Task  50 - Substituting out variable 'qpm'
 ==================================================


  >> Equation number  37 selected for substitution.
     Equation name is 'E_qpm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
     E_del_taxrpc (equation number  96)
     E_EV_ALT (equation number 169)
     E_CNTqpr (equation number 185)
     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 50.

 ==================================================
 +51+
 ++> Task  51 - Substituting out variable 'CNTtech_ams'
 ==================================================


  >> Equation number 209 selected for substitution.
     Equation name is 'E_CNTtech_ams'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 51.

 ==================================================
 +52+
 ++> Task  52 - Substituting out variable 'CNTqgd'
 ==================================================


  >> Equation number 191 selected for substitution.
     Equation name is 'E_CNTqgd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 52.

 ==================================================
 +53+
 ++> Task  53 - Substituting out variable 'pfm'
 ==================================================


  >> Equation number  66 selected for substitution.
     Equation name is 'E_pfm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
     E_pint (equation number   5)
     E_qms (equation number  50)
 
 To simplify the 'pms' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00500(c,r)

  equal to the following expression:
 
          PMCSHR(c,r) * ESUBD(c,r) + SUM(a,ACTS,FMCSHR(c,a,r) * ESUBD(c,r) - 

          FMCSHR(c,a,r) * {-ESUBC(a,r) + ESUBD(c,r)} * FMSHR(c,a,r))

     E_qds (equation number  63)
 
 To simplify the 'pms' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00501(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-FDCSHR(c,a,r) * ESUBD(c,r) + FDCSHR(c,a,r) * ESUBC(a,r)}

           * FMSHR(c,a,r))

     E_del_taxriu (equation number  95)
 
 To simplify the 'pms' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00502(c,r)

  equal to the following expression:
 
          C00291(c,r) + SUM(a,ACTS,MFTAX(c,a,r) * ESUBD(c,r) + {-MFTAX(c,a,r)

           * [-ESUBC(a,r) + ESUBD(c,r)] - DFTAX(c,a,r) * ESUBD(c,r) + DFTAX(c,

          a,r) * ESUBC(a,r)} * FMSHR(c,a,r))

     E_valuewu (equation number 125)
 
 To simplify the 'pms' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00503(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-VFP(c,a,s) * {1.0 - ESUBC(a,s)} * FMSHR(c,a,s))

     E_pwu (equation number 134)
 
 To simplify the 'pms' part of equation 'E_pwu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00504(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-VFP(c,a,s) * FMSHR(c,a,s))

     E_qowu (equation number 143)
 
 To simplify the 'pms' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00505(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,VFP(c,a,s) * ESUBC(a,s) * FMSHR(c,a,s))

     E_EV_ALT (equation number 169)
 
 To simplify the 'pms' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00506(c,r)

  equal to the following expression:
 
          C00460(c,r) + 0.01   * EVSCALFACT(r) * MPTAX(c,r) * ESUBD(c,r) + 

          SUM(a,ACTS,0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBD(c,r) + {-

          0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * [-ESUBC(a,r) + ESUBD(c,r)] - 

          0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBD(c,r) + 0.01   * 

          EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r)} * FMSHR(c,a,r))

     E_CNTalleffcr (equation number 197)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 53.

 ==================================================
 +54+
 ++> Task  54 - Substituting out variable 'qva'
 ==================================================


  >> Equation number   2 selected for substitution.
     Equation name is 'E_qva'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pe1 (equation number  75)
     E_peb (equation number  82)
     E_del_taxrfu (equation number  94)
     E_del_taxrinc (equation number 101)
     E_EV_ALT (equation number 169)
     E_CNTqfer (equation number 177)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 54.

 ==================================================
 +55+
 ++> Task  55 - Substituting out variable 'pfob'
 ==================================================


  >> Equation number  59 selected for substitution.
     Equation name is 'E_pfob'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pms (equation number  52)
     E_qtm (equation number  55)
 
 To simplify the 'pds' part of equation 'E_qtm', we will set
 
          (ALL,m,MARG) (ALL,c,COMM) (ALL,s,REG) C00507(m,c,s)

  equal to the following expression:
 
          SUM(d,REG,VTMUSESHR(m,c,s,d) * ESUBM(c,d) * FOBSHR(c,s,d))

     E_pds (equation number  64)
 
 To simplify the 'pds' part of equation 'E_pds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00508(c,r)

  equal to the following expression:
 
          SUM(d,REG,XSSHR(c,r,d) * ESUBM(c,d) * FOBSHR(c,r,d))

     E_del_taxrexp (equation number  99)
 
 To simplify the 'pds' part of equation 'E_del_taxrexp', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00509(c,s)

  equal to the following expression:
 
          C00415(c,s) + SUM(d,REG,XTAXD(c,s,d) * ESUBM(c,d) * FOBSHR(c,s,d))

 
 To simplify the 'tx' part of equation 'E_del_taxrexp', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00510(c,s)

  equal to the following expression:
 
          SUM(d,REG,XTAXD(c,s,d) * ESUBM(c,d) * FOBSHR(c,s,d)) + C00421(c,s)

     E_del_taxrimp (equation number 100)
     E_psw (equation number 110)
 
 To simplify the 'pds' part of equation 'E_psw', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00511(c,r)

  equal to the following expression:
 
          -SUM(d,REG,VFOB(c,r,d))

     E_pdw (equation number 111)
     E_vgdp (equation number 113)
 
 To simplify the 'pds' part of equation 'E_vgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00512(c,r)

  equal to the following expression:
 
          SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * FOBSHR(c,r,d) - VFOB(c,r,d))

     E_pgdp (equation number 114)
 
 To simplify the 'pds' part of equation 'E_pgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00513(c,r)

  equal to the following expression:
 
          SUM(d,REG,-VFOB(c,r,d))

     E_qgdp (equation number 115)
 
 To simplify the 'pds' part of equation 'E_qgdp', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00514(c,r)

  equal to the following expression:
 
          SUM(d,REG,VFOB(c,r,d) * ESUBM(c,d) * FOBSHR(c,r,d))

     E_vxwfob (equation number 117)
 
 To simplify the 'pds' part of equation 'E_vxwfob', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00515(c,r)

  equal to the following expression:
 
          SUM(d,REG,-VFOB(c,r,d) * {-ESUBM(c,d) * FOBSHR(c,r,d) + 1.0})

     E_vmwcif (equation number 121)
     E_pxw (equation number 126)
     E_pmw (equation number 130)
     E_qxw (equation number 135)
     E_qmwreg (equation number 140)
     E_qmwcom (equation number 141)
 
 To simplify the 'pds' part of equation 'E_qmwcom', we will set
 
          (ALL,c,COMM) (ALL,XX01,REG) C00516(c,XX01)

  equal to the following expression:
 
          SUM(s,REG,-VMCIF(c,s) * C00491(c,s) * VCIF(c,XX01,s) * ESUBM(c,s) * 

          FOBSHR(c,XX01,s))

     E_pm_cr (equation number 148)
     E_EV_ALT (equation number 169)
 
 To simplify the 'pds' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00517(c,r)

  equal to the following expression:
 
          C00369(c,r) + SUM(d,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * 

          ESUBM(c,d) * FOBSHR(c,r,d) - 0.01   * EVSCALFACT(r) * VFOB(c,r,d))

 
 To simplify the 'tx' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00518(c,r)

  equal to the following expression:
 
          SUM(d,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,d) * ESUBM(c,d) * 

          FOBSHR(c,r,d) - 0.01   * EVSCALFACT(r) * VFOB(c,r,d))

     E_CNTqxsr (equation number 192)
 
 To simplify the 'pds' part of equation 'E_CNTqxsr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00519(c,r)

  equal to the following expression:
 
          SUM(s,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          FOBSHR(c,r,s))

     E_CNTqxs (equation number 193)
     E_CNTqmsr (equation number 194)
     E_CNTalleffcr (equation number 197)
 
 To simplify the 'pds' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00520(c,r)

  equal to the following expression:
 
          C00357(c,r) + 0.01   * EVSCALFACT(r) * DGTAX(c,r) * ESUBD(c,r) + 

          SUM(s,REG,0.01   * EVSCALFACT(r) * XTAXD(c,r,s) * ESUBM(c,s) * 

          FOBSHR(c,r,s))

     E_CNTtotr (equation number 198)
 
 To simplify the 'pds' part of equation 'E_CNTtotr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00521(c,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,VFOB(c,r,s))

 
 To simplify the 'pxwwld' part of equation 'E_CNTtotr', we will set
 
          (ALL,r,REG) C00522(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {SUM(c,COMM,SUM(s,REG,-VFOB(c,r,s))) + 

          SUM(m,MARG,-VST(m,r)) - SUM(c,COMM,SUM(s,REG,-VFOB(c,s,r))) - 

          SUM(m,MARG,-VTMD(m,r))}

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 55.

 ==================================================
 +56+
 ++> Task  56 - Substituting out variable 'pint'
 ==================================================


  >> Equation number   5 selected for substitution.
     Equation name is 'E_pint'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
 
 To simplify the 'pds' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,XX01,COMM) (ALL,r,REG) C00523(c,XX01,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-FMCSHR(c,a,r) * ESUBC(a,r) + FMCSHR(c,a,r) * ESUBT(a,r)}

           * INTSHR(XX01,a,r) * {1   - FMSHR(XX01,a,r)})

 
 To simplify the 'pms' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,XX02,COMM) (ALL,r,REG) C00524(c,XX02,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-FMCSHR(c,a,r) * ESUBC(a,r) + FMCSHR(c,a,r) * ESUBT(a,r)}

           * INTSHR(XX02,a,r) * FMSHR(XX02,a,r))

 
 To simplify the 'afcom' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,XX03,COMM) (ALL,r,REG) C00525(c,XX03,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-FMCSHR(c,a,r) * ESUBC(a,r) + FMCSHR(c,a,r) * ESUBT(a,r)

          } * INTSHR(XX03,a,r))

 
 To simplify the 'afreg' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00526(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-FMCSHR(c,a,r) * ESUBC(a,r) + FMCSHR(c,a,r) * ESUBT(a,r)

          } * C00306(a,r)) + C00338(c,r)

     E_qds (equation number  63)
 
 To simplify the 'pds' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,XX01,COMM) (ALL,r,REG) C00527(c,XX01,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-FDCSHR(c,a,r) * ESUBC(a,r) + FDCSHR(c,a,r) * ESUBT(a,r)}

           * INTSHR(XX01,a,r) * {1   - FMSHR(XX01,a,r)})

 
 To simplify the 'pms' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,XX02,COMM) (ALL,r,REG) C00528(c,XX02,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-FDCSHR(c,a,r) * ESUBC(a,r) + FDCSHR(c,a,r) * ESUBT(a,r)}

           * INTSHR(XX02,a,r) * FMSHR(XX02,a,r))

 
 To simplify the 'afcom' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,XX03,COMM) (ALL,r,REG) C00529(c,XX03,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-FDCSHR(c,a,r) * ESUBC(a,r) + FDCSHR(c,a,r) * ESUBT(a,r)

          } * INTSHR(XX03,a,r))

 
 To simplify the 'afreg' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00530(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-FDCSHR(c,a,r) * ESUBC(a,r) + FDCSHR(c,a,r) * ESUBT(a,r)

          } * C00306(a,r)) + C00318(c,r)

     E_del_taxriu (equation number  95)
 
 To simplify the 'pds' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00531(c,r)

  equal to the following expression:
 
          C00352(c,r) + SUM(a,ACTS,{C00339(a,r) - C00340(a,r) * ESUBT(a,r)} * 

          INTSHR(c,a,r) * {1   - FMSHR(c,a,r)})

 
 To simplify the 'pms' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00532(c,r)

  equal to the following expression:
 
          C00502(c,r) + SUM(a,ACTS,{C00339(a,r) - C00340(a,r) * ESUBT(a,r)} * 

          INTSHR(c,a,r) * FMSHR(c,a,r))

 
 To simplify the 'afcom' part of equation 'E_del_taxriu', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00533(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00339(a,r) - C00340(a,r) * ESUBT(a,r)} * INTSHR(c,a,r))

           + C00341(c,r)

 
 To simplify the 'afreg' part of equation 'E_del_taxriu', we will set
 
          (ALL,r,REG) C00534(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00339(a,r) - C00340(a,r) * ESUBT(a,r)} * C00306(a,r))

           + C00343(r)

     E_valuewu (equation number 125)
 
 To simplify the 'pds' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,XX01,COMM) (ALL,s,REG) C00535(c,XX01,s)

  equal to the following expression:
 
          SUM(a,ACTS,{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          INTSHR(XX01,a,s) * {1   - FMSHR(XX01,a,s)})

 
 To simplify the 'pms' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,XX02,COMM) (ALL,s,REG) C00536(c,XX02,s)

  equal to the following expression:
 
          SUM(a,ACTS,{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          INTSHR(XX02,a,s) * FMSHR(XX02,a,s))

 
 To simplify the 'afcom' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,XX03,COMM) C00537(c,XX03)

  equal to the following expression:
 
          SUM(a,ACTS,SUM(s,REG,-{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * 

          ESUBT(a,s)} * INTSHR(XX03,a,s)))

 
 To simplify the 'afsec' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) C00538(c,a)

  equal to the following expression:
 
          SUM(s,REG,-{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          C00306(a,s)) + C00325(c,a)

 
 To simplify the 'afreg' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00539(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          C00306(a,s)) + C00326(c,s)

     E_qowu (equation number 143)
 
 To simplify the 'afsec' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) C00540(c,a)

  equal to the following expression:
 
          SUM(s,REG,-{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          C00306(a,s)) + C00328(c,a)

 
 To simplify the 'afreg' part of equation 'E_qowu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00541(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-{-VFP(c,a,s) * ESUBC(a,s) + VFP(c,a,s) * ESUBT(a,s)} * 

          C00306(a,s)) + C00329(c,s)

     E_EV_ALT (equation number 169)
 
 To simplify the 'pds' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00542(c,r)

  equal to the following expression:
 
          C00517(c,r) + SUM(a,ACTS,{C00344(a,r) - C00345(a,r) * ESUBT(a,r)} * 

          INTSHR(c,a,r) * {1   - FMSHR(c,a,r)})

 
 To simplify the 'pms' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00543(c,r)

  equal to the following expression:
 
          C00506(c,r) + SUM(a,ACTS,{C00344(a,r) - C00345(a,r) * ESUBT(a,r)} * 

          INTSHR(c,a,r) * FMSHR(c,a,r))

 
 To simplify the 'afcom' part of equation 'E_EV_ALT', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00544(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00344(a,r) - C00345(a,r) * ESUBT(a,r)} * INTSHR(c,a,r))

           + C00346(c,r)

 
 To simplify the 'afreg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00545(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00344(a,r) - C00345(a,r) * ESUBT(a,r)} * C00306(a,r))

           + C00348(r)

     E_CNTalleffcr (equation number 197)
 
 To simplify the 'pds' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,XX01,COMM) (ALL,r,REG) C00546(c,XX01,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBC(a,r) - 

          0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r) - [-0.01   * 

          EVSCALFACT(r) * MFTAX(c,a,r) - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r)]

           * ESUBT(a,r)} * INTSHR(XX01,a,r) * {1   - FMSHR(XX01,a,r)})

 
 To simplify the 'pms' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,XX02,COMM) (ALL,r,REG) C00547(c,XX02,r)

  equal to the following expression:
 
          SUM(a,ACTS,{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBC(a,r) - 

          0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r) - [-0.01   * 

          EVSCALFACT(r) * MFTAX(c,a,r) - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r)]

           * ESUBT(a,r)} * INTSHR(XX02,a,r) * FMSHR(XX02,a,r))

 
 To simplify the 'afcom' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,XX03,COMM) (ALL,r,REG) C00548(c,XX03,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBC(a,r) - 

          0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r) - [-0.01   * 

          EVSCALFACT(r) * MFTAX(c,a,r) - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r)]

           * ESUBT(a,r)} * INTSHR(XX03,a,r))

 
 To simplify the 'afreg' part of equation 'E_CNTalleffcr', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00549(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-0.01   * EVSCALFACT(r) * MFTAX(c,a,r) * ESUBC(a,r) - 

          0.01   * EVSCALFACT(r) * DFTAX(c,a,r) * ESUBC(a,r) - [-0.01   * 

          EVSCALFACT(r) * MFTAX(c,a,r) - 0.01   * EVSCALFACT(r) * DFTAX(c,a,r)]

           * ESUBT(a,r)} * C00306(a,r)) + C00349(c,r)

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 56.

 ==================================================
 +57+
 ++> Task  57 - Substituting out variable 'pfe'
 ==================================================


  >> Equation number  80 selected for substitution.
     Equation name is 'E_pfe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
     E_pva (equation number   7)
     E_pe1 (equation number  75)
     E_peb (equation number  82)
     E_del_taxrfu (equation number  94)
     E_del_taxrinc (equation number 101)
     E_EV_ALT (equation number 169)
     E_CNTqfer (equation number 177)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 57.

 ==================================================
 +58+
 ++> Task  58 - Substituting out variable 'CNTalleffcr'
 ==================================================


  >> Equation number 197 selected for substitution.
     Equation name is 'E_CNTalleffcr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 58.

 ==================================================
 +59+
 ++> Task  59 - Substituting out variable 'CNTtech_af'
 ==================================================


  >> Equation number 207 selected for substitution.
     Equation name is 'E_CNTtech_af'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 59.

 ==================================================
 +60+
 ++> Task  60 - Substituting out variable 'CNTtech_aint'
 ==================================================


  >> Equation number 206 selected for substitution.
     Equation name is 'E_CNTtech_aint'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 60.

 ==================================================
 +61+
 ++> Task  61 - Substituting out variable 'CNTtech_afe'
 ==================================================


  >> Equation number 204 selected for substitution.
     Equation name is 'E_CNTtech_afe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 61.

 ==================================================
 +62+
 ++> Task  62 - Substituting out variable 'afe'
 ==================================================


  >> Equation number  14 selected for substitution.
     Equation name is 'E_afe'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
 
 To simplify the 'afesec' part of equation 'E_qo', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00550(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,STC(e,a,r))

     E_pva (equation number   7)
 
 To simplify the 'afesec' part of equation 'E_pva', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00551(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,VASHR(e,a,r))

     E_pe1 (equation number  75)
 
 To simplify the 'afecom' part of equation 'E_pe1', we will set
 
          (ALL,e,ENDWM) (ALL,r,REG) C00552(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-ENDWMSHR(e,a,r) * {-1.0 + ESUBVA(a,r)})

     E_peb (equation number  82)
     E_del_taxrfu (equation number  94)
 
 To simplify the 'afecom' part of equation 'E_del_taxrfu', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00553(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-ETAX(e,a,r) * {-1.0 + ESUBVA(a,r)})

 
 To simplify the 'afesec' part of equation 'E_del_taxrfu', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00554(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,-ETAX(e,a,r) * {-1.0 + ESUBVA(a,r)})

 
 To simplify the 'afereg' part of equation 'E_del_taxrfu', we will set
 
          (ALL,r,REG) C00555(r)

  equal to the following expression:
 
          SUM(e,ENDW,SUM(a,ACTS,-ETAX(e,a,r) * {-1.0 + ESUBVA(a,r)}))

     E_del_taxrinc (equation number 101)
 
 To simplify the 'afecom' part of equation 'E_del_taxrinc', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00556(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-INCTAX(e,a,r) * {-1.0 + ESUBVA(a,r)})

 
 To simplify the 'afesec' part of equation 'E_del_taxrinc', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00557(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,-INCTAX(e,a,r) * {-1.0 + ESUBVA(a,r)})

 
 To simplify the 'afereg' part of equation 'E_del_taxrinc', we will set
 
          (ALL,r,REG) C00558(r)

  equal to the following expression:
 
          SUM(e,ENDW,SUM(a,ACTS,-INCTAX(e,a,r) * {-1.0 + ESUBVA(a,r)}))

     E_EV_ALT (equation number 169)
 
 To simplify the 'afecom' part of equation 'E_EV_ALT', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00559(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * {ETAX(e,a,r) * [-1.0 + ESUBVA(a,

          r)] + VFP(e,a,r)})

 
 To simplify the 'afesec' part of equation 'E_EV_ALT', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00560(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,-0.01   * EVSCALFACT(r) * {ETAX(e,a,r) * [-1.0 + ESUBVA(a,

          r)] + VFP(e,a,r)})

 
 To simplify the 'afereg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00561(r)

  equal to the following expression:
 
          SUM(e,ENDW,SUM(a,ACTS,-0.01   * EVSCALFACT(r) * {ETAX(e,a,r) * [-1.0

           + ESUBVA(a,r)] + VFP(e,a,r)}))

     E_CNTqfer (equation number 177)
 
 To simplify the 'afecom' part of equation 'E_CNTqfer', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00562(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-0.01   * EVSCALFACT(r) * ETAX(e,a,r) * {-1.0 + ESUBVA(a,

          r)})

 
 To simplify the 'afesec' part of equation 'E_CNTqfer', we will set
 
          (ALL,a,ACTS) (ALL,r,REG) C00563(a,r)

  equal to the following expression:
 
          SUM(e,ENDW,-0.01   * EVSCALFACT(r) * ETAX(e,a,r) * {-1.0 + ESUBVA(a,

          r)})

 
 To simplify the 'afereg' part of equation 'E_CNTqfer', we will set
 
          (ALL,r,REG) C00564(r)

  equal to the following expression:
 
          SUM(e,ENDW,SUM(a,ACTS,-0.01   * EVSCALFACT(r) * ETAX(e,a,r) * {-1.0

           + ESUBVA(a,r)}))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 62.

 ==================================================
 +63+
 ++> Task  63 - Substituting out variable 'qid'
 ==================================================


  >> Equation number  47 selected for substitution.
     Equation name is 'E_qid'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qds (equation number  63)
     E_del_taxric (equation number  98)
 
 To simplify the 'qinv' part of equation 'E_del_taxric', we will set
 
          (ALL,r,REG) C00565(r)

  equal to the following expression:
 
          SUM(c,COMM,-DITAX(c,r)) + C00400(r)

     E_EV_ALT (equation number 169)
 
 To simplify the 'qinv' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00566(r)

  equal to the following expression:
 
          SUM(c,COMM,-0.01   * EVSCALFACT(r) * DITAX(c,r)) + C00401(r)

     E_CNTqia (equation number 186)
 
 To simplify the 'qinv' part of equation 'E_CNTqia', we will set
 
          (ALL,d,DIR) (ALL,r,REG) C00567(d,r)

  equal to the following expression:
 
          SUM(c,COMM, IF( $POS(d , DIR ) EQ $POS("domestic" , DIR ) , -DITAX(c,

          r) * 0.01   * EVSCALFACT(r))) + C00403(d,r)

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 63.

 ==================================================
 +64+
 ++> Task  64 - Substituting out variable 'pva'
 ==================================================


  >> Equation number   7 selected for substitution.
     Equation name is 'E_pva'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pe1 (equation number  75)
 
 To simplify the 'afecom' part of equation 'E_pe1', we will set
 
          (ALL,e,ENDWM) (ALL,XX02,ENDW) (ALL,r,REG) C00568(e,XX02,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-ENDWMSHR(e,a,r) * ESUBVA(a,r) + ENDWMSHR(e,a,r) * 

          ESUBT(a,r)} * VASHR(XX02,a,r))

 
 To simplify the 'afereg' part of equation 'E_pe1', we will set
 
          (ALL,e,ENDWM) (ALL,r,REG) C00569(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{-ENDWMSHR(e,a,r) * ESUBVA(a,r) + ENDWMSHR(e,a,r) * 

          ESUBT(a,r)} * C00551(a,r)) + C00552(e,r)

     E_peb (equation number  82)
     E_del_taxrfu (equation number  94)
 
 To simplify the 'afecom' part of equation 'E_del_taxrfu', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00570(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00275(a,r) - C00276(a,r) * ESUBT(a,r)} * VASHR(e,a,r))

           + C00553(e,r)

 
 To simplify the 'afereg' part of equation 'E_del_taxrfu', we will set
 
          (ALL,r,REG) C00571(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00275(a,r) - C00276(a,r) * ESUBT(a,r)} * C00551(a,r))

           + C00555(r)

     E_del_taxrinc (equation number 101)
 
 To simplify the 'afecom' part of equation 'E_del_taxrinc', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00572(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00277(a,r) - C00278(a,r) * ESUBT(a,r)} * VASHR(e,a,r))

           + C00556(e,r)

 
 To simplify the 'afereg' part of equation 'E_del_taxrinc', we will set
 
          (ALL,r,REG) C00573(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00277(a,r) - C00278(a,r) * ESUBT(a,r)} * C00551(a,r))

           + C00558(r)

     E_EV_ALT (equation number 169)
 
 To simplify the 'afecom' part of equation 'E_EV_ALT', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00574(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00281(a,r) - C00282(a,r) * ESUBT(a,r)} * VASHR(e,a,r))

           + C00559(e,r)

 
 To simplify the 'afereg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00575(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00281(a,r) - C00282(a,r) * ESUBT(a,r)} * C00551(a,r))

           + C00561(r)

     E_CNTqfer (equation number 177)
 
 To simplify the 'afecom' part of equation 'E_CNTqfer', we will set
 
          (ALL,e,ENDW) (ALL,r,REG) C00576(e,r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00281(a,r) - C00282(a,r) * ESUBT(a,r)} * VASHR(e,a,r))

           + C00562(e,r)

 
 To simplify the 'afereg' part of equation 'E_CNTqfer', we will set
 
          (ALL,r,REG) C00577(r)

  equal to the following expression:
 
          SUM(a,ACTS,-{C00281(a,r) - C00282(a,r) * ESUBT(a,r)} * C00551(a,r))

           + C00564(r)

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 64.

 ==================================================
 +65+
 ++> Task  65 - Substituting out variable 'qgm'
 ==================================================


  >> Equation number  43 selected for substitution.
     Equation name is 'E_qgm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qms (equation number  50)
     E_del_taxrgc (equation number  97)
     E_EV_ALT (equation number 169)
     E_CNTqgm (equation number 190)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 65.

 ==================================================
 +66+
 ++> Task  66 - Substituting out variable 'CNTqo'
 ==================================================


  >> Equation number 174 selected for substitution.
     Equation name is 'E_CNTqo'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 66.

 ==================================================
 +67+
 ++> Task  67 - Substituting out variable 'CNTtech_atmfsd'
 ==================================================


  >> Equation number 208 selected for substitution.
     Equation name is 'E_CNTtech_atmfsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 67.

 ==================================================
 +68+
 ++> Task  68 - Substituting out variable 'CNTqgm'
 ==================================================


  >> Equation number 190 selected for substitution.
     Equation name is 'E_CNTqgm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 68.

 ==================================================
 +69+
 ++> Task  69 - Substituting out variable 'ppd'
 ==================================================


  >> Equation number  67 selected for substitution.
     Equation name is 'E_ppd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_ppa (equation number  38)
     E_qds (equation number  63)
     E_del_taxrpc (equation number  96)
     E_EV_ALT (equation number 169)
     E_CNTqpr (equation number 185)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 69.

 ==================================================
 +70+
 ++> Task  70 - Substituting out variable 'pgm'
 ==================================================


  >> Equation number  70 selected for substitution.
     Equation name is 'E_pgm'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_pga (equation number  44)
     E_qms (equation number  50)
     E_del_taxrgc (equation number  97)
     E_EV_ALT (equation number 169)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 70.

 ==================================================
 +71+
 ++> Task  71 - Substituting out variable 'CNTqxs'
 ==================================================


  >> Equation number 193 selected for substitution.
     Equation name is 'E_CNTqxs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 71.

 ==================================================
 +72+
 ++> Task  72 - Substituting out variable 'qpev'
 ==================================================


  >> Equation number 157 selected for substitution.
     Equation name is 'E_qpev'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_ueprivev (equation number 159)
 
 To simplify the 'pop' part of equation 'E_ueprivev', we will set
 
          (ALL,r,REG) C00578(r)

  equal to the following expression:
 
          -SUM(c,COMM,-XWCONSHREV(c,r) * {-1.0 + EYEV(c,r)})

 
 To simplify the 'ypev' part of equation 'E_ueprivev', we will set
 
          (ALL,r,REG) C00579(r)

  equal to the following expression:
 
          -SUM(c,COMM,XWCONSHREV(c,r) * {EYEV(c,r) - 1.0})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 72.

 ==================================================
 +73+
 ++> Task  73 - Substituting out variable 'aint'
 ==================================================


  >> Equation number  15 selected for substitution.
     Equation name is 'E_aint'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     E_qo (equation number   3)
     E_qms (equation number  50)
 
 To simplify the 'aintreg' part of equation 'E_qms', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00580(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-FMCSHR(c,a,r) * {-1.0 + ESUBT(a,r)})

     E_qds (equation number  63)
 
 To simplify the 'aintreg' part of equation 'E_qds', we will set
 
          (ALL,c,COMM) (ALL,r,REG) C00581(c,r)

  equal to the following expression:
 
          SUM(a,ACTS,-FDCSHR(c,a,r) * {-1.0 + ESUBT(a,r)})

     E_del_taxriu (equation number  95)
 
 To simplify the 'aintreg' part of equation 'E_del_taxriu', we will set
 
          (ALL,r,REG) C00582(r)

  equal to the following expression:
 
          SUM(a,ACTS,C00340(a,r) * {-1.0 + ESUBT(a,r)})

     E_valuewu (equation number 125)
 
 To simplify the 'aintsec' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,a,ACTS) C00583(c,a)

  equal to the following expression:
 
          SUM(s,REG,-VFP(c,a,s) * {-1.0 + ESUBT(a,s)})

 
 To simplify the 'aintreg' part of equation 'E_valuewu', we will set
 
          (ALL,c,COMM) (ALL,s,REG) C00584(c,s)

  equal to the following expression:
 
          SUM(a,ACTS,-VFP(c,a,s) * {-1.0 + ESUBT(a,s)})

     E_qowu (equation number 143)
     E_EV_ALT (equation number 169)
 
 To simplify the 'aintreg' part of equation 'E_EV_ALT', we will set
 
          (ALL,r,REG) C00585(r)

  equal to the following expression:
 
          SUM(a,ACTS,C00345(a,r) * {-1.0 + ESUBT(a,r)} + C00280(a,r))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 73.

 ==================================================
 --> Summary of CONDENSATION
 ==================================================



     ============================
     List of CONDENSATION actions
     ============================

     The following  73 condensation actions were performed : 

     Action |  Brief description of action
     -------|---------------------------------------------------
            | 
         1  |  OMISSION
            |  The following variables were omitted: 
            |     atall          (var. no. 113)
            |     avaall         (var. no.  74)
            |     tfe            (var. no. 135)
            |     tfd            (var. no. 121)
            |     tfm            (var. no. 122)
            |     tgd            (var. no. 125)
            |     tgm            (var. no. 126)
            |     tpd            (var. no. 123)
            |     tpm            (var. no. 124)
            |     tid            (var. no. 127)
            |     tim            (var. no. 128)
            | 
         2  |  BACKSOLVE
            |  Variable 'pfactreal      ' (var. no. 163)
            |  was made available for backsolving
            |  using equation 'E_pfactreal         ' (eq. no. 109)
            | 
         3  |  BACKSOLVE
            |  Variable 'CNTqpm         ' (var. no. 233)
            |  was made available for backsolving
            |  using equation 'E_CNTqpm            ' (eq. no. 183)
            | 
         4  |  BACKSOLVE
            |  Variable 'CNTqfd         ' (var. no. 232)
            |  was made available for backsolving
            |  using equation 'E_CNTqfd            ' (eq. no. 182)
            | 
         5  |  BACKSOLVE
            |  Variable 'CNTqfr         ' (var. no. 230)
            |  was made available for backsolving
            |  using equation 'E_CNTqfr            ' (eq. no. 180)
            | 
         6  |  BACKSOLVE
            |  Variable 'CNTtechr       ' (var. no. 252)
            |  was made available for backsolving
            |  using equation 'E_CNTtechr          ' (eq. no. 202)
            | 
         7  |  BACKSOLVE
            |  Variable 'CNTqfm         ' (var. no. 231)
            |  was made available for backsolving
            |  using equation 'E_CNTqfm            ' (eq. no. 181)
            | 
         8  |  BACKSOLVE
            |  Variable 'qfe            ' (var. no.  10)
            |  was made available for backsolving
            |  using equation 'E_qfe               ' (eq. no.   6)
            | 
         9  |  BACKSOLVE
            |  Variable 'CNTalleffr     ' (var. no. 246)
            |  was made available for backsolving
            |  using equation 'E_CNTalleffr        ' (eq. no. 196)
            | 
        10  |  BACKSOLVE
            |  Variable 'CNTqim         ' (var. no. 237)
            |  was made available for backsolving
            |  using equation 'E_CNTqim            ' (eq. no. 187)
            | 
        11  |  BACKSOLVE
            |  Variable 'pfd            ' (var. no.   5)
            |  was made available for backsolving
            |  using equation 'E_pfd               ' (eq. no.  65)
            | 
        12  |  BACKSOLVE
            |  Variable 'qia            ' (var. no. 101)
            |  was made available for backsolving
            |  using equation 'E_qia               ' (eq. no.  45)
            | 
        13  |  BACKSOLVE
            |  Variable 'qtmfsd         ' (var. no. 105)
            |  was made available for backsolving
            |  using equation 'E_qtmfsd            ' (eq. no.  53)
            | 
        14  |  BACKSOLVE
            |  Variable 'qfd            ' (var. no.   2)
            |  was made available for backsolving
            |  using equation 'E_qfd               ' (eq. no.   8)
            | 
        15  |  BACKSOLVE
            |  Variable 'CNTqfe         ' (var. no. 229)
            |  was made available for backsolving
            |  using equation 'E_CNTqfe            ' (eq. no. 179)
            | 
        16  |  BACKSOLVE
            |  Variable 'CNTqgr         ' (var. no. 239)
            |  was made available for backsolving
            |  using equation 'E_CNTqgr            ' (eq. no. 189)
            | 
        17  |  BACKSOLVE
            |  Variable 'c2_cr          ' (var. no. 200)
            |  was made available for backsolving
            |  using equation 'E_c2_cr             ' (eq. no. 150)
            | 
        18  |  BACKSOLVE
            |  Variable 'ptrans         ' (var. no. 104)
            |  was made available for backsolving
            |  using equation 'E_ptrans            ' (eq. no.  54)
            | 
        19  |  BACKSOLVE
            |  Variable 'atmfsd         ' (var. no. 108)
            |  was made available for backsolving
            |  using equation 'E_atmfsd            ' (eq. no.  58)
            | 
        20  |  BACKSOLVE
            |  Variable 'afa            ' (var. no.  62)
            |  was made available for backsolving
            |  using equation 'E_afa               ' (eq. no.  12)
            | 
        21  |  BACKSOLVE
            |  Variable 'qca            ' (var. no.  13)
            |  was made available for backsolving
            |  using equation 'E_qca               ' (eq. no.  16)
            | 
        22  |  BACKSOLVE
            |  Variable 'qfa            ' (var. no.  61)
            |  was made available for backsolving
            |  using equation 'E_qfa               ' (eq. no.   4)
            | 
        23  |  BACKSOLVE
            |  Variable 'pca            ' (var. no.  14)
            |  was made available for backsolving
            |  using equation 'E_pca               ' (eq. no.  20)
            | 
        24  |  BACKSOLVE
            |  Variable 'qfm            ' (var. no.   4)
            |  was made available for backsolving
            |  using equation 'E_qfm               ' (eq. no.   9)
            | 
        25  |  BACKSOLVE
            |  Variable 'compvalad      ' (var. no. 170)
            |  was made available for backsolving
            |  using equation 'E_compvalad         ' (eq. no. 116)
            | 
        26  |  BACKSOLVE
            |  Variable 'qgd            ' (var. no.  15)
            |  was made available for backsolving
            |  using equation 'E_qgd               ' (eq. no.  42)
            | 
        27  |  BACKSOLVE
            |  Variable 'pfa            ' (var. no.  60)
            |  was made available for backsolving
            |  using equation 'E_pfa               ' (eq. no.  10)
            | 
        28  |  BACKSOLVE
            |  Variable 'pes            ' (var. no.   7)
            |  was made available for backsolving
            |  using equation 'E_pes               ' (eq. no.  81)
            | 
        29  |  BACKSOLVE
            |  Variable 'pgd            ' (var. no.  17)
            |  was made available for backsolving
            |  using equation 'E_pgd               ' (eq. no.  69)
            | 
        30  |  BACKSOLVE
            |  Variable 'ps             ' (var. no.  12)
            |  was made available for backsolving
            |  using equation 'E_ps                ' (eq. no.  18)
            | 
        31  |  BACKSOLVE
            |  Variable 'CNTtech_ava    ' (var. no. 255)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_ava       ' (eq. no. 205)
            | 
        32  |  BACKSOLVE
            |  Variable 'CNTendw        ' (var. no. 251)
            |  was made available for backsolving
            |  using equation 'E_CNTendw           ' (eq. no. 201)
            | 
        33  |  BACKSOLVE
            |  Variable 'qint           ' (var. no.  55)
            |  was made available for backsolving
            |  using equation 'E_qint              ' (eq. no.   1)
            | 
        34  |  BACKSOLVE
            |  Variable 'CNTqe          ' (var. no. 226)
            |  was made available for backsolving
            |  using equation 'E_CNTqe             ' (eq. no. 176)
            | 
        35  |  BACKSOLVE
            |  Variable 'pmds           ' (var. no.  34)
            |  was made available for backsolving
            |  using equation 'E_pmds              ' (eq. no.  61)
            | 
        36  |  BACKSOLVE
            |  Variable 'pcif           ' (var. no.  33)
            |  was made available for backsolving
            |  using equation 'E_pcif              ' (eq. no.  60)
            | 
        37  |  BACKSOLVE
            |  Variable 'qpd            ' (var. no.  19)
            |  was made available for backsolving
            |  using equation 'E_qpd               ' (eq. no.  36)
            | 
        38  |  BACKSOLVE
            |  Variable 'CNTqpd         ' (var. no. 234)
            |  was made available for backsolving
            |  using equation 'E_CNTqpd            ' (eq. no. 184)
            | 
        39  |  BACKSOLVE
            |  Variable 'CNTqid         ' (var. no. 238)
            |  was made available for backsolving
            |  using equation 'E_CNTqid            ' (eq. no. 188)
            | 
        40  |  BACKSOLVE
            |  Variable 'c3_cr          ' (var. no. 201)
            |  was made available for backsolving
            |  using equation 'E_c3_cr             ' (eq. no. 151)
            | 
        41  |  BACKSOLVE
            |  Variable 'CNTqms         ' (var. no. 245)
            |  was made available for backsolving
            |  using equation 'E_CNTqms            ' (eq. no. 195)
            | 
        42  |  BACKSOLVE
            |  Variable 'qim            ' (var. no.  24)
            |  was made available for backsolving
            |  using equation 'E_qim               ' (eq. no.  48)
            | 
        43  |  BACKSOLVE
            |  Variable 'CNTtech_ao     ' (var. no. 253)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_ao        ' (eq. no. 203)
            | 
        44  |  BACKSOLVE
            |  Variable 'CNTqca         ' (var. no. 225)
            |  was made available for backsolving
            |  using equation 'E_CNTqca            ' (eq. no. 175)
            | 
        45  |  BACKSOLVE
            |  Variable 'qxs            ' (var. no.  31)
            |  was made available for backsolving
            |  using equation 'E_qxs               ' (eq. no.  51)
            | 
        46  |  BACKSOLVE
            |  Variable 'c1_cr          ' (var. no. 199)
            |  was made available for backsolving
            |  using equation 'E_c1_cr             ' (eq. no. 149)
            | 
        47  |  BACKSOLVE
            |  Variable 'CNTqfeer       ' (var. no. 228)
            |  was made available for backsolving
            |  using equation 'E_CNTqfeer          ' (eq. no. 178)
            | 
        48  |  BACKSOLVE
            |  Variable 'qmw            ' (var. no. 189)
            |  was made available for backsolving
            |  using equation 'E_qmw               ' (eq. no. 139)
            | 
        49  |  BACKSOLVE
            |  Variable 'ppm            ' (var. no.  22)
            |  was made available for backsolving
            |  using equation 'E_ppm               ' (eq. no.  68)
            | 
        50  |  BACKSOLVE
            |  Variable 'qpm            ' (var. no.  20)
            |  was made available for backsolving
            |  using equation 'E_qpm               ' (eq. no.  37)
            | 
        51  |  BACKSOLVE
            |  Variable 'CNTtech_ams    ' (var. no. 259)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_ams       ' (eq. no. 209)
            | 
        52  |  BACKSOLVE
            |  Variable 'CNTqgd         ' (var. no. 241)
            |  was made available for backsolving
            |  using equation 'E_CNTqgd            ' (eq. no. 191)
            | 
        53  |  BACKSOLVE
            |  Variable 'pfm            ' (var. no.   6)
            |  was made available for backsolving
            |  using equation 'E_pfm               ' (eq. no.  66)
            | 
        54  |  BACKSOLVE
            |  Variable 'qva            ' (var. no.  58)
            |  was made available for backsolving
            |  using equation 'E_qva               ' (eq. no.   2)
            | 
        55  |  BACKSOLVE
            |  Variable 'pfob           ' (var. no.  32)
            |  was made available for backsolving
            |  using equation 'E_pfob              ' (eq. no.  59)
            | 
        56  |  BACKSOLVE
            |  Variable 'pint           ' (var. no.  54)
            |  was made available for backsolving
            |  using equation 'E_pint              ' (eq. no.   5)
            | 
        57  |  BACKSOLVE
            |  Variable 'pfe            ' (var. no.  11)
            |  was made available for backsolving
            |  using equation 'E_pfe               ' (eq. no.  80)
            | 
        58  |  BACKSOLVE
            |  Variable 'CNTalleffcr    ' (var. no. 247)
            |  was made available for backsolving
            |  using equation 'E_CNTalleffcr       ' (eq. no. 197)
            | 
        59  |  BACKSOLVE
            |  Variable 'CNTtech_af     ' (var. no. 257)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_af        ' (eq. no. 207)
            | 
        60  |  BACKSOLVE
            |  Variable 'CNTtech_aint   ' (var. no. 256)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_aint      ' (eq. no. 206)
            | 
        61  |  BACKSOLVE
            |  Variable 'CNTtech_afe    ' (var. no. 254)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_afe       ' (eq. no. 204)
            | 
        62  |  BACKSOLVE
            |  Variable 'afe            ' (var. no.  63)
            |  was made available for backsolving
            |  using equation 'E_afe               ' (eq. no.  14)
            | 
        63  |  BACKSOLVE
            |  Variable 'qid            ' (var. no.  23)
            |  was made available for backsolving
            |  using equation 'E_qid               ' (eq. no.  47)
            | 
        64  |  BACKSOLVE
            |  Variable 'pva            ' (var. no.  57)
            |  was made available for backsolving
            |  using equation 'E_pva               ' (eq. no.   7)
            | 
        65  |  BACKSOLVE
            |  Variable 'qgm            ' (var. no.  16)
            |  was made available for backsolving
            |  using equation 'E_qgm               ' (eq. no.  43)
            | 
        66  |  BACKSOLVE
            |  Variable 'CNTqo          ' (var. no. 224)
            |  was made available for backsolving
            |  using equation 'E_CNTqo             ' (eq. no. 174)
            | 
        67  |  BACKSOLVE
            |  Variable 'CNTtech_atmfsd ' (var. no. 258)
            |  was made available for backsolving
            |  using equation 'E_CNTtech_atmfsd    ' (eq. no. 208)
            | 
        68  |  BACKSOLVE
            |  Variable 'CNTqgm         ' (var. no. 240)
            |  was made available for backsolving
            |  using equation 'E_CNTqgm            ' (eq. no. 190)
            | 
        69  |  BACKSOLVE
            |  Variable 'ppd            ' (var. no.  21)
            |  was made available for backsolving
            |  using equation 'E_ppd               ' (eq. no.  67)
            | 
        70  |  BACKSOLVE
            |  Variable 'pgm            ' (var. no.  18)
            |  was made available for backsolving
            |  using equation 'E_pgm               ' (eq. no.  70)
            | 
        71  |  BACKSOLVE
            |  Variable 'CNTqxs         ' (var. no. 243)
            |  was made available for backsolving
            |  using equation 'E_CNTqxs            ' (eq. no. 193)
            | 
        72  |  BACKSOLVE
            |  Variable 'qpev           ' (var. no. 214)
            |  was made available for backsolving
            |  using equation 'E_qpev              ' (eq. no. 157)
            | 
        73  |  BACKSOLVE
            |  Variable 'aint           ' (var. no.  56)
            |  was made available for backsolving
            |  using equation 'E_aint              ' (eq. no.  15)



     =============================
     Final status of all Equations
     =============================

  Number |      Equation        | Status of equation             |  Max   
         |        name          |                                | number 
 --------|----------------------|--------------------------------|--------
         |                      |                                |        
     1   | E_qint               | Used for BACKSOLVING           |[         0]
     2   | E_qva                | Used for BACKSOLVING           |[         0]
     3   | E_qo                 | In the condensed system        |         0
     4   | E_qfa                | Used for BACKSOLVING           |[         0]
     5   | E_pint               | Used for BACKSOLVING           |[         0]
     6   | E_qfe                | Used for BACKSOLVING           |[         0]
     7   | E_pva                | Used for BACKSOLVING           |[         0]
     8   | E_qfd                | Used for BACKSOLVING           |[         0]
     9   | E_qfm                | Used for BACKSOLVING           |[         0]
    10   | E_pfa                | Used for BACKSOLVING           |[         0]
    11   | E_ao                 | In the condensed system        |         0
    12   | E_afa                | Used for BACKSOLVING           |[         0]
    13   | E_ava                | In the condensed system        |         0
    14   | E_afe                | Used for BACKSOLVING           |[         0]
    15   | E_aint               | Used for BACKSOLVING           |[         0]
    16   | E_qca                | Used for BACKSOLVING           |[         0]
    17   | E_po                 | In the condensed system        |         0
    18   | E_ps                 | Used for BACKSOLVING           |[         0]
    19   | E_pb                 | In the condensed system        |         0
    20   | E_pca                | Used for BACKSOLVING           |[         0]
    21   | E_qc                 | In the condensed system        |         0
    22   | E_fincome            | In the condensed system        |         0
    23   | E_y                  | In the condensed system        |         0
    24   | E_qsave              | In the condensed system        |         0
    25   | E_yg                 | In the condensed system        |         0
    26   | E_yp                 | In the condensed system        |         0
    27   | E_uelas              | In the condensed system        |         0
    28   | E_dpav               | In the condensed system        |         0
    29   | E_p                  | In the condensed system        |         0
    30   | E_u                  | In the condensed system        |         0
    31   | E_dpsum              | In the condensed system        |         0
    32   | E_qpa                | In the condensed system        |         0
    33   | E_uepriv             | In the condensed system        |         0
    34   | E_ppriv              | In the condensed system        |         0
    35   | E_up                 | In the condensed system        |         0
    36   | E_qpd                | Used for BACKSOLVING           |[         0]
    37   | E_qpm                | Used for BACKSOLVING           |[         0]
    38   | E_ppa                | In the condensed system        |         0
    39   | E_qga                | In the condensed system        |         0
    40   | E_pgov               | In the condensed system        |         0
    41   | E_ug                 | In the condensed system        |         0
    42   | E_qgd                | Used for BACKSOLVING           |[         0]
    43   | E_qgm                | Used for BACKSOLVING           |[         0]
    44   | E_pga                | In the condensed system        |         0
    45   | E_qia                | Used for BACKSOLVING           |[         0]
    46   | E_pinv               | In the condensed system        |         0
    47   | E_qid                | Used for BACKSOLVING           |[         0]
    48   | E_qim                | Used for BACKSOLVING           |[         0]
    49   | E_pia                | In the condensed system        |         0
    50   | E_qms                | In the condensed system        |         0
    51   | E_qxs                | Used for BACKSOLVING           |[         0]
    52   | E_pms                | In the condensed system        |         0
    53   | E_qtmfsd             | Used for BACKSOLVING           |[         0]
    54   | E_ptrans             | Used for BACKSOLVING           |[         0]
    55   | E_qtm                | In the condensed system        |         0
    56   | E_qst                | In the condensed system        |         0
    57   | E_pt                 | In the condensed system        |         0
    58   | E_atmfsd             | Used for BACKSOLVING           |[         0]
    59   | E_pfob               | Used for BACKSOLVING           |[         0]
    60   | E_pcif               | Used for BACKSOLVING           |[         0]
    61   | E_pmds               | Used for BACKSOLVING           |[         0]
    62   | E_pr                 | In the condensed system        |         0
    63   | E_qds                | In the condensed system        |         0
    64   | E_pds                | In the condensed system        |         0
    65   | E_pfd                | Used for BACKSOLVING           |[         0]
    66   | E_pfm                | Used for BACKSOLVING           |[         0]
    67   | E_ppd                | Used for BACKSOLVING           |[         0]
    68   | E_ppm                | Used for BACKSOLVING           |[         0]
    69   | E_pgd                | Used for BACKSOLVING           |[         0]
    70   | E_pgm                | Used for BACKSOLVING           |[         0]
    71   | E_pid                | In the condensed system        |         0
    72   | E_pim                | In the condensed system        |         0
    73   | E_atpd               | In the condensed system        |         0
    74   | E_atpm               | In the condensed system        |         0
    75   | E_pe1                | In the condensed system        |         0
    76   | E_qes1               | In the condensed system        |         0
    77   | E_qes2               | In the condensed system        |         0
    78   | E_pe2                | In the condensed system        |         0
    79   | E_qes3               | In the condensed system        |         0
    80   | E_pfe                | Used for BACKSOLVING           |[         0]
    81   | E_pes                | Used for BACKSOLVING           |[         0]
    82   | E_peb                | In the condensed system        |         0
    83   | E_ke                 | In the condensed system        |         0
    84   | E_rental             | In the condensed system        |         0
    85   | E_rorc               | In the condensed system        |         0
    86   | E_kb                 | In the condensed system        |         0
    87   | E_rore               | In the condensed system        |         0
    88   | E_qinv               | In the condensed system        |         0
    89   | E_expand             | In the condensed system        |         0
    90   | E_globalcgds         | In the condensed system        |         1
    91   | E_psave              | In the condensed system        |         0
    92   | E_pcgdswld           | In the condensed system        |         1
    93   | E_del_taxrout        | In the condensed system        |         0
    94   | E_del_taxrfu         | In the condensed system        |         0
    95   | E_del_taxriu         | In the condensed system        |         0
    96   | E_del_taxrpc         | In the condensed system        |         0
    97   | E_del_taxrgc         | In the condensed system        |         0
    98   | E_del_taxric         | In the condensed system        |         0
    99   | E_del_taxrexp        | In the condensed system        |         0
   100   | E_del_taxrimp        | In the condensed system        |         0
   101   | E_del_taxrinc        | In the condensed system        |         0
   102   | E_del_indtaxr        | In the condensed system        |         0
   103   | E_del_ttaxr          | In the condensed system        |         0
   104   | E_pfactor            | In the condensed system        |         0
   105   | E_rorg               | In the condensed system        |         1
   106   | E_walras_sup         | In the condensed system        |         1
   107   | E_walras_dem         | In the condensed system        |         1
   108   | E_walraslack         | In the condensed system        |         1
   109   | E_pfactreal          | Used for BACKSOLVING           |[         0]
   110   | E_psw                | In the condensed system        |         0
   111   | E_pdw                | In the condensed system        |         0
   112   | E_tot                | In the condensed system        |         0
   113   | E_vgdp               | In the condensed system        |         0
   114   | E_pgdp               | In the condensed system        |         0
   115   | E_qgdp               | In the condensed system        |         0
   116   | E_compvalad          | Used for BACKSOLVING           |[         0]
   117   | E_vxwfob             | In the condensed system        |         0
   118   | E_vxwreg             | In the condensed system        |         0
   119   | E_vxwcom             | In the condensed system        |         0
   120   | E_vxwwld             | In the condensed system        |         1
   121   | E_vmwcif             | In the condensed system        |         0
   122   | E_vmwreg             | In the condensed system        |         0
   123   | E_vmwcom             | In the condensed system        |         0
   124   | E_valuew             | In the condensed system        |         0
   125   | E_valuewu            | In the condensed system        |         0
   126   | E_pxw                | In the condensed system        |         0
   127   | E_pxwreg             | In the condensed system        |         0
   128   | E_pxwcom             | In the condensed system        |         0
   129   | E_pxwwld             | In the condensed system        |         1
   130   | E_pmw                | In the condensed system        |         0
   131   | E_pmwreg             | In the condensed system        |         0
   132   | E_pmwcom             | In the condensed system        |         0
   133   | E_pw                 | In the condensed system        |         0
   134   | E_pwu                | In the condensed system        |         0
   135   | E_qxw                | In the condensed system        |         0
   136   | E_qxwreg             | In the condensed system        |         0
   137   | E_qxwcom             | In the condensed system        |         0
   138   | E_qxwwld             | In the condensed system        |         1
   139   | E_qmw                | Used for BACKSOLVING           |[         0]
   140   | E_qmwreg             | In the condensed system        |         0
   141   | E_qmwcom             | In the condensed system        |         0
   142   | E_qow                | In the condensed system        |         0
   143   | E_qowu               | In the condensed system        |         0
   144   | E_del_tbalc          | In the condensed system        |         0
   145   | E_del_tbal           | In the condensed system        |         0
   146   | E_ywld               | In the condensed system        |         1
   147   | E_del_tbalry         | In the condensed system        |         0
   148   | E_pm_cr              | In the condensed system        |         0
   149   | E_c1_cr              | Used for BACKSOLVING           |[         0]
   150   | E_c2_cr              | Used for BACKSOLVING           |[         0]
   151   | E_c3_cr              | Used for BACKSOLVING           |[         0]
   152   | E_c1_r               | In the condensed system        |         0
   153   | E_c2_r               | In the condensed system        |         0
   154   | E_c3_r               | In the condensed system        |         0
   155   | E_tot2               | In the condensed system        |         0
   156   | E_ugev               | In the condensed system        |         0
   157   | E_qpev               | Used for BACKSOLVING           |[         0]
   158   | E_upev               | In the condensed system        |         0
   159   | E_ueprivev           | In the condensed system        |         0
   160   | E_dpavev             | In the condensed system        |         0
   161   | E_uelasev            | In the condensed system        |         0
   162   | E_ypev               | In the condensed system        |         0
   163   | E_ygev               | In the condensed system        |         0
   164   | E_ysaveev            | In the condensed system        |         0
   165   | E_qsaveev            | In the condensed system        |         0
   166   | E_yev                | In the condensed system        |         0
   167   | E_EV                 | In the condensed system        |         0
   168   | E_WEV                | In the condensed system        |         1
   169   | E_EV_ALT             | In the condensed system        |         0
   170   | E_WEV_ALT            | In the condensed system        |         1
   171   | E_CNTdpar            | In the condensed system        |         0
   172   | E_CNTpop             | In the condensed system        |         0
   173   | E_CNTqor             | In the condensed system        |         0
   174   | E_CNTqo              | Used for BACKSOLVING           |[         0]
   175   | E_CNTqca             | Used for BACKSOLVING           |[         0]
   176   | E_CNTqe              | Used for BACKSOLVING           |[         0]
   177   | E_CNTqfer            | In the condensed system        |         0
   178   | E_CNTqfeer           | Used for BACKSOLVING           |[         0]
   179   | E_CNTqfe             | Used for BACKSOLVING           |[         0]
   180   | E_CNTqfr             | Used for BACKSOLVING           |[         0]
   181   | E_CNTqfm             | Used for BACKSOLVING           |[         0]
   182   | E_CNTqfd             | Used for BACKSOLVING           |[         0]
   183   | E_CNTqpm             | Used for BACKSOLVING           |[         0]
   184   | E_CNTqpd             | Used for BACKSOLVING           |[         0]
   185   | E_CNTqpr             | In the condensed system        |         0
   186   | E_CNTqia             | In the condensed system        |         0
   187   | E_CNTqim             | Used for BACKSOLVING           |[         0]
   188   | E_CNTqid             | Used for BACKSOLVING           |[         0]
   189   | E_CNTqgr             | Used for BACKSOLVING           |[         0]
   190   | E_CNTqgm             | Used for BACKSOLVING           |[         0]
   191   | E_CNTqgd             | Used for BACKSOLVING           |[         0]
   192   | E_CNTqxsr            | In the condensed system        |         0
   193   | E_CNTqxs             | Used for BACKSOLVING           |[         0]
   194   | E_CNTqmsr            | In the condensed system        |         0
   195   | E_CNTqms             | Used for BACKSOLVING           |[         0]
   196   | E_CNTalleffr         | Used for BACKSOLVING           |[         0]
   197   | E_CNTalleffcr        | Used for BACKSOLVING           |[         0]
   198   | E_CNTtotr            | In the condensed system        |         0
   199   | E_CNTpinv            | In the condensed system        |         0
   200   | E_CNTendwr           | In the condensed system        |         0
   201   | E_CNTendw            | Used for BACKSOLVING           |[         0]
   202   | E_CNTtechr           | Used for BACKSOLVING           |[         0]
   203   | E_CNTtech_ao         | Used for BACKSOLVING           |[         0]
   204   | E_CNTtech_afe        | Used for BACKSOLVING           |[         0]
   205   | E_CNTtech_ava        | Used for BACKSOLVING           |[         0]
   206   | E_CNTtech_aint       | Used for BACKSOLVING           |[         0]
   207   | E_CNTtech_af         | Used for BACKSOLVING           |[         0]
   208   | E_CNTtech_atmfsd     | Used for BACKSOLVING           |[         0]
   209   | E_CNTtech_ams        | Used for BACKSOLVING           |[         0]
   210   | E_CNTkb              | In the condensed system        |         0
 
 
 Maximum number of equations in condensed system is 12



     =============================
     Final status of all Variables
     =============================

  Number |    Variable     | Status of variable                  |   Max  
         |      name       |                                     |  size  
 --------|-----------------|-------------------------------------|--------
         |                 |                                     |
     1   | pds             | In the condensed system             |         0
     2   | qfd             | You can BACKSOLVE for its values    |         0B
     3   | pms             | In the condensed system             |         0
     4   | qfm             | You can BACKSOLVE for its values    |         0B
     5   | pfd             | You can BACKSOLVE for its values    |         0B
     6   | pfm             | You can BACKSOLVE for its values    |         0B
     7   | pes             | You can BACKSOLVE for its values    |         0B
     8   | qes             | In the condensed system             |         0
     9   | peb             | In the condensed system             |         0
    10   | qfe             | You can BACKSOLVE for its values    |         0B
    11   | pfe             | You can BACKSOLVE for its values    |         0B
    12   | ps              | You can BACKSOLVE for its values    |         0B
    13   | qca             | You can BACKSOLVE for its values    |         0B
    14   | pca             | You can BACKSOLVE for its values    |         0B
    15   | qgd             | You can BACKSOLVE for its values    |         0B
    16   | qgm             | You can BACKSOLVE for its values    |         0B
    17   | pgd             | You can BACKSOLVE for its values    |         0B
    18   | pgm             | You can BACKSOLVE for its values    |         0B
    19   | qpd             | You can BACKSOLVE for its values    |         0B
    20   | qpm             | You can BACKSOLVE for its values    |         0B
    21   | ppd             | You can BACKSOLVE for its values    |         0B
    22   | ppm             | You can BACKSOLVE for its values    |         0B
    23   | qid             | You can BACKSOLVE for its values    |         0B
    24   | qim             | You can BACKSOLVE for its values    |         0B
    25   | pid             | In the condensed system             |         0
    26   | pim             | In the condensed system             |         0
    27   | psave           | In the condensed system             |         0
    28   | qsave           | In the condensed system             |         0
    29   | pinv            | In the condensed system             |         0
    30   | kb              | In the condensed system             |         0
    31   | qxs             | You can BACKSOLVE for its values    |         0B
    32   | pfob            | You can BACKSOLVE for its values    |         0B
    33   | pcif            | You can BACKSOLVE for its values    |         0B
    34   | pmds            | You can BACKSOLVE for its values    |         0B
    35   | qst             | In the condensed system             |         0
    36   | y               | In the condensed system             |         0
    37   | pop             | In the condensed system             |         0
    38   | pgov            | In the condensed system             |         0
    39   | yg              | In the condensed system             |         0
    40   | ug              | In the condensed system             |         0
    41   | ppriv           | In the condensed system             |         0
    42   | yp              | In the condensed system             |         0
    43   | uepriv          | In the condensed system             |         0
    44   | up              | In the condensed system             |         0
    45   | to              | In the condensed system             |         0
    46   | tinc            | In the condensed system             |         0
    47   | endwslack       | In the condensed system             |         0
    48   | qms             | In the condensed system             |         0
    49   | globalcgds      | In the condensed system             |         1
    50   | pcgdswld        | In the condensed system             |         1
    51   | po              | In the condensed system             |         0
    52   | qo              | In the condensed system             |         0
    53   | ao              | In the condensed system             |         0
    54   | pint            | You can BACKSOLVE for its values    |         0B
    55   | qint            | You can BACKSOLVE for its values    |         0B
    56   | aint            | You can BACKSOLVE for its values    |         0B
    57   | pva             | You can BACKSOLVE for its values    |         0B
    58   | qva             | You can BACKSOLVE for its values    |         0B
    59   | ava             | In the condensed system             |         0
    60   | pfa             | You can BACKSOLVE for its values    |         0B
    61   | qfa             | You can BACKSOLVE for its values    |         0B
    62   | afa             | You can BACKSOLVE for its values    |         0B
    63   | afe             | You can BACKSOLVE for its values    |         0B
    64   | profitslack     | In the condensed system             |         0
    65   | aosec           | In the condensed system             |         0
    66   | aoreg           | In the condensed system             |         0
    67   | aoall           | In the condensed system             |         0
    68   | afcom           | In the condensed system             |         0
    69   | afsec           | In the condensed system             |         0
    70   | afreg           | In the condensed system             |         0
    71   | afall           | In the condensed system             |         0
    72   | avasec          | In the condensed system             |         0
    73   | avareg          | In the condensed system             |         0
    74   | avaall          | OMITTED from condensed system       |[         0]
    75   | afecom          | In the condensed system             |         0
    76   | afesec          | In the condensed system             |         0
    77   | afereg          | In the condensed system             |         0
    78   | afeall          | In the condensed system             |         0
    79   | aintsec         | In the condensed system             |         0
    80   | aintreg         | In the condensed system             |         0
    81   | aintall         | In the condensed system             |         0
    82   | pb              | In the condensed system             |         0
    83   | qc              | In the condensed system             |         0
    84   | fincome         | In the condensed system             |         0
    85   | incomeslack     | In the condensed system             |         0
    86   | del_indtaxr     | In the condensed system             |         0
    87   | uelas           | In the condensed system             |         0
    88   | dpsave          | In the condensed system             |         0
    89   | dpgov           | In the condensed system             |         0
    90   | dppriv          | In the condensed system             |         0
    91   | dpav            | In the condensed system             |         0
    92   | p               | In the condensed system             |         0
    93   | au              | In the condensed system             |         0
    94   | dpsum           | In the condensed system             |         0
    95   | u               | In the condensed system             |         0
    96   | ppa             | In the condensed system             |         0
    97   | qpa             | In the condensed system             |         0
    98   | pga             | In the condensed system             |         0
    99   | qga             | In the condensed system             |         0
   100   | pia             | In the condensed system             |         0
   101   | qia             | You can BACKSOLVE for its values    |         0B
   102   | qinv            | In the condensed system             |         0
   103   | ams             | In the condensed system             |         0
   104   | ptrans          | You can BACKSOLVE for its values    |         0B
   105   | qtmfsd          | You can BACKSOLVE for its values    |         0B
   106   | pt              | In the condensed system             |         0
   107   | qtm             | In the condensed system             |         0
   108   | atmfsd          | You can BACKSOLVE for its values    |         0B
   109   | atm             | In the condensed system             |         0
   110   | atf             | In the condensed system             |         0
   111   | ats             | In the condensed system             |         0
   112   | atd             | In the condensed system             |         0
   113   | atall           | OMITTED from condensed system       |[         0]
   114   | tx              | In the condensed system             |         0
   115   | txs             | In the condensed system             |         0
   116   | tm              | In the condensed system             |         0
   117   | tms             | In the condensed system             |         0
   118   | pr              | In the condensed system             |         0
   119   | qds             | In the condensed system             |         0
   120   | tradslack       | In the condensed system             |         0
   121   | tfd             | OMITTED from condensed system       |[         0]
   122   | tfm             | OMITTED from condensed system       |[         0]
   123   | tpd             | OMITTED from condensed system       |[         0]
   124   | tpm             | OMITTED from condensed system       |[         0]
   125   | tgd             | OMITTED from condensed system       |[         0]
   126   | tgm             | OMITTED from condensed system       |[         0]
   127   | tid             | OMITTED from condensed system       |[         0]
   128   | tim             | OMITTED from condensed system       |[         0]
   129   | atpd            | In the condensed system             |         0
   130   | atpm            | In the condensed system             |         0
   131   | tp              | In the condensed system             |         0
   132   | pe              | In the condensed system             |         0
   133   | qe              | In the condensed system             |         0
   134   | qesf            | In the condensed system             |         0
   135   | tfe             | OMITTED from condensed system       |[         0]
   136   | ke              | In the condensed system             |         0
   137   | rore            | In the condensed system             |         0
   138   | rorc            | In the condensed system             |         0
   139   | rental          | In the condensed system             |         0
   140   | rorg            | In the condensed system             |         1
   141   | cgdslack        | In the condensed system             |         0
   142   | expand          | In the condensed system             |         0
   143   | psaveslack      | In the condensed system             |         0
   144   | del_taxrout     | In the condensed system             |         0
   145   | del_taxrfu      | In the condensed system             |         0
   146   | del_taxriu      | In the condensed system             |         0
   147   | del_taxrpc      | In the condensed system             |         0
   148   | del_taxrgc      | In the condensed system             |         0
   149   | del_taxric      | In the condensed system             |         0
   150   | del_taxrexp     | In the condensed system             |         0
   151   | del_taxrimp     | In the condensed system             |         0
   152   | del_taxrinc     | In the condensed system             |         0
   153   | del_ttaxr       | In the condensed system             |         0
   154   | pfactor         | In the condensed system             |         0
   155   | pfactwld        | In the condensed system             |         1
   156   | walras_sup      | In the condensed system             |         1
   157   | walras_dem      | In the condensed system             |         1
   158   | walraslack      | In the condensed system             |         1
   159   | vxwfob          | In the condensed system             |         0
   160   | vmwcif          | In the condensed system             |         0
   161   | vxwreg          | In the condensed system             |         0
   162   | vmwreg          | In the condensed system             |         0
   163   | pfactreal       | You can BACKSOLVE for its values    |         0B
   164   | psw             | In the condensed system             |         0
   165   | pdw             | In the condensed system             |         0
   166   | tot             | In the condensed system             |         0
   167   | vgdp            | In the condensed system             |         0
   168   | pgdp            | In the condensed system             |         0
   169   | qgdp            | In the condensed system             |         0
   170   | compvalad       | You can BACKSOLVE for its values    |         0B
   171   | pxw             | In the condensed system             |         0
   172   | vxwcom          | In the condensed system             |         0
   173   | vxwwld          | In the condensed system             |         1
   174   | vmwcom          | In the condensed system             |         0
   175   | valuew          | In the condensed system             |         0
   176   | valuewu         | In the condensed system             |         0
   177   | pxwreg          | In the condensed system             |         0
   178   | pxwcom          | In the condensed system             |         0
   179   | pxwwld          | In the condensed system             |         1
   180   | pmw             | In the condensed system             |         0
   181   | pmwreg          | In the condensed system             |         0
   182   | pmwcom          | In the condensed system             |         0
   183   | pw              | In the condensed system             |         0
   184   | pwu             | In the condensed system             |         0
   185   | qxw             | In the condensed system             |         0
   186   | qxwreg          | In the condensed system             |         0
   187   | qxwcom          | In the condensed system             |         0
   188   | qxwwld          | In the condensed system             |         1
   189   | qmw             | You can BACKSOLVE for its values    |         0B
   190   | qmwreg          | In the condensed system             |         0
   191   | qmwcom          | In the condensed system             |         0
   192   | qow             | In the condensed system             |         0
   193   | qowu            | In the condensed system             |         0
   194   | del_tbalc       | In the condensed system             |         0
   195   | del_tbal        | In the condensed system             |         0
   196   | ywld            | In the condensed system             |         1
   197   | del_tbalry      | In the condensed system             |         0
   198   | pm_cr           | In the condensed system             |         0
   199   | c1_cr           | You can BACKSOLVE for its values    |         0B
   200   | c2_cr           | You can BACKSOLVE for its values    |         0B
   201   | c3_cr           | You can BACKSOLVE for its values    |         0B
   202   | c1_r            | In the condensed system             |         0
   203   | c2_r            | In the condensed system             |         0
   204   | c3_r            | In the condensed system             |         0
   205   | tot2            | In the condensed system             |         0
   206   | uelasev         | In the condensed system             |         0
   207   | ueprivev        | In the condensed system             |         0
   208   | ugev            | In the condensed system             |         0
   209   | upev            | In the condensed system             |         0
   210   | qsaveev         | In the condensed system             |         0
   211   | yev             | In the condensed system             |         0
   212   | ypev            | In the condensed system             |         0
   213   | ygev            | In the condensed system             |         0
   214   | qpev            | You can BACKSOLVE for its values    |         0B
   215   | ysaveev         | In the condensed system             |         0
   216   | dpavev          | In the condensed system             |         0
   217   | EV              | In the condensed system             |         0
   218   | WEV             | In the condensed system             |         1
   219   | EV_ALT          | In the condensed system             |         0
   220   | WEV_ALT         | In the condensed system             |         1
   221   | CNTdpar         | In the condensed system             |         0
   222   | CNTpop          | In the condensed system             |         0
   223   | CNTqor          | In the condensed system             |         0
   224   | CNTqo           | You can BACKSOLVE for its values    |         0B
   225   | CNTqca          | You can BACKSOLVE for its values    |         0B
   226   | CNTqe           | You can BACKSOLVE for its values    |         0B
   227   | CNTqfer         | In the condensed system             |         0
   228   | CNTqfeer        | You can BACKSOLVE for its values    |         0B
   229   | CNTqfe          | You can BACKSOLVE for its values    |         0B
   230   | CNTqfr          | You can BACKSOLVE for its values    |         0B
   231   | CNTqfm          | You can BACKSOLVE for its values    |         0B
   232   | CNTqfd          | You can BACKSOLVE for its values    |         0B
   233   | CNTqpm          | You can BACKSOLVE for its values    |         0B
   234   | CNTqpd          | You can BACKSOLVE for its values    |         0B
   235   | CNTqpr          | In the condensed system             |         0
   236   | CNTqia          | In the condensed system             |         0
   237   | CNTqim          | You can BACKSOLVE for its values    |         0B
   238   | CNTqid          | You can BACKSOLVE for its values    |         0B
   239   | CNTqgr          | You can BACKSOLVE for its values    |         0B
   240   | CNTqgm          | You can BACKSOLVE for its values    |         0B
   241   | CNTqgd          | You can BACKSOLVE for its values    |         0B
   242   | CNTqxsr         | In the condensed system             |         0
   243   | CNTqxs          | You can BACKSOLVE for its values    |         0B
   244   | CNTqmsr         | In the condensed system             |         0
   245   | CNTqms          | You can BACKSOLVE for its values    |         0B
   246   | CNTalleffr      | You can BACKSOLVE for its values    |         0B
   247   | CNTalleffcr     | You can BACKSOLVE for its values    |         0B
   248   | CNTtotr         | In the condensed system             |         0
   249   | CNTpinv         | In the condensed system             |         0
   250   | CNTendwr        | In the condensed system             |         0
   251   | CNTendw         | You can BACKSOLVE for its values    |         0B
   252   | CNTtechr        | You can BACKSOLVE for its values    |         0B
   253   | CNTtech_ao      | You can BACKSOLVE for its values    |         0B
   254   | CNTtech_afe     | You can BACKSOLVE for its values    |         0B
   255   | CNTtech_ava     | You can BACKSOLVE for its values    |         0B
   256   | CNTtech_aint    | You can BACKSOLVE for its values    |         0B
   257   | CNTtech_af      | You can BACKSOLVE for its values    |         0B
   258   | CNTtech_atmfsd  | You can BACKSOLVE for its values    |         0B
   259   | CNTtech_ams     | You can BACKSOLVE for its values    |         0B
   260   | CNTkb           | In the condensed system             |         0
 
 
 Maximum number of variables in condensed system is 13

 

              Summary of model
              ----------------
 
 There are 138 equations left in the CONDENSED model.
 0 equations have been used to SUBSTITUTE out variables.
 72 equations have been used to BACKSOLVE for variables.
 The entire model contains 210 equations.
 
 There are 177 variables left in the CONDENSED model.
 0 variables have been SUBSTITUTED out.
 11 variables have been OMITTED.
 You can BACKSOLVE for 72 variables.
 The entire model contains 260 variables.


 ******************************************************************************
 -3-
 -->                     Starting CODE GENERATION

 ******************************************************************************



  CODE OPTIONS CHOSEN
  -------------------
 
 
                         TABLO PORTABLE
               CODE OPTIONS   ( --> indicates those in effect )
 
      NEQ Do no equations           PGS Prepare output for GEMSIM
      NDS Do no displays        --> WFP Write a Fortran Program
      NWR Do no writes                    (i.e. a TABLO-generated program)
                                --> FC5 Fast Compile TG-prog under LF95
      ACC All comment lines in      NMS Don't allow simulations
             code
                                    CIN Code file name same as
                                          Information file name
                                    CDM Old option. Has no effect.
                                    NRZ No run-time reports re use of
                                           ZERODIVIDE default values
                                    NXS No "extra" statements allowed
 
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return

  END OF CODE OPTIONS CHOSEN
  --------------------------
  
 ! ( Program is 'C:\A_Erwin\GTAP-Model-JGEA\GTAPv7-JGEA\gtapv7.for'.)
 (Total number of lines of code is 134823.)
 
 This program
     o can create the Equations file (for the condensed system)
     o can carry out 58 WRITEs
     o can check 15 ASSERTIONs
     o can carry out multi-step simulations
 
 MXGSRS = 0, MXGSIS = 0.
 MXGSLG = 0, MXGSIC = 0.
 
 MXGSOP = 0, MXGSIN = 0.
 MXGSRC = 0, MXGSNS=0.
 ! (Model Information file is
 ! 'C:\A_Erwin\GTAP-Model-JGEA\GTAPv7-JGEA\gtapv7.min'.)
 
 (Total number of programs written is 1.)
 
 *******************************************************************
 Successful completion of TABLO.
 The program is
   'gtapv7.for'.
 
 This program
     o can create the Equations file (for the condensed system)
     o can carry out 58 WRITEs
     o can check 15 ASSERTIONs
     o can carry out multi-step simulations
 
 *******************************************************************
